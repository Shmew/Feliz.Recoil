{"version":3,"sources":["webpack:///../../src/fable-library/Reflection.ts","webpack:///../../src/fable-library/Seq.ts","webpack:///./.fable/fable-library.2.10.0/BigInt/n.js","webpack:///./.fable/fable-library.2.10.0/BigInt/z.js","webpack:///./.fable/fable-library.2.10.0/BigInt.js","webpack:///.fable/Fable.SimpleJson.3.9.0/TypeInfo.Converter.fs","webpack:///../../src/fable-library/BitConverter.ts","webpack:///../../src/fable-library/Types.ts","webpack:///./.fable/Fable.Parsimmon.4.1.0/Parsimmon.js","webpack:///./src/Feliz.Recoil/Hash/xxhash.js","webpack:///.fable/Fable.SimpleJson.3.9.0/Json.Converter.fs","webpack:///../../src/fable-library/DateOffset.ts","webpack:///../../src/fable-library/Date.ts","webpack:///../../src/fable-library/Int32.ts","webpack:///../../src/fable-library/Util.ts","webpack:///./.fable/fable-library.2.10.0/List.js","webpack:///../../../src/fable-library/lib/big.js","webpack:///../../src/fable-library/Decimal.ts","webpack:///.fable/Fable.Parsimmon.4.1.0/Parsimmon.fs","webpack:///.fable/Fable.SimpleJson.3.9.0/Parser.fs","webpack:///.fable/Fable.SimpleJson.3.9.0/SimpleJson.fs","webpack:///.fable/Fable.SimpleJson.3.9.0/TypeCheck.fs","webpack:///./.fable/fable-library.2.10.0/MutableSet.js","webpack:///./.fable/fable-library.2.10.0/Set.js","webpack:///../../src/fable-library/RegExp.ts","webpack:///../../src/fable-library/String.ts","webpack:///src/Feliz.Recoil/Types.fs","webpack:///src/Feliz.Recoil/ComputationExpressions/Atom.fs","webpack:///../../src/fable-library/AsyncBuilder.ts","webpack:///../../src/fable-library/Async.ts","webpack:///../../src/fable-library/Observable.ts","webpack:///../../src/fable-library/Event.ts","webpack:///../../src/fable-library/Timer.ts","webpack:///.fable/Fable.Elmish.3.0.6/prelude.fs","webpack:///.fable/Fable.Elmish.3.0.6/cmd.fs","webpack:///.fable/Feliz.Router.1.9.0/Router.fs","webpack:///src/Feliz.Recoil/ComputationExpressions/Selector.fs","webpack:///.fable/Feliz.1.1.1/Interop.fs","webpack:///./.fable/Feliz.1.1.1/ReactInterop.js","webpack:///.fable/Feliz.1.1.1/React.fs","webpack:///docs/Recoil/Examples/Basic.fs","webpack:///docs/Recoil/Examples/MixAndMatch.fs","webpack:///docs/Recoil/Examples/BidirectionalSelectors.fs","webpack:///docs/Recoil/Examples/Reset.fs","webpack:///.fable/Fable.SimpleHttp.2.7.0/Http.fs","webpack:///docs/Recoil/Examples/Async.fs","webpack:///docs/Recoil/Examples/Callback.fs","webpack:///docs/Recoil/Examples/Loadable.fs","webpack:///docs/Recoil/Examples/Previous.fs","webpack:///docs/Recoil/Examples/ComputationExpressions.fs","webpack:///docs/Recoil/Examples/Nesting.fs","webpack:///docs/Recoil/Examples/Logger.fs","webpack:///src/Feliz.Recoil/ComputationExpressions/SelectorFamily.fs","webpack:///src/Feliz.Recoil/RecoilValue.fs","webpack:///.fable/Fable.Promise.2.1.0/Promise.fs","webpack:///.fable/Fable.Promise.2.1.0/PromiseImpl.fs","webpack:///src/Feliz.Recoil.Elmish/Elmish.fs","webpack:///docs/Recoil/Examples/Elmish.fs","webpack:///src/Feliz.Recoil/Logger.fs","webpack:///docs/Recoil/Examples/Composition.fs","webpack:///src/Feliz.Recoil/ComputationExpressions/AtomFamily.fs","webpack:///docs/Recoil/Examples/AtomFamily.fs","webpack:///docs/Recoil/Examples/SelectorFamily.fs","webpack:///docs/Recoil/Examples/Concurrency.fs","webpack:///docs/App.fs","webpack:///./src/Feliz.Recoil/Hash/uint32.js","webpack:///../../../src/fable-library/lib/long.js","webpack:///../../src/fable-library/Long.ts","webpack:///../../src/fable-library/Option.ts","webpack:///./.fable/fable-library.2.10.0/Array.js","webpack:///./.fable/fable-library.2.10.0/MutableMap.js","webpack:///./.fable/fable-library.2.10.0/Map.js","webpack:///../../src/fable-library/Double.ts"],"names":["t","i","x","BigNat","declare","bound","digits","this","Record","BigNatModule$002EFFT$$$pow32","$x$$1","$n$$2","n","fromBits","initialize","BigNatModule$002EFFT$$$maxTwoPower","i$$1","Int32Array","BigNatModule$$$bound","n$$10","BigNatModule$$$coeff","n$$12","i$$5","BigNatModule$$$coeff64","n$$13","i$$6","fromInteger","BigNatModule$$$setCoeff","n$$14","i$$7","v$$4","BigNatModule$$$pow64","$x$$23$$48","$n$$15$$49","x$$23","n$$15","op_Multiply","BigNatModule$$$pow32","$x$$24$$50","$n$$16$$51","x$$24","n$$16","BigNatModule$$$maxInt","a","b$$2","BigNatModule$$$baseNi64","BigNatModule$$$baseMaski64","BigNatModule$$$divbase","x$$25","BigNatModule$$$modbase","x$$26","BigNatModule$$$createN","b$$4","BigNatModule$$$normN","n$$18","bound$$1","$na$$62","$i$$9$$63","na","i$$9","findLeastBound","BigNatModule$$$embed","x$$28","x$$29","r$$2","r$$3","i$$10","BigNatModule$$$boundInt","BigNatModule$$$one","BigNatModule$$$zero","BigNatModule$$$degree","n$$24","BigNatModule$$$add","p$$1","q$$1","rbound","r$$6","$i$$16$$75","$n$$25$$76","$c$$77","$p$$78","$q$$79","$r$$5$$80","i$$16","n$$25","c","p","q","r$$5","x$$32","BigNatModule$$$addP","BigNatModule$$$isZero","p$$4","BigNatModule$$$equal","p$$7","q$$4","$pa$$96","$qa$$97","$i$$22$$98","pa","qa","i$$22","check","BigNatModule$$$compare","p$$9","q$$6","$pa$$2$$108","$qa$$2$$109","$i$$24$$110","pa$$2","qa$$2","i$$24","check$$2","BigNatModule$$$lt","p$$10","q$$7","BigNatModule$$$mulSchoolBookCarry","$r$$12$$130","$c$$8$$131","$k$$4$$132","value$$2","r$$12","c$$8","k$$4","compare","rak$$1","op_Addition","op_BitwiseAnd","toInt","op_Division","BigNatModule$$$mulSchoolBookOneSmall","p$$16","q$$12","value$$3","bp","r$$13","q$$13","c$$9","i$$28","rak$$2","BigNatModule$$$mulSchoolBook","p$$18","q$$15","p$$15","q$$11","value$$1","r$$11","rak","pSmall","qSmall","p$$17","q$$14","value$$4","r$$14","i$$29","pai$$1","c$$10","k$$5","j$$1","qaj","rak$$3","BigNatModule$$$mulSchoolBookNeitherSmall","BigNatModule$002Eencoding","bigL","twoToBigL","k","bigK","bigN","split","splits","BigNatModule$$$mkEncoding","k$$6","bigK$$2","i$$30","BigNatModule$$$table","i$$32","i$$33","i$$34","Array","BigNatModule$$$mul","p$$20","q$$17","BigNatModule$$$scaleSubInPlace","x$$57","f","a$$5","n$$30","patternInput$$2","patternInput$$3","f$$1","j$$4","z$$7","Error","zLo","x$$59","value$$5","zHi","x$$60","BigNatModule$$$scaleAddInPlace","x$$62","f$$3","a$$8","n$$32","patternInput$$4","patternInput$$5","f$$4","j$$5","z$$8","zLo$$1","x$$64","value$$7","zHi$$1","x$$65","BigNatModule$$$removeFactor","x$$67","a$$11","n$$34","f$$6","p$$8","pn","q$$5","qn","patternInput$$6","f64","f64$$1","$pa$$1$$103","$qa$$1$$104","$i$$23$$105","pa$$1","qa$$1","i$$23","pai","qai","check$$1","BigNatModule$$$divmod","b$$7","a$$12","x$$68","x$$27","copy","d$$6","p$$21","m$$2","n$$35","finished","f$$7","BigNatModule$$$toFloat","n$$40","$acc$$4$$219","$k$$10$$220","$i$$49$$221","acc$$4","k$$10","i$$49","evalFloat","BigNatModule$$$ofInt32","n$$41","BigNatModule$$$ofInt64","n$$42","x$$30","x$$31","r$$4","i$$11","BigNatModule$$$boundInt64","op_Modulus","BigNatModule$$$embed64","BigNatModule$$$toString","n$$45","arg00","degn","kten2ks","$prior$$227","$k$$11$$228","$ten2k$$229","prior","k$$11","ten2k","List","route","digits$$4","collect","isLeading","n$$46","_arg1$$1","tail","patternInput$$13","head","digits$$2","n$$47","n$$19","acc","i$$12","BigNatModule$$$eval32","int32ToString","ofList","join","BigNatModule$$$ofString","str","len","length","isNullOrEmpty","ten","$acc$$5$$235","$i$$50$$236","acc$$5","i$$50","d$$7","charCodeAt","build","BigNatModule$$$isSmall","n$$48","BigNatModule$$$getSmall","n$$49","BigInteger","signInt","v","BigInteger$$$$002Ector$$Z2BE94A1","call","BigInteger$$$nat$$Z67CCE57D","n$$1","BigNatModule$0024$0024$0024isSmall","BigNatModule$0024$0024$0024getSmall","smallLim","smallPosTab","BigInteger$$$posn$$Z67CCE57D","n$$3","BigInteger$$$negn$$Z67CCE57D","n$$4","BigInteger$$get_SignInt","x$$1","BigInteger$$get_V","x$$2","BigInteger$$$op_Equality$$56F059C0","x$$3","y","matchValue","BigNatModule$0024$0024$0024equal","BigNatModule$0024$0024$0024isZero","BigInteger$$$op_LessThan$$56F059C0","x$$5","y$$2","matchValue$$1","BigNatModule$0024$0024$0024lt","BigInteger$$$$002Ector$$Z524259A4","n$$6","BigNatModule$0024$0024$0024ofInt32","BigNatModule$0024$0024$0024ofInt64","op_UnaryNegation","op_UnaryNegation_Int32","BigInteger$$$$002Ector$$Z524259C1","n$$7","equals","BigNatModule$0024$0024$0024add","BigNatModule$0024$0024$0024one","BigInteger$$$get_One","one","BigInteger$$$get_Two","two","BigInteger$$$get_Zero","zero","BigInteger$$get_ToDouble","x$$34","BigNatModule$0024$0024$0024toFloat","BigInteger$$$Parse$$Z721C83C5","text","text$$1","trim","matchValue$$13","BigNatModule$0024$0024$0024ofString","slice","prototype","toString","BigNatModule$0024$0024$0024toString","Equals","obj","GetHashCode","z","n$$17","res$$2","i$$8","BigNatModule$0024$0024$0024hash","CompareTo","obj$$1","n$$5","nn","parse","BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5","BigInteger$0024$0024$0024get_Zero","BigInteger$0024$0024$0024get_One","BigInteger$0024$0024$0024get_Two","fromInt32","value","BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1","BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4","toDecimal","x$$11","x$$40","Decimal","arg0","flattenFuncTypes","typeDef","patternInput","lazyToDelayed","l","unitVar0","Value","_createTypeInfo","resolvedType","activePatternResult2369","primType","( |PrimitiveType|_| )","typeInfo","activePatternResult2368","( |FuncType|_| )","types","createTypeInfo","activePatternResult2367","array","prop","( |RecordType|_| )","fields","activePatternResult2366","info","caseName","caseTypes","( |UnionType|_| )","cases","activePatternResult2365","( |EnumType|_| )","elemType","activePatternResult2364","( |ListType|_| )","activePatternResult2363","( |ResizeArrayType|_| )","activePatternResult2362","( |HashSetType|_| )","activePatternResult2361","( |ArrayType|_| )","activePatternResult2360","( |TupleType|_| )","activePatternResult2359","( |OptionType|_| )","activePatternResult2358","( |SetType|_| )","activePatternResult2357","genArgs","( |MapType|_| )","keyType","valueType","activePatternResult2356","( |DictionaryType|_| )","activePatternResult2355","( |SeqType|_| )","activePatternResult2354","( |AsyncType|_| )","activePatternResult2353","( |PromiseType|_| )","typeInfoCache","ti","isPrimitive","_arg1","enumUnion","case","o","Parsimmon","action","_","times","reduce","seed","arr","forEach","elem","map","concat","bufferExists","Buffer","isParser","isArray","isBuffer","makeSuccess","index","status","furthest","expected","makeFailure","mergeReplies","result","last","xs","ys","j","keys","hasOwnProperty","push","sort","union","makeLineColumnIndex","input","offset","line","column","lines","assertParser","get","charAt","assertNumber","assertRegexp","RegExp","flags","assertFunction","assertString","repeat","string","amount","leftPad","pad","char","add","rangeFromIndexAndOffsets","before","after","from","to","formatGot","error","lineWithErrorIndex","lineRange","lastLineNumberLabelLength","verticalMarkerLength","byteLineWithErrorIndex","columnByteIndex","byteRange","bytesPerLine","bytesAfter","byteLines","byteRow","byteValue","chunkSize","chunks","chunkIndex","toChunks","toJSON","data","Math","floor","byteRangeToRange","byteLine","inputLines","lineWithErrorCurrentIndex","lineSource","lineNumberLabel","isLineWithError","prefix","re","s","lastIndexOf","anchoredRegexp","source","seq","parsers","arguments","numParsers","accum","seqMap","args","mapper","pop","apply","results","alt","fail","sepBy1","parser","separator","then","many","r","rs","regexp","group","anchored","match","exec","fullMatch","groupMatch","succeed","lookahead","test","predicate","oneOf","idx","ch","indexOf","desc","noneOf","takeWhile","lazy","undefined","skip","eof","tryParse","msg","err","type","or","alternative","wrap","leftParser","rightParser","left","middle","thru","wrapper","next","self","tieWith","assertArray","tie","min","max","prevResult","res","atMost","atLeast","init","rest","fn","contramap","promap","g","mark","start","end","node","name","sepBy","notFollowedBy","reply","fallback","ap","other","chain","empty","of","any","all","digit","letter","letters","optWhitespace","whitespace","cr","lf","newline","UINT32","xxh_update","low","high","c16","c00","b00","PRIME32_2","_low","b16","_high","a00","a16","PRIME32_1","PRIME32_3","PRIME32_4","PRIME32_5","XXH","update","digest","clone","v1","v2","v3","v4","subtract","total_len","memsize","memory","isArrayBuffer","isString","utf8","charcode","Uint8Array","toUTF8Array","ArrayBuffer","bEnd","set","subarray","p32","limit","h32","h","u","rotl","fromNumber","multiply","shiftRight","xor","flattenMap","json","( |MapEmpty|_| )","activePatternResult2515","key","activePatternResult2510","( |MapKey|_| )","( |MapOne|_| )","activePatternResult2514","right","activePatternResult2512","( |MapNode|_| )","generateMap","leftMap","rightMap","foundCase","clo1","clo2","testExpr","comparer","getlElemType","getElemType","getTypes","values","jsonValue","optionalTypeDelayed","arg20","insideBrowser","activePatternResult2529","caseNames","expectedCases","clo3","arrayLike","deserialized","fromJsonAs","parsedOptional","arg30","parsedValues","array2","tupledArg","_arg2","caseInfo","caseType","unexpectedJson","expectedType","dict","isQuoted","_arg3","list","lowBytes","highBytes","combinedBytes","_arg4","serializedRecord","caseValue","elementTypeDelayed","tupleTypesDelayed","tuples","getType","items","_arg5","otherwise","_arg6","_arg7","foundCaseName","elementType","elements","converted","tupleTypes","recordValues","_arg8","dictKeys","arg10","strings","recordFields","clo4","pairs","keyValuePair","tuple","output","inputSequence","forLoopVar","hashset","item","tree","inputJson","unknownType","rep","utc","date","getUTCHours","getHours","m","baseDate","tryHead","some","_arg1$$2","foldIndexed","state","xs$$7","$f$$12","$i$$13","$acc$$14","$_arg1$$5$$15","_arg1$$5","foldIndexedAux","fold","$f$$2$$19","$state$$1$$20","$xs$$8$$21","f$$2","state$$1","xs$$8","reverse","xs$$9","acc$$1","x$$6","foldBack","xs$$10","state$$2","acc$$2","x$$7","ofSeq","xs$$12","fold$$1","acc$$3","x$$9","lists","state$$3","xs$$14","x$$10","xs$$27","acc$$9","_arg1$$7","append","xs$$28","ys$$10","acc$$10","x$$15","f$$15","xs$$29","collect$$1","f$$16","xs$$31","acc$$11","x$$16","indexed","xs$$35","f$$17","i$$4","x$$18","xs$$33","i$$3","acc$$12","x$$17","iterate","f$$24","xs$$46","ofArray","xs$$50","res$$1","count","tryPickIndexed","f$$29","xs$$52","$f$$28$$120","$i$$10$$121","$_arg1$$9$$122","tryPickIndexedAux","f$$28","_arg1$$9","tryFindIndexed","f$$32","xs$$55","tryFind","f$$33","xs$$56","_arg1$$11","findIndexed","f$$34","xs$$57","matchValue$$6","find","f$$35","xs$$58","_arg1$$12","tryItem","xs$$70","i$$14","_arg1$$14","filter","f$$42","xs$$71","acc$$17","x$$37","choose","f$$44","xs$$74","acc$$18","x$$39","matchValue$$8","y$$10","contains","eq","$xs$$76$$162","xs$$76","loop$$1","f$$47","_arg1$$16","forAll","f$$49","xs$$79","acc$$19","x$$41","skipWhile","$predicate$$243","$xs$$120$$244","$target$$245","t$$4","xs$$120","takeSplitAux","$error$$246","$i$$21$$247","$acc$$25$$248","$xs$$121$$249","i$$21","acc$$25","xs$$121","splitAt","xs$$129","$target$$260","xs$$131","rm","P","e","content","others","keep","skipped","ps","jint","dot","decimals","digitsLeft","jfloat","negativeJFloat","negJint","escape","escapedCharSnippet","normalCharSnippet","anyCharSnippet","otherParser","stringLiteral","withWhitespace","jnull","jbool","jnumber","jstring","jarray","comma","leftBrace","rightBrace","keyValues","jobject","Map","jvalue","copyOfStruct","isDateOffset","dateOffset","isBigInt","bigInt","activePatternResult2440","activePatternResult2439","number","activePatternResult2438","activePatternResult2436","parseNative'","activePatternResult2435","object","firstKey","nextDict","MutableSet$00601","this$","FSharpRef","contents","hashMap","MutableSet$00601$$Add$$2B595","MutableSet$00601$$$$002Ector$$Z6150332D","MutableSet$00601$$TryFindIndex$$2B595","this$$$1","tryGetValue","findIndex","MutableSet$00601$$Clear","this$$$4","clear","MutableSet$00601$$get_Count","this$$$5","sumBy","GetZero","Add","$x$$2","$y$$3","this$$$6","k$$2","matchValue$$2","getItemFromDict","MutableSet$00601$$Contains$$2B595","this$$$7","k$$3","matchValue$$3","MutableSet$00601$$Remove$$2B595","this$$$8","matchValue$$4","splice","Symbol","iterator","elems","this$$$9","toIterator","delay","values$$1","getEnumerator","item$$1","Clear","Contains","item$$2","CopyTo","arrayIndex","iterateIndexed","Object","defineProperty","Remove","item$$3","add_","k$$7","has","k$$8","entries","v$$1","SetTree$00601","tag","Union","SetTreeModule$$$SetOne","SetTreeModule$$$SetNode","l$$1","r$$1","SetTreeModule$$$height","SetTreeModule$$$mk","l$$2","hl","hr","SetTreeModule$$$rebalance","t1","k$$1","t2","t1h","t2h","SetTreeModule$$$add","t$$1","c$$1","Compare","SetTreeModule$$$iter","$f$$38","$t$$6$$39","t$$6","SetTreeModule$002ESetIterator$00601","stack","started","SetTreeModule$$$collapseLHS","$stack$$104","SetTreeModule$$$mkIterator","s$$13","SetTreeModule$$$current","SetTreeModule$$$alreadyFinished","SetTreeModule$$$notStarted","SetTreeModule$002EmkIEnumerator$00601","s$$14","SetTreeModule$$$mkIEnumerator","s$$15","SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56","SetTreeModule$$$compare","comparer$$18","s1","s2","$comparer$$17$$112","$l1$$113","$l2$$114","SetTreeModule$$$compareStacks","$target$$115","t1$$6","t2$$6","n1k","n2k","t1$$7","t2$$7","n1k$$1","n2k$$1","n2r","t1$$8","t2$$8","emp","n1k$$2","n1r","n2k$$2","t1$$9","t2$$9","n1k$$3","n1r$$1","n2k$$3","n2r$$1","t1$$10","t2$$10","n1k$$4","t1$$11","n1k$$5","n1l","n1r$$2","t1$$12","n2k$$4","t2$$11","n2k$$5","n2l","n2r$$2","t2$$12","comparer$$17","l1","l2","c$$7","SetTreeModule$$$ofSeq","comparer$$20","c$$11","ie","$comparer$$19$$126","$acc$$11$$127","$e$$128","comparer$$19","MoveNext","Current","SetTreeModule$$$mkFromEnumerator","isDisposable","Dispose","matchValue$$7","SetTreeModule$$$moveNext","Reset","FSharpSet","comparer$$22","FSharpSet$$$$002Ector$$2528C5CB","FSharpSet$$get_Comparer","__$$4","FSharpSet$$get_Tree","__$$5","s$$37","li","comparer$$28","comparer$$30","createMutable","source$$1","comparer$$32","MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D","map$$1","x$$21","String","e$$1","structuralHash","abs","that","that$$1","precision","AtomBuilder","( .ctor )","interval","callback","returnVal","Start","cmds","sub","dispatch","path","mode","segment","query","urlSegmentsWithRouteMode","routeMode","props","nextProps","nextState","onChange","ev","urlSegments","window","location","hash","pathname","search","cache","Cache","SelectorBuilder","mkAttr","mkStyle","getDisposable","useEffectReact","disposable","deps","useLayoutEffectReact","renderElement","withKey","Option","propsWithKey","areEqual","memoElementType","effect","dependencies","useEffectWithDeps","useLayoutEffectWithDeps","dispose","useEffect","createDisposable","initialValue","render","functionComponent","memo","lastRenderCallbackRef","useRef","callbackRef","callbackFunction","useCallback","arg","useLayoutEffect","children","initial","names","properties","textState","inner","getter","vowels","setAtomText","textStateTransform","textAtom","otherInner","delegateArg0","delegateArg1","inputBoxValue","reset","current","HttpMethod","BodyContent","ResponseContent","delimiter","url","defaultRequest","httpVerb","req","xhr","serializeMethod","responseText","statusCode","responseType","readyState","response","getAllResponseHeaders","headerLine","parts","setRequestHeader","mimeType","overrideMimeType","send","request","method","atom","settings","selector","pokemonQuery","pokemon","isPokemon","askIsPokemon","handler","pokemonAsker","spinner","firstCount","secondCount","setSum","countOne","countTwo","combine","prevText","prevTextState","setText","setPrevText","views","addedText","textStateAddition","transformer","atomDisplay","additionSelectorDisplay","firstName","lastName","age","fullName","job","maxWidth","label","ageComp","firstNameComp","lastNameComp","jobComp","detailPanel","Set","option","atomValue","prevAtomValue","logAction","logger","ParamCache","SelectorFamilyBuilder","xxh","mapping","recoilValue","mapFamily","binder","bindFamily","bind","b","( <*> )","recoilValues","Seq","x'","map2","traverse","guard","While","generator","f1","f2","er","success","PromiseBuilder","size","selectorKey","model","modelAtom","setter","newModel","source2","source1","modelView","modelViewFamily","modelAtomFamily","getState","setState","ring","token","pr","Promise","nextMsg","rix'","Pop","task","ofSuccess","countRef","currentCount","atoms","countComp","actionsComp","otherTextState","textStateTransformed","textStateComp","otherTextStateComp","textView","AtomFamilyBuilder","atomIds","textFamily","newAtoms","list2","textFamilySelector","latestAtom","addNewAtom","addAtom","atomList","multiplier","numberState","setNumber","multValue","multipliedState","multResultComp","numberComp","multComp","settingMode","SimpleJson","Json","ex","pokemonList","pokemonRecoils","queryPokemon","src","fetchAllPokemon","imgComp","detailsComp","optionPanel","pokemonDisplay","currentPath","segments","currentTab","githubPath","rawPath","codeProps","sampleName","sampleApp","samples","codeBlockRenderer","codeBlockRenderer'","resolveContent","activePatternResult10728","( |PathPrefix| )","activePatternResult10729","activePatternResult10730","activePatternResult10731","activePatternResult10732","activePatternResult10733","activePatternResult10734","activePatternResult10735","activePatternResult10736","activePatternResult10737","activePatternResult10738","activePatternResult10739","activePatternResult10740","activePatternResult10741","activePatternResult10742","activePatternResult10743","contributing","contentPath","newValue","currentPathSelector","contentSelector","currentMarkdownPath","renderers","markdownSelector","renderMarkdown","collapsed","basePath","menuLabel","menuLabel'","menuList","menuList'","nestedMenuItem","extendedPath","menuItem'","nestedMenuList","nestedMenuList'","subNestedMenuList","addedBasePath","menuItem","allItems","sidebar","setPath","application","main","defaultProperties","modifiedProperties","comp","eventHandler","app","render'","appMain","document","getElementById","pow","remainder","fromString","radix","parseInt","toNumber","negate","div","gt","_other","lt","shiftLeft","greaterThan","lessThan","and","not","shiftr","shiftl","allowOverflow","rotateLeft","rotateRight","rotr","Long","$this","_a","indexNotFoundMsg","array1","cons","isView","len1","len2","newArray","fill","target","targetIndex","cons$$2","len$$1","target$$2","arrays","cons$$9","arr$$4","arrays$$1","totalIdx","totalLength","result$$4","idx$$1","arr$$6","count$$8","initializer","cons$$15","result$$7","i$$13","array$$31","cons$$17","array$$33","cons$$18","predicate$$13","array$$61","findIndexBack","predicate$$22","array$$72","$i$$27$$164","i$$27","loop$$6","tryFindIndexBack","predicate$$23","array$$73","$i$$28$$167","loop$$7","chooser$$2","array$$74","cons$$30","option$$1","value$$15","action$$1","array$$81","i$$31","permute","f$$8","array$$85","res$$7","checkFlags","every","zip","array1$$4","array2$$4","result$$10","len$$15","i$$38","chunkBySize","array$$97","result$$12","ceil","start$$8","equalsWith","comparer$$13","array1$$7","array2$$7","comparer$$12","array1$$6","array2$$6","i$$40","result$$13","length1","length2","compareWith","folder$$8","array$$112","state$$12","reduceRight","delegateArg0$$4","delegateArg1$$4","source$$6","cons$$31","source$$7","cons$$32","splitInto","array$$124","result$$14","chunks$$1","min$$1","comparePrimitives","minChunkSize","chunksWithExtraItem","chunkSize$$1","start$$11","slice$$1","MutableMap$00602","pair","MutableMap$00602$$Add$$5BDDA1","MutableMap$00602$$TryFindIndex$$2B595","pair$$1","MutableMap$00602$$TryFind$$2B595","this$$$2","MutableMap$00602$$Clear","MutableMap$00602$$get_Count","pairs$$2","format","MutableMap$00602$$Remove$$2B595","this$$$10","this$$$11","pairs$$3","pair$$3","$target$$31","pair$$4","MutableMap$00602$$get_Item$$2B595","k$$9","matchValue$$5","MutableMap$00602$$ContainsKey$$2B595","pair$$5","v$$2","MutableMap$00602$$set_Item$$5BDDA1","pair$$6","MapTree$00602","MapTreeModule$$$size","MapTreeModule$$$sizeAux","$acc$$5","$m$$6","MapTreeModule$$$empty","MapTreeModule$$$height","MapTreeModule$$$mk","MapTreeModule$$$rebalance","MapTreeModule$$$add","m$$3","MapTreeModule$$$find","$comparer$$1$$23","$k$$3$$24","$m$$4$$25","comparer$$1","m$$4","c$$3","MapTreeModule$$$tryFind","$comparer$$2$$26","$k$$4$$27","$m$$5$$28","comparer$$2","m$$5","c$$5","MapTreeModule$$$remove","comparer$$9","m$$7","patternInput$$1","MapTreeModule$$$spliceOutSuccessor","m$$6","MapTreeModule$$$mem","$comparer$$10$$59","$k$$12$$60","$m$$8$$61","comparer$$10","k$$12","m$$8","MapTreeModule$$$toList","m$$20","MapTreeModule$$$loop","$m$$19$$92","$acc$$8$$93","m$$19","acc$$8","MapTreeModule$$$ofSeq","comparer$$16","$comparer$$14$$97","$acc$$10$$98","$e$$99","comparer$$14","MapTreeModule$$$mkFromEnumerator","MapTreeModule$002EMapIterator$00602","MapTreeModule$$$collapseLHS","$stack$$111","MapTreeModule$$$mkIterator","s$$5","MapTreeModule$$$current","i$$2","MapTreeModule$$$alreadyFinished","MapTreeModule$$$notStarted","MapTreeModule$002EmkIEnumerator$0027$00602","s$$6","MapTreeModule$$$mkIEnumerator","s$$7","MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C","MapTreeModule$$$toSeq","s$$8","en","unfold","en$$1","MapTreeModule$$$moveNext","FSharpMap","FSharpMap$$$$002Ector$$58ADD115","FSharpMap$$get_Tree","FSharpMap$$Add$$5BDDA1","__$$6","k$$28","v$$24","FSharpMap$$get_Item$$2B595","__$$8","k$$29","FSharpMap$$get_Count","__$$20","FSharpMap$$ContainsKey$$2B595","__$$21","k$$31","FSharpMap$$TryFind$$2B595","__$$23","k$$33","isEmpty","m$$23","k$$39","m$$26","remove","k$$40","m$$27","k$$32","__$$22","l$$22","l$$20","l$$23","comparer$$15","MapTreeModule$$$ofArray","toList","m$$45","comparer$$21","source$$5","comparer$$23","MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3","map$$2","kv","combineHash","y$$3","res$$3","activePatternResult3705","res$$4","e1","e2","kvp1","kvp2","k$$34","k$$35","kv$$1","k$$36","v$$26","source$$2","kv$$2"],"mappings":"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G,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAA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","file":"0.bundle.79c2630293ef6dd779e7.js","sourcesContent":["import { anonRecord as makeAnonRecord, Record, Union } from \"./Types\";\nimport { compareArraysWith, equalArraysWith } from \"./Util\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n    CompareTo(other) {\n        return compare(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\n// System.Type is not comparable in .NET, but let's implement this\n// in case users want to create a dictionary with types as keys\nexport function compare(t1, t2) {\n    if (t1.fullname !== t2.fullname) {\n        return t1.fullname < t2.fullname ? -1 : 1;\n    }\n    else {\n        return compareArraysWith(getGenerics(t1), getGenerics(t2), compare);\n    }\n}\nexport function class_type(fullname, generics, construct) {\n    return new TypeInfo(fullname, generics, construct);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, () => cases().map((x, i) => typeof x === \"string\"\n        ? new CaseInfo(t, i, x)\n        : new CaseInfo(t, i, x[0], x[1])));\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str) {\n    try {\n        const v = parseEnum(t, str);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, NaN];\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, uci.name, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : makeAnonRecord(fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {}));\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.name;\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n//# sourceMappingURL=Reflection.js.map","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long\";\nimport { some, value } from \"./Option\";\nimport { compare, equals } from \"./Util\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    MoveNext() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    get Current() {\n        return this.current;\n    }\n    Reset() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        next() {\n            return en.MoveNext()\n                ? { done: false, value: en.Current }\n                : { done: true, value: undefined };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nfunction makeSeq(f) {\n    const seq = {\n        [Symbol.iterator]: f,\n        toString: () => \"seq [\" + Array.from(seq).join(\"; \") + \"]\",\n    };\n    return seq;\n}\nexport function ofArray(xs) {\n    return delay(() => unfold((i) => i != null && i < xs.length ? [xs[i], i + 1] : undefined, 0));\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, undefined];\n        return unfold(() => {\n            var _a, _b;\n            let cur;\n            if (!firstDone) {\n                cur = (_a = iters[0]) === null || _a === void 0 ? void 0 : _a.next();\n                if (cur != null && !cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [undefined, ys[Symbol.iterator]()];\n                }\n            }\n            cur = (_b = iters[1]) === null || _b === void 0 ? void 0 : _b.next();\n            return cur != null && !cur.done ? [cur.value, iters] : undefined;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output = { value: undefined };\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = { value: cur.value };\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = undefined;\n                    }\n                }\n            }\n            return innerIter != null && output != null ? [output.value, innerIter] : undefined;\n        }, undefined);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    const nonZero = tryFind((i) => i !== 0, map2(f, xs, ys));\n    return nonZero != null ? value(nonZero) : length(xs) - length(ys);\n}\nexport function delay(f) {\n    return makeSeq(() => f()[Symbol.iterator]());\n}\nexport function empty() {\n    return unfold(() => undefined, undefined);\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : undefined, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : undefined, undefined));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            return empty();\n        }\n        finally {\n            finalFn();\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : undefined;\n            }\n            catch (err) {\n                return undefined;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? undefined : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : undefined, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return undefined;\n    }\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return i < xs.length ? some(xs[i]) : undefined;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return undefined;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => (f(x), undefined), undefined, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => (f(x, y), undefined), undefined, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => (f(i !== null && i !== void 0 ? i : 0, x), undefined), undefined, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => (f(i !== null && i !== void 0 ? i : 0, x, y), undefined), undefined, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? undefined : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\n        ? xs.length\n        : fold((acc, _x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : undefined;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        const cur = iter.next();\n        if (cur.done) {\n            return empty();\n        }\n        const hd = cur.value;\n        const tl = tail(xs);\n        const ys = scan(([_, last], next) => [last, next], [hd, hd], tl);\n        return skip(1, ys);\n    });\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : undefined, first));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : undefined, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return undefined;\n        }, undefined);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function singleton(y) {\n    return [y];\n}\nexport function skip(n, xs) {\n    return makeSeq(() => {\n        const iter = xs[Symbol.iterator]();\n        for (let i = 1; i <= n; i++) {\n            if (iter.next().done) {\n                throw new Error(\"Seq has not enough elements\");\n            }\n        }\n        return iter;\n    });\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    return skip(1, xs);\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold(() => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, undefined];\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? undefined : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return undefined;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return makeSeq(() => {\n        // Capture a copy of the first value in the closure\n        // so the sequence is restarted every time, see #1230\n        let acc = fst;\n        const iter = {\n            next: () => {\n                const res = f(acc);\n                if (res != null) {\n                    const v = value(res);\n                    if (v != null) {\n                        acc = v[1];\n                        return { done: false, value: v[0] };\n                    }\n                }\n                return { done: true, value: undefined };\n            },\n        };\n        return iter;\n    });\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return makeSeq(() => {\n        let window = [];\n        const iter = source[Symbol.iterator]();\n        const iter2 = {\n            next: () => {\n                let cur;\n                while (window.length < windowSize) {\n                    if ((cur = iter.next()).done) {\n                        return { done: true, value: undefined };\n                    }\n                    window.push(cur.value);\n                }\n                const value = window;\n                window = window.slice(1);\n                return { done: false, value };\n            },\n        };\n        return iter2;\n    });\n}\nexport function transpose(source) {\n    return makeSeq(() => {\n        const iters = Array.from(source, (x) => x[Symbol.iterator]());\n        const iter = {\n            next: () => {\n                if (iters.length === 0) {\n                    return { done: true, value: undefined }; // empty sequence\n                }\n                const results = Array.from(iters, (iter) => iter.next());\n                if (results[0].done) {\n                    if (!results.every((x) => x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    return { done: true, value: undefined };\n                }\n                else {\n                    if (!results.every((x) => !x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    const values = results.map((x) => x.value);\n                    return { done: false, value: values };\n                }\n            },\n        };\n        return iter;\n    });\n}\n//# sourceMappingURL=Seq.js.map","import { List, declare, Record } from \"../Types.js\";\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, toInt, op_Modulus, op_Multiply, fromInteger, fromBits } from \"../Long.js\";\nimport { ofList, copy, initialize, map, fill } from \"../Array.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\nexport const BigNat = declare(function BigInt_BigNat(bound, digits) {\n  this.bound = bound | 0;\n  this.digits = digits;\n}, Record);\nexport function BigNat$reflection() {\n  return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\n}\nexport function BigNatModule$002EFFT$$$pow32($x$$1, $n$$2) {\n  BigNatModule$002EFFT$$$pow32: while (true) {\n    const x = $x$$1,\n          n = $n$$2;\n\n    if (n === 0) {\n      return 1;\n    } else if (n % 2 === 0) {\n      $x$$1 = x * x;\n      $n$$2 = ~~(n / 2);\n      continue BigNatModule$002EFFT$$$pow32;\n    } else {\n      return x * BigNatModule$002EFFT$$$pow32(x * x, ~~(n / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$$$leastBounding2Power(b) {\n  const findBounding2Power = function findBounding2Power($b$$1$$4, $tp$$5, $i$$6) {\n    findBounding2Power: while (true) {\n      const b$$1 = $b$$1$$4,\n            tp = $tp$$5,\n            i = $i$$6;\n\n      if (b$$1 <= tp) {\n        return [tp, i];\n      } else {\n        $b$$1$$4 = b$$1;\n        $tp$$5 = tp * 2;\n        $i$$6 = i + 1;\n        continue findBounding2Power;\n      }\n\n      break;\n    }\n  };\n\n  return findBounding2Power(b, 1, 0);\n}\nexport const BigNatModule$002EFFT$$$p = fromBits(2013265921, 0, false);\nconst BigNatModule$002EFFT$$$patternInput$004075 = [27, 15, 31, 440564289];\nexport const BigNatModule$002EFFT$$$w = BigNatModule$002EFFT$$$patternInput$004075[3];\nexport const BigNatModule$002EFFT$$$m = BigNatModule$002EFFT$$$patternInput$004075[1];\nexport const BigNatModule$002EFFT$$$k = BigNatModule$002EFFT$$$patternInput$004075[0];\nexport const BigNatModule$002EFFT$$$g = BigNatModule$002EFFT$$$patternInput$004075[2];\nexport const BigNatModule$002EFFT$$$primeP = BigNatModule$002EFFT$$$p;\nexport const BigNatModule$002EFFT$$$maxBitsInsideFp = 30;\nexport const BigNatModule$002EFFT$002EFp$$$p = 2013265921;\nexport const BigNatModule$002EFFT$002EFp$$$p64 = fromBits(2013265921, 0, true);\nexport function BigNatModule$002EFFT$002EFp$$$toInt(x$$1) {\n  return ~~x$$1;\n}\nexport function BigNatModule$002EFFT$002EFp$$$ofInt32(x$$2) {\n  return x$$2 >>> 0;\n}\nexport const BigNatModule$002EFFT$002EFp$$$mzero = 0;\nexport const BigNatModule$002EFFT$002EFp$$$mone = 1;\nexport const BigNatModule$002EFFT$002EFp$$$mtwo = 2;\nexport function BigNatModule$002EFFT$002EFp$$$mpow($x$$3$$9, $n$$1$$10) {\n  BigNatModule$002EFFT$002EFp$$$mpow: while (true) {\n    const x$$3 = $x$$3$$9,\n          n$$1 = $n$$1$$10;\n\n    if (n$$1 === 0) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (n$$1 % 2 === 0) {\n      $x$$3$$9 = toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(x$$3, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      $n$$1$$10 = ~~(n$$1 / 2);\n      continue BigNatModule$002EFFT$002EFp$$$mpow;\n    } else {\n      const y$$2 = BigNatModule$002EFFT$002EFp$$$mpow(toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(x$$3, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, ~~(n$$1 / 2));\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(y$$2, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$mpowL($x$$7$$11, $n$$2$$12) {\n  BigNatModule$002EFFT$002EFp$$$mpowL: while (true) {\n    const x$$7 = $x$$7$$11,\n          n$$2 = $n$$2$$12;\n\n    if (equals(n$$2, fromBits(0, 0, false))) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (equals(op_Modulus(n$$2, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n      $x$$7$$11 = toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(x$$7, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      $n$$2$$12 = op_Division(n$$2, fromBits(2, 0, false));\n      continue BigNatModule$002EFFT$002EFp$$$mpowL;\n    } else {\n      const y$$5 = BigNatModule$002EFFT$002EFp$$$mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(x$$7, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, op_Division(n$$2, fromBits(2, 0, false)));\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(y$$5, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(n$$3) {\n  return BigNatModule$002EFFT$002EFp$$$mpow(BigNatModule$002EFFT$$$w >>> 0, BigNatModule$002EFFT$$$pow32(2, BigNatModule$002EFFT$$$k - n$$3));\n}\nexport function BigNatModule$002EFFT$002EFp$$$minv(x$$11) {\n  return BigNatModule$002EFFT$002EFp$$$mpowL(x$$11, op_Subtraction(BigNatModule$002EFFT$$$primeP, fromBits(2, 0, false)));\n}\nexport function BigNatModule$002EFFT$$$computeFFT(lambda, mu, n$$4, w, u, res, offset) {\n  if (n$$4 === 1) {\n    res[offset] = u[mu];\n  } else {\n    const halfN = ~~(n$$4 / 2) | 0;\n    const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    const offsetHalfN = offset + halfN | 0;\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n    let wj = BigNatModule$002EFFT$002EFp$$$mone;\n\n    for (let j = 0; j <= halfN - 1; j++) {\n      const even = res[offset + j];\n      const odd = res[offsetHalfN + j];\n      let y$$8;\n      const x$$13 = wj;\n      y$$8 = toInt(op_Modulus(op_Multiply(fromInteger(x$$13, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      res[offset + j] = (even + y$$8) % BigNatModule$002EFFT$002EFp$$$p;\n      let y$$10;\n      const x$$15 = wj;\n      y$$10 = toInt(op_Modulus(op_Multiply(fromInteger(x$$15, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      res[offsetHalfN + j] = (even + BigNatModule$002EFFT$002EFp$$$p - y$$10) % BigNatModule$002EFFT$002EFp$$$p;\n      const y$$11 = wj;\n      wj = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y$$11, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n  }\n}\nexport function BigNatModule$002EFFT$$$computFftInPlace(n$$5, w$$1, u$$1) {\n  const res$$1 = fill(new Uint32Array(n$$5), 0, n$$5, BigNatModule$002EFFT$002EFp$$$mzero);\n  BigNatModule$002EFFT$$$computeFFT(1, 0, n$$5, w$$1, u$$1, res$$1, 0);\n  return res$$1;\n}\nexport function BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$6, w$$2, uT) {\n  const bigKInv = BigNatModule$002EFFT$002EFp$$$minv(n$$6 >>> 0);\n  return map(function (y$$12) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y$$12, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, BigNatModule$002EFFT$$$computFftInPlace(n$$6, BigNatModule$002EFFT$002EFp$$$minv(w$$2), uT), Uint32Array);\n}\nexport const BigNatModule$002EFFT$$$maxTwoPower = 29;\nexport const BigNatModule$002EFFT$$$twoPowerTable = initialize(BigNatModule$002EFFT$$$maxTwoPower - 1, function (i$$1) {\n  return BigNatModule$002EFFT$$$pow32(2, i$$1);\n}, Int32Array);\nexport function BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(bigK, k, u$$2, v) {\n  const w$$3 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(k);\n  const uT$$1 = BigNatModule$002EFFT$$$computFftInPlace(bigK, w$$3, u$$2);\n  const vT = BigNatModule$002EFFT$$$computFftInPlace(bigK, w$$3, v);\n  const rT = initialize(bigK, function (i$$2) {\n    const x$$19 = uT$$1[i$$2];\n    const y$$14 = vT[i$$2];\n    return toInt(op_Modulus(op_Multiply(fromInteger(x$$19, true, 6), fromInteger(y$$14, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r = BigNatModule$002EFFT$$$computeInverseFftInPlace(bigK, w$$3, rT);\n  return r;\n}\nexport function BigNatModule$002EFFT$$$padTo(n$$8, u$$3) {\n  const uBound = u$$3.length | 0;\n  return initialize(n$$8, function (i$$3) {\n    return i$$3 < uBound ? BigNatModule$002EFFT$002EFp$$$ofInt32(u$$3[i$$3]) : BigNatModule$002EFFT$002EFp$$$mzero;\n  }, Uint32Array);\n}\nexport function BigNatModule$002EFFT$$$computeFftPolynomialProduct(degu, u$$4, degv, v$$1) {\n  const deguv = degu + degv | 0;\n  const bound = deguv + 1 | 0;\n  const patternInput = BigNatModule$002EFFT$$$leastBounding2Power(bound);\n  const w$$4 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(patternInput[1]);\n  const u$$5 = BigNatModule$002EFFT$$$padTo(patternInput[0], u$$4);\n  const v$$2 = BigNatModule$002EFFT$$$padTo(patternInput[0], v$$1);\n  const uT$$2 = BigNatModule$002EFFT$$$computFftInPlace(patternInput[0], w$$4, u$$5);\n  const vT$$1 = BigNatModule$002EFFT$$$computFftInPlace(patternInput[0], w$$4, v$$2);\n  const rT$$1 = initialize(patternInput[0], function (i$$4) {\n    const x$$20 = uT$$2[i$$4];\n    const y$$15 = vT$$1[i$$4];\n    return toInt(op_Modulus(op_Multiply(fromInteger(x$$20, true, 6), fromInteger(y$$15, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r$$1 = BigNatModule$002EFFT$$$computeInverseFftInPlace(patternInput[0], w$$4, rT$$1);\n  return map(BigNatModule$002EFFT$002EFp$$$toInt, r$$1, Int32Array);\n}\nexport const BigNatModule$002EFFT$$$mzero = BigNatModule$002EFFT$002EFp$$$mzero;\nexport const BigNatModule$002EFFT$$$mone = BigNatModule$002EFFT$002EFp$$$mone;\nexport const BigNatModule$002EFFT$$$maxFp = (BigNatModule$002EFFT$002EFp$$$p + BigNatModule$002EFFT$002EFp$$$p - BigNatModule$002EFFT$$$mone) % BigNatModule$002EFFT$002EFp$$$p;\nexport function BigNatModule$$$bound(n$$10) {\n  return n$$10.bound;\n}\nexport function BigNatModule$$$setBound(n$$11, v$$3) {\n  n$$11.bound = v$$3;\n}\nexport function BigNatModule$$$coeff(n$$12, i$$5) {\n  return n$$12.digits[i$$5];\n}\nexport function BigNatModule$$$coeff64(n$$13, i$$6) {\n  return fromInteger(BigNatModule$$$coeff(n$$13, i$$6), false, 2);\n}\nexport function BigNatModule$$$setCoeff(n$$14, i$$7, v$$4) {\n  n$$14.digits[i$$7] = v$$4;\n}\nexport function BigNatModule$$$pow64($x$$23$$48, $n$$15$$49) {\n  BigNatModule$$$pow64: while (true) {\n    const x$$23 = $x$$23$$48,\n          n$$15 = $n$$15$$49;\n\n    if (n$$15 === 0) {\n      return fromBits(1, 0, false);\n    } else if (n$$15 % 2 === 0) {\n      $x$$23$$48 = op_Multiply(x$$23, x$$23);\n      $n$$15$$49 = ~~(n$$15 / 2);\n      continue BigNatModule$$$pow64;\n    } else {\n      return op_Multiply(x$$23, BigNatModule$$$pow64(op_Multiply(x$$23, x$$23), ~~(n$$15 / 2)));\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$pow32($x$$24$$50, $n$$16$$51) {\n  BigNatModule$$$pow32: while (true) {\n    const x$$24 = $x$$24$$50,\n          n$$16 = $n$$16$$51;\n\n    if (n$$16 === 0) {\n      return 1;\n    } else if (n$$16 % 2 === 0) {\n      $x$$24$$50 = x$$24 * x$$24;\n      $n$$16$$51 = ~~(n$$16 / 2);\n      continue BigNatModule$$$pow32;\n    } else {\n      return x$$24 * BigNatModule$$$pow32(x$$24 * x$$24, ~~(n$$16 / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$hash(n$$17) {\n  let res$$2 = 0;\n\n  for (let i$$8 = 0; i$$8 <= n$$17.bound - 1; i$$8++) {\n    res$$2 = n$$17.digits[i$$8] + (res$$2 << 3);\n  }\n\n  return res$$2 | 0;\n}\nexport function BigNatModule$$$maxInt(a, b$$2) {\n  if (a < b$$2) {\n    return b$$2 | 0;\n  } else {\n    return a | 0;\n  }\n}\nexport function BigNatModule$$$minInt(a$$1, b$$3) {\n  if (a$$1 < b$$3) {\n    return a$$1 | 0;\n  } else {\n    return b$$3 | 0;\n  }\n}\nexport const BigNatModule$$$baseBits = 24;\nexport const BigNatModule$$$baseN = 16777216;\nexport const BigNatModule$$$baseMask = 16777215;\nexport const BigNatModule$$$baseNi64 = fromBits(16777216, 0, false);\nexport const BigNatModule$$$baseMaski64 = fromBits(16777215, 0, false);\nexport const BigNatModule$$$baseMaskU = fromBits(16777215, 0, true);\nexport const BigNatModule$$$baseMask32A = 16777215;\nexport const BigNatModule$$$baseMask32B = 255;\nexport const BigNatModule$$$baseShift32B = 24;\nexport const BigNatModule$$$baseMask64A = 16777215;\nexport const BigNatModule$$$baseMask64B = 16777215;\nexport const BigNatModule$$$baseMask64C = 65535;\nexport const BigNatModule$$$baseShift64B = 24;\nexport const BigNatModule$$$baseShift64C = 48;\nexport function BigNatModule$$$divbase(x$$25) {\n  return ~~(x$$25 >>> 0 >>> BigNatModule$$$baseBits);\n}\nexport function BigNatModule$$$modbase(x$$26) {\n  return x$$26 & BigNatModule$$$baseMask;\n}\nexport function BigNatModule$$$createN(b$$4) {\n  return new BigNat(b$$4, new Int32Array(b$$4));\n}\nexport function BigNatModule$$$copyN(x$$27) {\n  return new BigNat(x$$27.bound, copy(x$$27.digits, Int32Array));\n}\nexport function BigNatModule$$$normN(n$$18) {\n  const findLeastBound = function findLeastBound($na$$62, $i$$9$$63) {\n    findLeastBound: while (true) {\n      const na = $na$$62,\n            i$$9 = $i$$9$$63;\n\n      if (i$$9 === -1 ? true : na[i$$9] !== 0) {\n        return i$$9 + 1 | 0;\n      } else {\n        $na$$62 = na;\n        $i$$9$$63 = i$$9 - 1;\n        continue findLeastBound;\n      }\n\n      break;\n    }\n  };\n\n  const bound$$1 = findLeastBound(n$$18.digits, n$$18.bound - 1) | 0;\n  n$$18.bound = bound$$1;\n  return n$$18;\n}\nexport const BigNatModule$$$boundInt = 2;\nexport const BigNatModule$$$boundInt64 = 3;\nexport const BigNatModule$$$boundBase = 1;\nexport function BigNatModule$$$embed(x$$28) {\n  const x$$29 = (x$$28 < 0 ? 0 : x$$28) | 0;\n\n  if (x$$29 < BigNatModule$$$baseN) {\n    const r$$2 = BigNatModule$$$createN(1);\n    r$$2.digits[0] = x$$29;\n    return BigNatModule$$$normN(r$$2);\n  } else {\n    const r$$3 = BigNatModule$$$createN(BigNatModule$$$boundInt);\n\n    for (let i$$10 = 0; i$$10 <= BigNatModule$$$boundInt - 1; i$$10++) {\n      r$$3.digits[i$$10] = ~~(x$$29 / BigNatModule$$$pow32(BigNatModule$$$baseN, i$$10)) % BigNatModule$$$baseN;\n    }\n\n    return BigNatModule$$$normN(r$$3);\n  }\n}\nexport function BigNatModule$$$embed64(x$$30) {\n  const x$$31 = compare(x$$30, fromBits(0, 0, false)) < 0 ? fromBits(0, 0, false) : x$$30;\n  const r$$4 = BigNatModule$$$createN(BigNatModule$$$boundInt64);\n\n  for (let i$$11 = 0; i$$11 <= BigNatModule$$$boundInt64 - 1; i$$11++) {\n    r$$4.digits[i$$11] = ~~toInt(op_Modulus(op_Division(x$$31, BigNatModule$$$pow64(BigNatModule$$$baseNi64, i$$11)), BigNatModule$$$baseNi64));\n  }\n\n  return BigNatModule$$$normN(r$$4);\n}\nexport function BigNatModule$$$eval32(n$$19) {\n  if (n$$19.bound === 1) {\n    return n$$19.digits[0] | 0;\n  } else {\n    let acc = 0;\n\n    for (let i$$12 = n$$19.bound - 1; i$$12 >= 0; i$$12--) {\n      acc = n$$19.digits[i$$12] + BigNatModule$$$baseN * acc;\n    }\n\n    return acc | 0;\n  }\n}\nexport function BigNatModule$$$eval64(n$$20) {\n  if (n$$20.bound === 1) {\n    return fromInteger(n$$20.digits[0], false, 2);\n  } else {\n    let acc$$1 = fromBits(0, 0, false);\n\n    for (let i$$13 = n$$20.bound - 1; i$$13 >= 0; i$$13--) {\n      acc$$1 = op_Addition(fromInteger(n$$20.digits[i$$13], false, 2), op_Multiply(BigNatModule$$$baseNi64, acc$$1));\n    }\n\n    return acc$$1;\n  }\n}\nexport const BigNatModule$$$one = BigNatModule$$$embed(1);\nexport const BigNatModule$$$zero = BigNatModule$$$embed(0);\nexport function BigNatModule$$$restrictTo(d, n$$21) {\n  return new BigNat(BigNatModule$$$minInt(d, n$$21.bound), n$$21.digits);\n}\nexport function BigNatModule$$$shiftUp(d$$1, n$$22) {\n  const m = BigNatModule$$$createN(n$$22.bound + d$$1);\n\n  for (let i$$14 = 0; i$$14 <= n$$22.bound - 1; i$$14++) {\n    m.digits[i$$14 + d$$1] = n$$22.digits[i$$14];\n  }\n\n  return m;\n}\nexport function BigNatModule$$$shiftDown(d$$2, n$$23) {\n  if (n$$23.bound - d$$2 <= 0) {\n    return BigNatModule$$$zero;\n  } else {\n    const m$$1 = BigNatModule$$$createN(n$$23.bound - d$$2);\n\n    for (let i$$15 = 0; i$$15 <= m$$1.bound - 1; i$$15++) {\n      m$$1.digits[i$$15] = n$$23.digits[i$$15 + d$$2];\n    }\n\n    return m$$1;\n  }\n}\nexport function BigNatModule$$$degree(n$$24) {\n  return n$$24.bound - 1;\n}\nexport function BigNatModule$$$addP($i$$16$$75, $n$$25$$76, $c$$77, $p$$78, $q$$79, $r$$5$$80) {\n  BigNatModule$$$addP: while (true) {\n    const i$$16 = $i$$16$$75,\n          n$$25 = $n$$25$$76,\n          c = $c$$77,\n          p = $p$$78,\n          q = $q$$79,\n          r$$5 = $r$$5$$80;\n\n    if (i$$16 < n$$25) {\n      const x$$32 = (i$$16 < p.bound ? p.digits[i$$16] : 0) + (i$$16 < q.bound ? q.digits[i$$16] : 0) + c | 0;\n      r$$5.digits[i$$16] = BigNatModule$$$modbase(x$$32);\n      const c$$1 = BigNatModule$$$divbase(x$$32) | 0;\n      $i$$16$$75 = i$$16 + 1;\n      $n$$25$$76 = n$$25;\n      $c$$77 = c$$1;\n      $p$$78 = p;\n      $q$$79 = q;\n      $r$$5$$80 = r$$5;\n      continue BigNatModule$$$addP;\n    } else {\n      void null;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$add(p$$1, q$$1) {\n  const rbound = 1 + BigNatModule$$$maxInt(p$$1.bound, q$$1.bound) | 0;\n  const r$$6 = BigNatModule$$$createN(rbound);\n  BigNatModule$$$addP(0, rbound, 0, p$$1, q$$1, r$$6);\n  return BigNatModule$$$normN(r$$6);\n}\nexport function BigNatModule$$$subP($i$$19$$83, $n$$26$$84, $c$$2$$85, $p$$2$$86, $q$$2$$87, $r$$7$$88) {\n  BigNatModule$$$subP: while (true) {\n    const i$$19 = $i$$19$$83,\n          n$$26 = $n$$26$$84,\n          c$$2 = $c$$2$$85,\n          p$$2 = $p$$2$$86,\n          q$$2 = $q$$2$$87,\n          r$$7 = $r$$7$$88;\n\n    if (i$$19 < n$$26) {\n      const x$$33 = (i$$19 < p$$2.bound ? p$$2.digits[i$$19] : 0) - (i$$19 < q$$2.bound ? q$$2.digits[i$$19] : 0) + c$$2 | 0;\n\n      if (x$$33 > 0) {\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$33);\n        const c$$3 = BigNatModule$$$divbase(x$$33) | 0;\n        $i$$19$$83 = i$$19 + 1;\n        $n$$26$$84 = n$$26;\n        $c$$2$$85 = c$$3;\n        $p$$2$$86 = p$$2;\n        $q$$2$$87 = q$$2;\n        $r$$7$$88 = r$$7;\n        continue BigNatModule$$$subP;\n      } else {\n        const x$$34 = x$$33 + BigNatModule$$$baseN | 0;\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$34);\n        const c$$4 = BigNatModule$$$divbase(x$$34) - 1 | 0;\n        $i$$19$$83 = i$$19 + 1;\n        $n$$26$$84 = n$$26;\n        $c$$2$$85 = c$$4;\n        $p$$2$$86 = p$$2;\n        $q$$2$$87 = q$$2;\n        $r$$7$$88 = r$$7;\n        continue BigNatModule$$$subP;\n      }\n    } else {\n      const underflow = c$$2 !== 0;\n      return underflow;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$sub(p$$3, q$$3) {\n  const rbound$$1 = BigNatModule$$$maxInt(p$$3.bound, q$$3.bound) | 0;\n  const r$$8 = BigNatModule$$$createN(rbound$$1);\n  const underflow$$1 = BigNatModule$$$subP(0, rbound$$1, 0, p$$3, q$$3, r$$8);\n\n  if (underflow$$1) {\n    return BigNatModule$$$embed(0);\n  } else {\n    return BigNatModule$$$normN(r$$8);\n  }\n}\nexport function BigNatModule$$$isZero(p$$4) {\n  return p$$4.bound === 0;\n}\nexport function BigNatModule$$$IsZero(p$$5) {\n  return BigNatModule$$$isZero(p$$5);\n}\nexport function BigNatModule$$$isOne(p$$6) {\n  if (p$$6.bound === 1) {\n    return p$$6.digits[0] === 1;\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$equal(p$$7, q$$4) {\n  if (p$$7.bound === q$$4.bound) {\n    const check = function check($pa$$96, $qa$$97, $i$$22$$98) {\n      check: while (true) {\n        const pa = $pa$$96,\n              qa = $qa$$97,\n              i$$22 = $i$$22$$98;\n\n        if (i$$22 === -1) {\n          return true;\n        } else if (pa[i$$22] === qa[i$$22]) {\n          $pa$$96 = pa;\n          $qa$$97 = qa;\n          $i$$22$$98 = i$$22 - 1;\n          continue check;\n        } else {\n          return false;\n        }\n\n        break;\n      }\n    };\n\n    return check(p$$7.digits, q$$4.digits, p$$7.bound - 1);\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$shiftCompare(p$$8, pn, q$$5, qn) {\n  if (p$$8.bound + pn < q$$5.bound + qn) {\n    return -1 | 0;\n  } else if (p$$8.bound + pn > q$$5.bound + pn) {\n    return 1;\n  } else {\n    const check$$1 = function check$$1($pa$$1$$103, $qa$$1$$104, $i$$23$$105) {\n      check$$1: while (true) {\n        const pa$$1 = $pa$$1$$103,\n              qa$$1 = $qa$$1$$104,\n              i$$23 = $i$$23$$105;\n\n        if (i$$23 === -1) {\n          return 0;\n        } else {\n          const pai = (i$$23 < pn ? 0 : pa$$1[i$$23 - pn]) | 0;\n          const qai = (i$$23 < qn ? 0 : qa$$1[i$$23 - qn]) | 0;\n\n          if (pai === qai) {\n            $pa$$1$$103 = pa$$1;\n            $qa$$1$$104 = qa$$1;\n            $i$$23$$105 = i$$23 - 1;\n            continue check$$1;\n          } else if (pai < qai) {\n            return -1 | 0;\n          } else {\n            return 1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return check$$1(p$$8.digits, q$$5.digits, p$$8.bound + pn - 1) | 0;\n  }\n}\nexport function BigNatModule$$$compare(p$$9, q$$6) {\n  if (p$$9.bound < q$$6.bound) {\n    return -1 | 0;\n  } else if (p$$9.bound > q$$6.bound) {\n    return 1;\n  } else {\n    const check$$2 = function check$$2($pa$$2$$108, $qa$$2$$109, $i$$24$$110) {\n      check$$2: while (true) {\n        const pa$$2 = $pa$$2$$108,\n              qa$$2 = $qa$$2$$109,\n              i$$24 = $i$$24$$110;\n\n        if (i$$24 === -1) {\n          return 0;\n        } else if (pa$$2[i$$24] === qa$$2[i$$24]) {\n          $pa$$2$$108 = pa$$2;\n          $qa$$2$$109 = qa$$2;\n          $i$$24$$110 = i$$24 - 1;\n          continue check$$2;\n        } else if (pa$$2[i$$24] < qa$$2[i$$24]) {\n          return -1 | 0;\n        } else {\n          return 1;\n        }\n\n        break;\n      }\n    };\n\n    return check$$2(p$$9.digits, q$$6.digits, p$$9.bound - 1) | 0;\n  }\n}\nexport function BigNatModule$$$lt(p$$10, q$$7) {\n  return BigNatModule$$$compare(p$$10, q$$7) === -1;\n}\nexport function BigNatModule$$$gt(p$$11, q$$8) {\n  return BigNatModule$$$compare(p$$11, q$$8) === 1;\n}\nexport function BigNatModule$$$lte(p$$12, q$$9) {\n  return BigNatModule$$$compare(p$$12, q$$9) !== 1;\n}\nexport function BigNatModule$$$gte(p$$13, q$$10) {\n  return BigNatModule$$$compare(p$$13, q$$10) !== -1;\n}\nexport function BigNatModule$$$min(a$$2, b$$5) {\n  if (BigNatModule$$$lt(a$$2, b$$5)) {\n    return a$$2;\n  } else {\n    return b$$5;\n  }\n}\nexport function BigNatModule$$$max(a$$3, b$$6) {\n  if (BigNatModule$$$lt(a$$3, b$$6)) {\n    return b$$6;\n  } else {\n    return a$$3;\n  }\n}\nexport function BigNatModule$$$contributeArr($a$$4$$123, $i$$25$$124, $c$$5$$125) {\n  BigNatModule$$$contributeArr: while (true) {\n    const a$$4 = $a$$4$$123,\n          i$$25 = $i$$25$$124,\n          c$$5 = $c$$5$$125;\n    const x$$35 = op_Addition(fromInteger(a$$4[i$$25], false, 2), c$$5);\n    const c$$6 = op_Division(x$$35, BigNatModule$$$baseNi64);\n    let x$$38;\n    const value = op_BitwiseAnd(x$$35, BigNatModule$$$baseMaski64);\n    x$$38 = ~~toInt(value);\n    a$$4[i$$25] = x$$38;\n\n    if (compare(c$$6, fromBits(0, 0, false)) > 0) {\n      $a$$4$$123 = a$$4;\n      $i$$25$$124 = i$$25 + 1;\n      $c$$5$$125 = c$$6;\n      continue BigNatModule$$$contributeArr;\n    } else {\n      void null;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$scale(k$$2, p$$14) {\n  const rbound$$2 = p$$14.bound + BigNatModule$$$boundInt | 0;\n  const r$$9 = BigNatModule$$$createN(rbound$$2);\n  const k$$3 = fromInteger(k$$2, false, 2);\n\n  for (let i$$26 = 0; i$$26 <= p$$14.bound - 1; i$$26++) {\n    const kpi = op_Multiply(k$$3, fromInteger(p$$14.digits[i$$26], false, 2));\n    BigNatModule$$$contributeArr(r$$9.digits, i$$26, kpi);\n  }\n\n  return BigNatModule$$$normN(r$$9);\n}\nexport function BigNatModule$$$mulSchoolBookBothSmall(p$$15, q$$11) {\n  var value$$1;\n  const r$$11 = BigNatModule$$$createN(2);\n  const rak = op_Multiply(fromInteger(p$$15, false, 2), fromInteger(q$$11, false, 2));\n  BigNatModule$$$setCoeff(r$$11, 0, (value$$1 = op_BitwiseAnd(rak, BigNatModule$$$baseMaski64), (~~toInt(value$$1))));\n  BigNatModule$$$setCoeff(r$$11, 1, ~~toInt(op_Division(rak, BigNatModule$$$baseNi64)));\n  return BigNatModule$$$normN(r$$11);\n}\nexport function BigNatModule$$$mulSchoolBookCarry($r$$12$$130, $c$$8$$131, $k$$4$$132) {\n  var value$$2;\n\n  BigNatModule$$$mulSchoolBookCarry: while (true) {\n    const r$$12 = $r$$12$$130,\n          c$$8 = $c$$8$$131,\n          k$$4 = $k$$4$$132;\n\n    if (compare(c$$8, fromBits(0, 0, false)) > 0) {\n      const rak$$1 = op_Addition(BigNatModule$$$coeff64(r$$12, k$$4), c$$8);\n      BigNatModule$$$setCoeff(r$$12, k$$4, (value$$2 = op_BitwiseAnd(rak$$1, BigNatModule$$$baseMaski64), (~~toInt(value$$2))));\n      $r$$12$$130 = r$$12;\n      $c$$8$$131 = op_Division(rak$$1, BigNatModule$$$baseNi64);\n      $k$$4$$132 = k$$4 + 1;\n      continue BigNatModule$$$mulSchoolBookCarry;\n    } else {\n      void null;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$mulSchoolBookOneSmall(p$$16, q$$12) {\n  var value$$3;\n  const bp = BigNatModule$$$bound(p$$16) | 0;\n  const rbound$$3 = bp + 1 | 0;\n  const r$$13 = BigNatModule$$$createN(rbound$$3);\n  const q$$13 = fromInteger(q$$12, false, 2);\n  let c$$9 = fromBits(0, 0, false);\n\n  for (let i$$28 = 0; i$$28 <= bp - 1; i$$28++) {\n    const rak$$2 = op_Addition(op_Addition(c$$9, BigNatModule$$$coeff64(r$$13, i$$28)), op_Multiply(BigNatModule$$$coeff64(p$$16, i$$28), q$$13));\n    BigNatModule$$$setCoeff(r$$13, i$$28, (value$$3 = op_BitwiseAnd(rak$$2, BigNatModule$$$baseMaski64), (~~toInt(value$$3))));\n    c$$9 = op_Division(rak$$2, BigNatModule$$$baseNi64);\n  }\n\n  BigNatModule$$$mulSchoolBookCarry(r$$13, c$$9, bp);\n  return BigNatModule$$$normN(r$$13);\n}\nexport function BigNatModule$$$mulSchoolBookNeitherSmall(p$$17, q$$14) {\n  var value$$4;\n  const rbound$$4 = p$$17.bound + q$$14.bound | 0;\n  const r$$14 = BigNatModule$$$createN(rbound$$4);\n\n  for (let i$$29 = 0; i$$29 <= p$$17.bound - 1; i$$29++) {\n    const pai$$1 = fromInteger(p$$17.digits[i$$29], false, 2);\n    let c$$10 = fromBits(0, 0, false);\n    let k$$5 = i$$29 | 0;\n\n    for (let j$$1 = 0; j$$1 <= q$$14.bound - 1; j$$1++) {\n      const qaj = fromInteger(q$$14.digits[j$$1], false, 2);\n      const rak$$3 = op_Addition(op_Addition(fromInteger(r$$14.digits[k$$5], false, 2), c$$10), op_Multiply(pai$$1, qaj));\n      r$$14.digits[k$$5] = (value$$4 = op_BitwiseAnd(rak$$3, BigNatModule$$$baseMaski64), (~~toInt(value$$4)));\n      c$$10 = op_Division(rak$$3, BigNatModule$$$baseNi64);\n      k$$5 = k$$5 + 1;\n    }\n\n    BigNatModule$$$mulSchoolBookCarry(r$$14, c$$10, k$$5);\n  }\n\n  return BigNatModule$$$normN(r$$14);\n}\nexport function BigNatModule$$$mulSchoolBook(p$$18, q$$15) {\n  const pSmall = BigNatModule$$$bound(p$$18) === 1;\n  const qSmall = BigNatModule$$$bound(q$$15) === 1;\n\n  if (pSmall ? qSmall : false) {\n    return BigNatModule$$$mulSchoolBookBothSmall(BigNatModule$$$coeff(p$$18, 0), BigNatModule$$$coeff(q$$15, 0));\n  } else if (pSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(q$$15, BigNatModule$$$coeff(p$$18, 0));\n  } else if (qSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(p$$18, BigNatModule$$$coeff(q$$15, 0));\n  } else {\n    return BigNatModule$$$mulSchoolBookNeitherSmall(p$$18, q$$15);\n  }\n}\nexport const BigNatModule$002Eencoding = declare(function BigInt_BigNatModule_encoding(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n  this.bigL = bigL | 0;\n  this.twoToBigL = twoToBigL | 0;\n  this.k = k | 0;\n  this.bigK = bigK | 0;\n  this.bigN = bigN | 0;\n  this.split = split | 0;\n  this.splits = splits;\n}, Record);\nexport function BigNatModule$002Eencoding$reflection() {\n  return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule$002Eencoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\n}\nexport function BigNatModule$$$mkEncoding(bigL, k$$6, bigK$$2, bigN) {\n  return new BigNatModule$002Eencoding(bigL, BigNatModule$$$pow32(2, bigL), k$$6, bigK$$2, bigN, ~~(BigNatModule$$$baseBits / bigL), initialize(~~(BigNatModule$$$baseBits / bigL), function (i$$30) {\n    return BigNatModule$$$pow32(2, bigL * i$$30);\n  }, Int32Array));\n}\nexport const BigNatModule$$$table = [BigNatModule$$$mkEncoding(1, 28, 268435456, 268435456), BigNatModule$$$mkEncoding(2, 26, 67108864, 134217728), BigNatModule$$$mkEncoding(3, 24, 16777216, 50331648), BigNatModule$$$mkEncoding(4, 22, 4194304, 16777216), BigNatModule$$$mkEncoding(5, 20, 1048576, 5242880), BigNatModule$$$mkEncoding(6, 18, 262144, 1572864), BigNatModule$$$mkEncoding(7, 16, 65536, 458752), BigNatModule$$$mkEncoding(8, 14, 16384, 131072), BigNatModule$$$mkEncoding(9, 12, 4096, 36864), BigNatModule$$$mkEncoding(10, 10, 1024, 10240), BigNatModule$$$mkEncoding(11, 8, 256, 2816), BigNatModule$$$mkEncoding(12, 6, 64, 768), BigNatModule$$$mkEncoding(13, 4, 16, 208)];\nexport function BigNatModule$$$calculateTableTow(bigL$$1) {\n  const k$$7 = BigNatModule$002EFFT$$$maxBitsInsideFp - 2 * bigL$$1 | 0;\n  const bigK$$3 = BigNatModule$$$pow64(fromBits(2, 0, false), k$$7);\n  const N = op_Multiply(bigK$$3, fromInteger(bigL$$1, false, 2));\n  return [bigL$$1, k$$7, bigK$$3, N];\n}\nexport function BigNatModule$$$encodingGivenResultBits(bitsRes) {\n  const selectFrom = function selectFrom($i$$31$$145) {\n    selectFrom: while (true) {\n      const i$$31 = $i$$31$$145;\n\n      if (i$$31 + 1 < BigNatModule$$$table.length ? bitsRes < BigNatModule$$$table[i$$31 + 1].bigN : false) {\n        $i$$31$$145 = i$$31 + 1;\n        continue selectFrom;\n      } else {\n        return BigNatModule$$$table[i$$31];\n      }\n\n      break;\n    }\n  };\n\n  if (bitsRes >= BigNatModule$$$table[0].bigN) {\n    throw new Error(\"Product is huge, around 268435456 bits, beyond quickmul\");\n  } else {\n    return selectFrom(0);\n  }\n}\nexport const BigNatModule$$$bitmask = initialize(BigNatModule$$$baseBits, function (i$$32) {\n  return BigNatModule$$$pow32(2, i$$32) - 1;\n}, Int32Array);\nexport const BigNatModule$$$twopowers = initialize(BigNatModule$$$baseBits, function (i$$33) {\n  return BigNatModule$$$pow32(2, i$$33);\n}, Int32Array);\nexport const BigNatModule$$$twopowersI64 = initialize(BigNatModule$$$baseBits, function (i$$34) {\n  return BigNatModule$$$pow64(fromBits(2, 0, false), i$$34);\n}, Array);\nexport function BigNatModule$$$wordBits(word) {\n  const hi = function hi($k$$8$$147) {\n    hi: while (true) {\n      const k$$8 = $k$$8$$147;\n\n      if (k$$8 === 0) {\n        return 0;\n      } else if ((word & BigNatModule$$$twopowers[k$$8 - 1]) !== 0) {\n        return k$$8 | 0;\n      } else {\n        $k$$8$$147 = k$$8 - 1;\n        continue hi;\n      }\n\n      break;\n    }\n  };\n\n  return hi(BigNatModule$$$baseBits) | 0;\n}\nexport function BigNatModule$$$bits(u$$6) {\n  if (u$$6.bound === 0) {\n    return 0;\n  } else {\n    return BigNatModule$$$degree(u$$6) * BigNatModule$$$baseBits + BigNatModule$$$wordBits(u$$6.digits[BigNatModule$$$degree(u$$6)]) | 0;\n  }\n}\nexport function BigNatModule$$$extractBits(n$$27, enc, bi) {\n  const bj = bi + enc.bigL - 1 | 0;\n  const biw = ~~(bi / BigNatModule$$$baseBits) | 0;\n  const bjw = ~~(bj / BigNatModule$$$baseBits) | 0;\n\n  if (biw !== bjw) {\n    const x$$47 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const y$$17 = (bjw < n$$27.bound ? n$$27.digits[bjw] : 0) | 0;\n    const xbit = bi % BigNatModule$$$baseBits | 0;\n    const nxbits = BigNatModule$$$baseBits - xbit | 0;\n    const x$$48 = x$$47 >> xbit | 0;\n    const y$$18 = y$$17 << nxbits | 0;\n    const x$$49 = x$$48 | y$$18 | 0;\n    const x$$50 = x$$49 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$50 | 0;\n  } else {\n    const x$$51 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const xbit$$1 = bi % BigNatModule$$$baseBits | 0;\n    const x$$52 = x$$51 >> xbit$$1 | 0;\n    const x$$53 = x$$52 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$53 | 0;\n  }\n}\nexport function BigNatModule$$$encodePoly(enc$$1, n$$28) {\n  const poly = fill(new Uint32Array(enc$$1.bigK), 0, enc$$1.bigK, BigNatModule$002EFFT$002EFp$$$ofInt32(0));\n  const biMax = n$$28.bound * BigNatModule$$$baseBits | 0;\n\n  const encoder = function encoder($i$$38$$154, $bi$$1$$155) {\n    encoder: while (true) {\n      const i$$38 = $i$$38$$154,\n            bi$$1 = $bi$$1$$155;\n\n      if (i$$38 === enc$$1.bigK ? true : bi$$1 > biMax) {\n        void null;\n      } else {\n        const pi = BigNatModule$$$extractBits(n$$28, enc$$1, bi$$1) | 0;\n        poly[i$$38] = BigNatModule$002EFFT$002EFp$$$ofInt32(pi);\n        const i$$39 = i$$38 + 1 | 0;\n        const bi$$2 = bi$$1 + enc$$1.bigL | 0;\n        $i$$38$$154 = i$$39;\n        $bi$$1$$155 = bi$$2;\n        continue encoder;\n      }\n\n      break;\n    }\n  };\n\n  encoder(0, 0);\n  return poly;\n}\nexport function BigNatModule$$$decodeResultBits(enc$$2, poly$$1) {\n  let n$$29 = 0;\n\n  for (let i$$40 = 0; i$$40 <= poly$$1.length - 1; i$$40++) {\n    if (poly$$1[i$$40] !== BigNatModule$002EFFT$$$mzero) {\n      n$$29 = i$$40;\n    } else {\n      void null;\n    }\n  }\n\n  const rbits = BigNatModule$002EFFT$$$maxBitsInsideFp + enc$$2.bigL * n$$29 + 1 | 0;\n  return rbits + 1 | 0;\n}\nexport function BigNatModule$$$decodePoly(enc$$3, poly$$2) {\n  const rbound$$5 = ~~(BigNatModule$$$decodeResultBits(enc$$3, poly$$2) / BigNatModule$$$baseBits) + 1 | 0;\n  const r$$15 = BigNatModule$$$createN(rbound$$5);\n\n  const evaluate = function evaluate($i$$41$$160, $j$$2$$161, $d$$3$$162) {\n    evaluate: while (true) {\n      const i$$41 = $i$$41$$160,\n            j$$2 = $j$$2$$161,\n            d$$3 = $d$$3$$162;\n\n      if (i$$41 === enc$$3.bigK) {\n        void null;\n      } else {\n        if (j$$2 >= rbound$$5) {\n          void null;\n        } else {\n          const x$$54 = op_Multiply(fromInteger(BigNatModule$002EFFT$002EFp$$$toInt(poly$$2[i$$41]), false, 2), BigNatModule$$$twopowersI64[d$$3]);\n          BigNatModule$$$contributeArr(r$$15.digits, j$$2, x$$54);\n        }\n\n        const i$$43 = i$$41 + 1 | 0;\n        const d$$4 = d$$3 + enc$$3.bigL | 0;\n        const patternInput$$1 = d$$4 >= BigNatModule$$$baseBits ? [j$$2 + 1, d$$4 - BigNatModule$$$baseBits] : [j$$2, d$$4];\n        $i$$41$$160 = i$$43;\n        $j$$2$$161 = patternInput$$1[0];\n        $d$$3$$162 = patternInput$$1[1];\n        continue evaluate;\n      }\n\n      break;\n    }\n  };\n\n  evaluate(0, 0, 0);\n  return BigNatModule$$$normN(r$$15);\n}\nexport function BigNatModule$$$quickMulUsingFft(u$$7, v$$5) {\n  const bitsRes$$1 = BigNatModule$$$bits(u$$7) + BigNatModule$$$bits(v$$5) | 0;\n  const enc$$4 = BigNatModule$$$encodingGivenResultBits(bitsRes$$1);\n  const upoly = BigNatModule$$$encodePoly(enc$$4, u$$7);\n  const vpoly = BigNatModule$$$encodePoly(enc$$4, v$$5);\n  const rpoly = BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(enc$$4.bigK, enc$$4.k, upoly, vpoly);\n  const r$$17 = BigNatModule$$$decodePoly(enc$$4, rpoly);\n  return BigNatModule$$$normN(r$$17);\n}\nexport const BigNatModule$$$minDigitsKaratsuba = 16;\nexport function BigNatModule$$$recMulKaratsuba(mul, p$$19, q$$16) {\n  const bp$$1 = p$$19.bound | 0;\n  const bq = q$$16.bound | 0;\n  const bmax = BigNatModule$$$maxInt(bp$$1, bq) | 0;\n\n  if (bmax > BigNatModule$$$minDigitsKaratsuba) {\n    const k$$9 = ~~(bmax / 2) | 0;\n    const a0 = BigNatModule$$$restrictTo(k$$9, p$$19);\n    const a1 = BigNatModule$$$shiftDown(k$$9, p$$19);\n    const b0 = BigNatModule$$$restrictTo(k$$9, q$$16);\n    const b1 = BigNatModule$$$shiftDown(k$$9, q$$16);\n    const q0 = mul(a0, b0);\n    const q1 = mul(BigNatModule$$$add(a0, a1), BigNatModule$$$add(b0, b1));\n    const q2 = mul(a1, b1);\n    const p1 = BigNatModule$$$sub(q1, BigNatModule$$$add(q0, q2));\n    const r$$18 = BigNatModule$$$add(q0, BigNatModule$$$shiftUp(k$$9, BigNatModule$$$add(p1, BigNatModule$$$shiftUp(k$$9, q2))));\n    return r$$18;\n  } else {\n    return BigNatModule$$$mulSchoolBook(p$$19, q$$16);\n  }\n}\nexport function BigNatModule$$$mulKaratsuba(x$$55, y$$19) {\n  return BigNatModule$$$recMulKaratsuba(BigNatModule$$$mulKaratsuba, x$$55, y$$19);\n}\nexport const BigNatModule$$$productDigitsUpperSchoolBook = ~~(64000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$singleDigitForceSchoolBook = ~~(32000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$productDigitsUpperFft = ~~(BigNatModule$$$table[0].bigN / BigNatModule$$$baseBits);\nexport function BigNatModule$$$mul(p$$20, q$$17) {\n  return BigNatModule$$$mulSchoolBook(p$$20, q$$17);\n}\nexport function BigNatModule$$$scaleSubInPlace(x$$57, f, a$$5, n$$30) {\n  const patternInput$$2 = [x$$57.digits, BigNatModule$$$degree(x$$57)];\n  const patternInput$$3 = [a$$5.digits, BigNatModule$$$degree(a$$5)];\n  const f$$1 = fromInteger(f, false, 2);\n  let j$$4 = 0;\n  let z$$7 = op_Multiply(f$$1, fromInteger(patternInput$$3[0][0], false, 2));\n\n  while (compare(z$$7, fromBits(0, 0, false)) > 0 ? true : j$$4 < patternInput$$3[1]) {\n    if (j$$4 > patternInput$$2[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    } else {\n      void null;\n    }\n\n    let zLo;\n    let value$$6;\n    const x$$59 = z$$7;\n    const value$$5 = op_BitwiseAnd(x$$59, BigNatModule$$$baseMaski64);\n    value$$6 = ~~toInt(value$$5);\n    zLo = value$$6;\n    let zHi;\n    const x$$60 = z$$7;\n    zHi = op_Division(x$$60, BigNatModule$$$baseNi64);\n\n    if (zLo <= patternInput$$2[0][j$$4 + n$$30]) {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] - zLo;\n    } else {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] + (BigNatModule$$$baseN - zLo);\n      zHi = op_Addition(zHi, fromBits(1, 0, false));\n    }\n\n    if (j$$4 < patternInput$$3[1]) {\n      z$$7 = op_Addition(zHi, op_Multiply(f$$1, fromInteger(patternInput$$3[0][j$$4 + 1], false, 2)));\n    } else {\n      z$$7 = zHi;\n    }\n\n    j$$4 = j$$4 + 1;\n  }\n\n  void BigNatModule$$$normN(x$$57);\n}\nexport function BigNatModule$$$scaleSub(x$$61, f$$2, a$$7, n$$31) {\n  const freshx = BigNatModule$$$add(x$$61, BigNatModule$$$zero);\n  BigNatModule$$$scaleSubInPlace(freshx, f$$2, a$$7, n$$31);\n  return BigNatModule$$$normN(freshx);\n}\nexport function BigNatModule$$$scaleAddInPlace(x$$62, f$$3, a$$8, n$$32) {\n  const patternInput$$4 = [x$$62.digits, BigNatModule$$$degree(x$$62)];\n  const patternInput$$5 = [a$$8.digits, BigNatModule$$$degree(a$$8)];\n  const f$$4 = fromInteger(f$$3, false, 2);\n  let j$$5 = 0;\n  let z$$8 = op_Multiply(f$$4, fromInteger(patternInput$$5[0][0], false, 2));\n\n  while (compare(z$$8, fromBits(0, 0, false)) > 0 ? true : j$$5 < patternInput$$5[1]) {\n    if (j$$5 > patternInput$$4[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    } else {\n      void null;\n    }\n\n    let zLo$$1;\n    let value$$8;\n    const x$$64 = z$$8;\n    const value$$7 = op_BitwiseAnd(x$$64, BigNatModule$$$baseMaski64);\n    value$$8 = ~~toInt(value$$7);\n    zLo$$1 = value$$8;\n    let zHi$$1;\n    const x$$65 = z$$8;\n    zHi$$1 = op_Division(x$$65, BigNatModule$$$baseNi64);\n\n    if (zLo$$1 < BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]) {\n      patternInput$$4[0][j$$5 + n$$32] = patternInput$$4[0][j$$5 + n$$32] + zLo$$1;\n    } else {\n      patternInput$$4[0][j$$5 + n$$32] = zLo$$1 - (BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]);\n      zHi$$1 = op_Addition(zHi$$1, fromBits(1, 0, false));\n    }\n\n    if (j$$5 < patternInput$$5[1]) {\n      z$$8 = op_Addition(zHi$$1, op_Multiply(f$$4, fromInteger(patternInput$$5[0][j$$5 + 1], false, 2)));\n    } else {\n      z$$8 = zHi$$1;\n    }\n\n    j$$5 = j$$5 + 1;\n  }\n\n  void BigNatModule$$$normN(x$$62);\n}\nexport function BigNatModule$$$scaleAdd(x$$66, f$$5, a$$10, n$$33) {\n  const freshx$$1 = BigNatModule$$$add(x$$66, BigNatModule$$$zero);\n  BigNatModule$$$scaleAddInPlace(freshx$$1, f$$5, a$$10, n$$33);\n  return BigNatModule$$$normN(freshx$$1);\n}\nexport function BigNatModule$$$removeFactor(x$$67, a$$11, n$$34) {\n  const patternInput$$6 = [BigNatModule$$$degree(a$$11), BigNatModule$$$degree(x$$67)];\n\n  if (patternInput$$6[1] < patternInput$$6[0] + n$$34) {\n    return 0;\n  } else {\n    let f$$6;\n\n    if (patternInput$$6[0] === 0) {\n      if (patternInput$$6[1] === n$$34) {\n        f$$6 = ~~(x$$67.digits[n$$34] / a$$11.digits[0]);\n      } else {\n        const f64 = op_Division(op_Addition(op_Multiply(fromInteger(x$$67.digits[patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(x$$67.digits[patternInput$$6[1] - 1], false, 2)), fromInteger(a$$11.digits[0], false, 2));\n        f$$6 = ~~toInt(f64);\n      }\n    } else if (patternInput$$6[1] === patternInput$$6[0] + n$$34) {\n      f$$6 = ~~(x$$67.digits[patternInput$$6[1]] / (a$$11.digits[patternInput$$6[0]] + 1));\n    } else {\n      const f64$$1 = op_Division(op_Addition(op_Multiply(fromInteger(x$$67.digits[patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(x$$67.digits[patternInput$$6[1] - 1], false, 2)), op_Addition(fromInteger(a$$11.digits[patternInput$$6[0]], false, 2), fromBits(1, 0, false)));\n      f$$6 = ~~toInt(f64$$1);\n    }\n\n    if (f$$6 === 0) {\n      const lte = BigNatModule$$$shiftCompare(a$$11, n$$34, x$$67, 0) !== 1;\n\n      if (lte) {\n        return 1;\n      } else {\n        return 0;\n      }\n    } else {\n      return f$$6 | 0;\n    }\n  }\n}\nexport function BigNatModule$$$divmod(b$$7, a$$12) {\n  if (BigNatModule$$$isZero(a$$12)) {\n    throw new Error();\n  } else if (BigNatModule$$$degree(b$$7) < BigNatModule$$$degree(a$$12)) {\n    return [BigNatModule$$$zero, b$$7];\n  } else {\n    const x$$68 = BigNatModule$$$copyN(b$$7);\n    const d$$6 = BigNatModule$$$createN(BigNatModule$$$degree(b$$7) - BigNatModule$$$degree(a$$12) + 1 + 1);\n    let p$$21 = BigNatModule$$$degree(b$$7) | 0;\n    const m$$2 = BigNatModule$$$degree(a$$12) | 0;\n    let n$$35 = p$$21 - m$$2 | 0;\n\n    const Invariant = function Invariant(tupledArg) {\n      void null;\n    };\n\n    let finished = false;\n\n    while (!finished) {\n      Invariant([d$$6, x$$68, n$$35, p$$21]);\n      const f$$7 = BigNatModule$$$removeFactor(x$$68, a$$12, n$$35) | 0;\n\n      if (f$$7 > 0) {\n        BigNatModule$$$scaleSubInPlace(x$$68, f$$7, a$$12, n$$35);\n        BigNatModule$$$scaleAddInPlace(d$$6, f$$7, BigNatModule$$$one, n$$35);\n        Invariant([d$$6, x$$68, n$$35, p$$21]);\n      } else {\n        finished = f$$7 === 0 ? n$$35 === 0 : false;\n\n        if (!finished) {\n          if (p$$21 === m$$2 + n$$35) {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21]);\n            n$$35 = n$$35 - 1;\n          } else {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21 - 1]);\n            n$$35 = n$$35 - 1;\n            p$$21 = p$$21 - 1;\n          }\n        } else {\n          void null;\n        }\n      }\n    }\n\n    return [BigNatModule$$$normN(d$$6), BigNatModule$$$normN(x$$68)];\n  }\n}\nexport function BigNatModule$$$div(b$$8, a$$13) {\n  return BigNatModule$$$divmod(b$$8, a$$13)[0];\n}\nexport function BigNatModule$$$rem(b$$9, a$$14) {\n  return BigNatModule$$$divmod(b$$9, a$$14)[1];\n}\nexport function BigNatModule$$$bitAnd(a$$15, b$$10) {\n  const rbound$$6 = BigNatModule$$$minInt(a$$15.bound, b$$10.bound) | 0;\n  const r$$19 = BigNatModule$$$createN(rbound$$6);\n\n  for (let i$$44 = 0; i$$44 <= r$$19.bound - 1; i$$44++) {\n    r$$19.digits[i$$44] = a$$15.digits[i$$44] & b$$10.digits[i$$44];\n  }\n\n  return BigNatModule$$$normN(r$$19);\n}\nexport function BigNatModule$$$bitOr(a$$16, b$$11) {\n  const rbound$$7 = BigNatModule$$$maxInt(a$$16.bound, b$$11.bound) | 0;\n  const r$$20 = BigNatModule$$$createN(rbound$$7);\n\n  for (let i$$45 = 0; i$$45 <= a$$16.bound - 1; i$$45++) {\n    r$$20.digits[i$$45] = r$$20.digits[i$$45] | a$$16.digits[i$$45];\n  }\n\n  for (let i$$46 = 0; i$$46 <= b$$11.bound - 1; i$$46++) {\n    r$$20.digits[i$$46] = r$$20.digits[i$$46] | b$$11.digits[i$$46];\n  }\n\n  return BigNatModule$$$normN(r$$20);\n}\nexport function BigNatModule$$$bitXor(a$$17, b$$12) {\n  const rbound$$8 = BigNatModule$$$maxInt(a$$17.bound, b$$12.bound) | 0;\n  const r$$21 = BigNatModule$$$createN(rbound$$8);\n\n  for (let i$$47 = 0; i$$47 <= a$$17.bound - 1; i$$47++) {\n    r$$21.digits[i$$47] = r$$21.digits[i$$47] ^ a$$17.digits[i$$47];\n  }\n\n  for (let i$$48 = 0; i$$48 <= b$$12.bound - 1; i$$48++) {\n    r$$21.digits[i$$48] = r$$21.digits[i$$48] ^ b$$12.digits[i$$48];\n  }\n\n  return BigNatModule$$$normN(r$$21);\n}\nexport function BigNatModule$$$hcf(a$$18, b$$13) {\n  const hcfloop = function hcfloop($a$$19$$206, $b$$14$$207) {\n    hcfloop: while (true) {\n      const a$$19 = $a$$19$$206,\n            b$$14 = $b$$14$$207;\n\n      if (BigNatModule$$$equal(BigNatModule$$$zero, a$$19)) {\n        return b$$14;\n      } else {\n        const patternInput$$8 = BigNatModule$$$divmod(b$$14, a$$19);\n        $a$$19$$206 = patternInput$$8[1];\n        $b$$14$$207 = a$$19;\n        continue hcfloop;\n      }\n\n      break;\n    }\n  };\n\n  if (BigNatModule$$$lt(a$$18, b$$13)) {\n    return hcfloop(a$$18, b$$13);\n  } else {\n    return hcfloop(b$$13, a$$18);\n  }\n}\nexport const BigNatModule$$$two = BigNatModule$$$embed(2);\nexport function BigNatModule$$$powi(x$$69, n$$36) {\n  const power = function power($acc$$2$$210, $x$$70$$211, $n$$37$$212) {\n    power: while (true) {\n      const acc$$2 = $acc$$2$$210,\n            x$$70 = $x$$70$$211,\n            n$$37 = $n$$37$$212;\n\n      if (n$$37 === 0) {\n        return acc$$2;\n      } else if (n$$37 % 2 === 0) {\n        $acc$$2$$210 = acc$$2;\n        $x$$70$$211 = BigNatModule$$$mul(x$$70, x$$70);\n        $n$$37$$212 = ~~(n$$37 / 2);\n        continue power;\n      } else {\n        $acc$$2$$210 = BigNatModule$$$mul(x$$70, acc$$2);\n        $x$$70$$211 = BigNatModule$$$mul(x$$70, x$$70);\n        $n$$37$$212 = ~~(n$$37 / 2);\n        continue power;\n      }\n\n      break;\n    }\n  };\n\n  return power(BigNatModule$$$one, x$$69, n$$36);\n}\nexport function BigNatModule$$$pow(x$$71, n$$38) {\n  const power$$1 = function power$$1($acc$$3$$215, $x$$72$$216, $n$$39$$217) {\n    power$$1: while (true) {\n      const acc$$3 = $acc$$3$$215,\n            x$$72 = $x$$72$$216,\n            n$$39 = $n$$39$$217;\n\n      if (BigNatModule$$$isZero(n$$39)) {\n        return acc$$3;\n      } else {\n        const patternInput$$9 = BigNatModule$$$divmod(n$$39, BigNatModule$$$two);\n\n        if (BigNatModule$$$isZero(patternInput$$9[1])) {\n          $acc$$3$$215 = acc$$3;\n          $x$$72$$216 = BigNatModule$$$mul(x$$72, x$$72);\n          $n$$39$$217 = patternInput$$9[0];\n          continue power$$1;\n        } else {\n          $acc$$3$$215 = BigNatModule$$$mul(x$$72, acc$$3);\n          $x$$72$$216 = BigNatModule$$$mul(x$$72, x$$72);\n          $n$$39$$217 = patternInput$$9[0];\n          continue power$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return power$$1(BigNatModule$$$one, x$$71, n$$38);\n}\nexport function BigNatModule$$$toFloat(n$$40) {\n  const basef = BigNatModule$$$baseN;\n\n  const evalFloat = function evalFloat($acc$$4$$219, $k$$10$$220, $i$$49$$221) {\n    evalFloat: while (true) {\n      const acc$$4 = $acc$$4$$219,\n            k$$10 = $k$$10$$220,\n            i$$49 = $i$$49$$221;\n\n      if (i$$49 === n$$40.bound) {\n        return acc$$4;\n      } else {\n        $acc$$4$$219 = acc$$4 + k$$10 * n$$40.digits[i$$49];\n        $k$$10$$220 = k$$10 * basef;\n        $i$$49$$221 = i$$49 + 1;\n        continue evalFloat;\n      }\n\n      break;\n    }\n  };\n\n  return evalFloat(0, 1, 0);\n}\nexport function BigNatModule$$$ofInt32(n$$41) {\n  return BigNatModule$$$embed(n$$41);\n}\nexport function BigNatModule$$$ofInt64(n$$42) {\n  return BigNatModule$$$embed64(n$$42);\n}\nexport function BigNatModule$$$toUInt32(n$$43) {\n  const matchValue = n$$43.bound | 0;\n\n  switch (matchValue) {\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        const value$$9 = n$$43.digits[0] | 0;\n        return value$$9 >>> 0;\n      }\n\n    case 2:\n      {\n        const patternInput$$10 = [n$$43.digits[0], n$$43.digits[1]];\n\n        if (patternInput$$10[1] > BigNatModule$$$baseMask32B) {\n          throw new Error();\n        } else {\n          void null;\n        }\n\n        return ((patternInput$$10[0] & BigNatModule$$$baseMask32A) >>> 0) + ((patternInput$$10[1] & BigNatModule$$$baseMask32B) >>> 0 << BigNatModule$$$baseShift32B >>> 0);\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toUInt64(n$$44) {\n  const matchValue$$1 = n$$44.bound | 0;\n\n  switch (matchValue$$1) {\n    case 0:\n      {\n        return fromBits(0, 0, true);\n      }\n\n    case 1:\n      {\n        const value$$10 = n$$44.digits[0] | 0;\n        return fromInteger(value$$10, true, 2);\n      }\n\n    case 2:\n      {\n        const patternInput$$11 = [n$$44.digits[0], n$$44.digits[1]];\n        return op_Addition(fromInteger(patternInput$$11[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$11[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B));\n      }\n\n    case 3:\n      {\n        const patternInput$$12 = [n$$44.digits[0], n$$44.digits[1], n$$44.digits[2]];\n\n        if (patternInput$$12[2] > BigNatModule$$$baseMask64C) {\n          throw new Error();\n        } else {\n          void null;\n        }\n\n        return op_Addition(op_Addition(fromInteger(patternInput$$12[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$12[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B)), op_LeftShift(fromInteger(patternInput$$12[2] & BigNatModule$$$baseMask64C, true, 2), BigNatModule$$$baseShift64C));\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toString(n$$45) {\n  const degn = BigNatModule$$$degree(n$$45) | 0;\n\n  const route = function route($prior$$227, $k$$11$$228, $ten2k$$229) {\n    route: while (true) {\n      const prior = $prior$$227,\n            k$$11 = $k$$11$$228,\n            ten2k = $ten2k$$229;\n\n      if (BigNatModule$$$degree(ten2k) > degn) {\n        return new List([k$$11, ten2k], prior);\n      } else {\n        $prior$$227 = new List([k$$11, ten2k], prior);\n        $k$$11$$228 = k$$11 + 1;\n        $ten2k$$229 = BigNatModule$$$mul(ten2k, ten2k);\n        continue route;\n      }\n\n      break;\n    }\n  };\n\n  const kten2ks = route(new List(), 0, BigNatModule$$$embed(10));\n\n  const collect = function collect(isLeading, digits, n$$46, _arg1$$1) {\n    if (_arg1$$1.tail != null) {\n      const patternInput$$13 = BigNatModule$$$divmod(n$$46, _arg1$$1.head[1]);\n\n      if (isLeading ? BigNatModule$$$isZero(patternInput$$13[0]) : false) {\n        const digits$$1 = collect(isLeading, digits, patternInput$$13[1], _arg1$$1.tail);\n        return digits$$1;\n      } else {\n        const digits$$2 = collect(false, digits, patternInput$$13[1], _arg1$$1.tail);\n        const digits$$3 = collect(isLeading, digits$$2, patternInput$$13[0], _arg1$$1.tail);\n        return digits$$3;\n      }\n    } else {\n      const n$$47 = BigNatModule$$$eval32(n$$46) | 0;\n\n      if (isLeading ? n$$47 === 0 : false) {\n        return digits;\n      } else {\n        return new List(int32ToString(n$$47), digits);\n      }\n    }\n  };\n\n  const digits$$4 = collect(true, new List(), n$$45, kten2ks);\n\n  if (digits$$4.tail == null) {\n    return \"0\";\n  } else {\n    let arg00;\n    arg00 = ofList(digits$$4, Array);\n    return join(\"\", arg00);\n  }\n}\nexport function BigNatModule$$$ofString(str) {\n  const len = str.length | 0;\n\n  if (isNullOrEmpty(str)) {\n    throw new Error(\"empty string\\\\nParameter name: str\");\n  } else {\n    void null;\n  }\n\n  const ten = BigNatModule$$$embed(10);\n\n  const build = function build($acc$$5$$235, $i$$50$$236) {\n    build: while (true) {\n      const acc$$5 = $acc$$5$$235,\n            i$$50 = $i$$50$$236;\n\n      if (i$$50 === len) {\n        return acc$$5;\n      } else {\n        const c$$12 = str[i$$50];\n        const d$$7 = c$$12.charCodeAt(0) - \"0\".charCodeAt(0) | 0;\n\n        if (0 <= d$$7 ? d$$7 <= 9 : false) {\n          $acc$$5$$235 = BigNatModule$$$add(BigNatModule$$$mul(ten, acc$$5), BigNatModule$$$embed(d$$7));\n          $i$$50$$236 = i$$50 + 1;\n          continue build;\n        } else {\n          throw new Error();\n        }\n      }\n\n      break;\n    }\n  };\n\n  return build(BigNatModule$$$embed(0), 0);\n}\nexport function BigNatModule$$$isSmall(n$$48) {\n  return n$$48.bound <= 1;\n}\nexport function BigNatModule$$$getSmall(n$$49) {\n  if (0 < n$$49.bound) {\n    return n$$49.digits[0] | 0;\n  } else {\n    return 0;\n  }\n}\nexport function BigNatModule$$$factorial(n$$50) {\n  const productR = function productR(a$$20, b$$15) {\n    if (BigNatModule$$$equal(a$$20, b$$15)) {\n      return a$$20;\n    } else {\n      const m$$3 = BigNatModule$$$div(BigNatModule$$$add(a$$20, b$$15), BigNatModule$$$ofInt32(2));\n      return BigNatModule$$$mul(productR(a$$20, m$$3), productR(BigNatModule$$$add(m$$3, BigNatModule$$$one), b$$15));\n    }\n  };\n\n  return productR(BigNatModule$$$one, n$$50);\n}","import { declare, Record } from \"../Types.js\";\nimport { class_type } from \"../Reflection.js\";\nimport { BigNatModule$$$factorial as BigNatModule$0024$0024$0024factorial, BigNatModule$$$ofString as BigNatModule$0024$0024$0024ofString, BigNatModule$$$toFloat as BigNatModule$0024$0024$0024toFloat, BigNatModule$$$toUInt64 as BigNatModule$0024$0024$0024toUInt64, BigNatModule$$$toUInt32 as BigNatModule$0024$0024$0024toUInt32, BigNatModule$$$pow as BigNatModule$0024$0024$0024pow, BigNatModule$$$rem as BigNatModule$0024$0024$0024rem, BigNatModule$$$two as BigNatModule$0024$0024$0024two, BigNatModule$$$lte as BigNatModule$0024$0024$0024lte, BigNatModule$$$hcf as BigNatModule$0024$0024$0024hcf, BigNatModule$$$bitXor as BigNatModule$0024$0024$0024bitXor, BigNatModule$$$bitOr as BigNatModule$0024$0024$0024bitOr, BigNatModule$$$bitAnd as BigNatModule$0024$0024$0024bitAnd, BigNatModule$$$divmod as BigNatModule$0024$0024$0024divmod, BigNatModule$$$mul as BigNatModule$0024$0024$0024mul, BigNatModule$$$isOne as BigNatModule$0024$0024$0024isOne, BigNatModule$$$sub as BigNatModule$0024$0024$0024sub, BigNatModule$$$gte as BigNatModule$0024$0024$0024gte, BigNatModule$$$scale as BigNatModule$0024$0024$0024scale, BigNatModule$$$add as BigNatModule$0024$0024$0024add, BigNatModule$$$one as BigNatModule$0024$0024$0024one, BigNatModule$$$ofInt64 as BigNatModule$0024$0024$0024ofInt64, BigNatModule$$$toString as BigNatModule$0024$0024$0024toString, BigNatModule$$$hash as BigNatModule$0024$0024$0024hash, BigNatModule$$$gt as BigNatModule$0024$0024$0024gt, BigNatModule$$$lt as BigNatModule$0024$0024$0024lt, BigNatModule$$$isZero as BigNatModule$0024$0024$0024isZero, BigNatModule$$$equal as BigNatModule$0024$0024$0024equal, BigNatModule$$$getSmall as BigNatModule$0024$0024$0024getSmall, BigNatModule$$$isSmall as BigNatModule$0024$0024$0024isSmall, BigNatModule$$$ofInt32 as BigNatModule$0024$0024$0024ofInt32 } from \"./n\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, compare, fromBits, op_UnaryNegation, fromInteger } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\nexport const BigInteger = declare(function BigInt_BigInteger(signInt, v) {\n  const $this$$1 = this;\n  void null;\n  $this$$1.signInt = signInt;\n  $this$$1.v = v;\n  void null;\n}, Record);\nexport function BigInteger$reflection() {\n  return class_type(\"BigInt.BigInteger\", undefined, BigInteger);\n}\nexport function BigInteger$$$$002Ector$$Z2BE94A1(signInt, v) {\n  return this instanceof BigInteger ? BigInteger.call(this, signInt, v) : new BigInteger(signInt, v);\n}\n\n(function BigInteger$$$$002Ecctor() {\n  BigInteger.smallLim = 4096;\n  BigInteger.smallPosTab = initialize(BigInteger.smallLim, BigNatModule$0024$0024$0024ofInt32, Array);\n  BigInteger.one = BigInteger$$$$002Ector$$Z524259A4(1);\n  BigInteger.two = BigInteger$$$$002Ector$$Z524259A4(2);\n  BigInteger.zero = BigInteger$$$$002Ector$$Z524259A4(0);\n  void null;\n})();\n\nexport function BigInteger$$$nat$$Z67CCE57D(n$$1) {\n  if (BigNatModule$0024$0024$0024isSmall(n$$1) ? BigNatModule$0024$0024$0024getSmall(n$$1) < BigInteger.smallLim : false) {\n    return BigInteger.smallPosTab[BigNatModule$0024$0024$0024getSmall(n$$1)];\n  } else {\n    return n$$1;\n  }\n}\nexport function BigInteger$$$create$$Z2BE94A1(s, n$$2) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(s, BigInteger$$$nat$$Z67CCE57D(n$$2));\n}\nexport function BigInteger$$$posn$$Z67CCE57D(n$$3) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(1, BigInteger$$$nat$$Z67CCE57D(n$$3));\n}\nexport function BigInteger$$$negn$$Z67CCE57D(n$$4) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(-1, BigInteger$$$nat$$Z67CCE57D(n$$4));\n}\nexport function BigInteger$$get_Sign(x) {\n  if (BigInteger$$get_IsZero(x)) {\n    return 0;\n  } else {\n    return x.signInt | 0;\n  }\n}\nexport function BigInteger$$get_SignInt(x$$1) {\n  return x$$1.signInt;\n}\nexport function BigInteger$$get_V(x$$2) {\n  return x$$2.v;\n}\nexport function BigInteger$$$op_Equality$$56F059C0(x$$3, y) {\n  const matchValue = [BigInteger$$get_SignInt(x$$3), BigInteger$$get_SignInt(y)];\n  var $target$$12;\n\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 1;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 8;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 3;\n    } else {\n      $target$$12 = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 6;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 4;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 5;\n    } else {\n      $target$$12 = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 2;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 7;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 0;\n    } else {\n      $target$$12 = 9;\n    }\n  } else {\n    $target$$12 = 9;\n  }\n\n  switch ($target$$12) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_Inequality$$56F059C0(x$$4, y$$1) {\n  return !BigInteger$$$op_Equality$$56F059C0(x$$4, y$$1);\n}\nexport function BigInteger$$$op_LessThan$$56F059C0(x$$5, y$$2) {\n  const matchValue$$1 = [BigInteger$$get_SignInt(x$$5), BigInteger$$get_SignInt(y$$2)];\n  var $target$$17;\n\n  if (matchValue$$1[0] === -1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 1;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 8;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 3;\n    } else {\n      $target$$17 = 9;\n    }\n  } else if (matchValue$$1[0] === 0) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 6;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 4;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 5;\n    } else {\n      $target$$17 = 9;\n    }\n  } else if (matchValue$$1[0] === 1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 2;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 7;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 0;\n    } else {\n      $target$$17 = 9;\n    }\n  } else {\n    $target$$17 = 9;\n  }\n\n  switch ($target$$17) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(x$$5), BigInteger$$get_V(y$$2));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(y$$2), BigInteger$$get_V(x$$5));\n      }\n\n    case 2:\n      {\n        return false;\n      }\n\n    case 3:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n        }\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n      }\n\n    case 6:\n      {\n        return false;\n      }\n\n    case 7:\n      {\n        return false;\n      }\n\n    case 8:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThan$$56F059C0(x$$6, y$$3) {\n  const matchValue$$2 = [BigInteger$$get_SignInt(x$$6), BigInteger$$get_SignInt(y$$3)];\n  var $target$$20;\n\n  if (matchValue$$2[0] === -1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 1;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 8;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 3;\n    } else {\n      $target$$20 = 9;\n    }\n  } else if (matchValue$$2[0] === 0) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 6;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 4;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 5;\n    } else {\n      $target$$20 = 9;\n    }\n  } else if (matchValue$$2[0] === 1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 2;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 7;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 0;\n    } else {\n      $target$$20 = 9;\n    }\n  } else {\n    $target$$20 = 9;\n  }\n\n  switch ($target$$20) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(x$$6), BigInteger$$get_V(y$$3));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(y$$3), BigInteger$$get_V(x$$6));\n      }\n\n    case 2:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n        }\n      }\n\n    case 3:\n      {\n        return false;\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return false;\n      }\n\n    case 6:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n      }\n\n    case 7:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6));\n      }\n\n    case 8:\n      {\n        return false;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$compare$$56F059C0(n$$5, nn) {\n  if (BigInteger$$$op_LessThan$$56F059C0(n$$5, nn)) {\n    return -1 | 0;\n  } else if (BigInteger$$$op_Equality$$56F059C0(n$$5, nn)) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\nexport function BigInteger$$$hash$$Z665282C2(z) {\n  if (BigInteger$$get_SignInt(z) === 0) {\n    return 1;\n  } else {\n    return BigInteger$$get_SignInt(z) + BigNatModule$0024$0024$0024hash(BigInteger$$get_V(z)) | 0;\n  }\n}\n\nBigInteger.prototype.toString = function () {\n  const x$$7 = this;\n  const matchValue$$3 = BigInteger$$get_SignInt(x$$7) | 0;\n\n  switch (matchValue$$3) {\n    case -1:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$7)) ? \"0\" : \"-\" + BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    case 0:\n      {\n        return \"0\";\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\");\n      }\n  }\n};\n\nexport function BigInteger$$get_StructuredDisplayString(x$$8) {\n  return String(x$$8);\n}\n\nBigInteger.prototype.Equals = function (obj) {\n  const this$ = this;\n  return obj instanceof BigInteger ? BigInteger$$$op_Equality$$56F059C0(this$, obj) : false;\n};\n\nBigInteger.prototype.GetHashCode = function () {\n  const x$$9 = this;\n  return BigInteger$$$hash$$Z665282C2(x$$9) | 0;\n};\n\nexport function BigInteger$$$$002Ector$$Z524259A4(n$$6) {\n  if (n$$6 >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1(1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(n$$6)));\n  } else if (n$$6 === -2147483648) {\n    return BigInteger$$$$002Ector$$Z2BE94A1(-1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(fromInteger(n$$6, false, 2)))));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1(-1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(op_UnaryNegation_Int32(n$$6))));\n  }\n}\nexport function BigInteger$$$$002Ector$$Z524259C1(n$$7) {\n  if (compare(n$$7, fromBits(0, 0, false)) >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1(1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(n$$7)));\n  } else if (equals(n$$7, fromBits(0, 2147483648, false))) {\n    return BigInteger$$$$002Ector$$Z2BE94A1(-1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024add(BigNatModule$0024$0024$0024ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule$0024$0024$0024one)));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1(-1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(n$$7))));\n  }\n}\nexport function BigInteger$$$get_One() {\n  return BigInteger.one;\n}\nexport function BigInteger$$$get_Two() {\n  return BigInteger.two;\n}\nexport function BigInteger$$$get_Zero() {\n  return BigInteger.zero;\n}\nexport function BigInteger$$$op_UnaryNegation$$Z665282C2(z$$1) {\n  const matchValue$$4 = BigInteger$$get_SignInt(z$$1) | 0;\n\n  if (matchValue$$4 === 0) {\n    return BigInteger$$$get_Zero();\n  } else {\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(matchValue$$4), BigInteger$$get_V(z$$1));\n  }\n}\nexport function BigInteger$$$Scale$$Z320F31E(k, z$$2) {\n  if (BigInteger$$get_SignInt(z$$2) === 0) {\n    return BigInteger$$$get_Zero();\n  } else if (k < 0) {\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(BigInteger$$get_SignInt(z$$2)), BigNatModule$0024$0024$0024scale(op_UnaryNegation_Int32(k), BigInteger$$get_V(z$$2)));\n  } else {\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(z$$2), BigNatModule$0024$0024$0024scale(k, BigInteger$$get_V(z$$2)));\n  }\n}\nexport function BigInteger$$$subnn$$6A57060(nx, ny) {\n  if (BigNatModule$0024$0024$0024gte(nx, ny)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(nx, ny));\n  } else {\n    return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(ny, nx));\n  }\n}\nexport function BigInteger$$$addnn$$6A57060(nx$$1, ny$$1) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024add(nx$$1, ny$$1));\n}\nexport function BigInteger$$get_IsZero(x$$10) {\n  if (BigInteger$$get_SignInt(x$$10) === 0) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$10));\n  }\n}\nexport function BigInteger$$get_IsOne(x$$11) {\n  if (BigInteger$$get_SignInt(x$$11) === 1) {\n    return BigNatModule$0024$0024$0024isOne(BigInteger$$get_V(x$$11));\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$op_Addition$$56F059C0(x$$12, y$$4) {\n  if (BigInteger$$get_IsZero(y$$4)) {\n    return x$$12;\n  } else if (BigInteger$$get_IsZero(x$$12)) {\n    return y$$4;\n  } else {\n    const matchValue$$5 = [BigInteger$$get_SignInt(x$$12), BigInteger$$get_SignInt(y$$4)];\n    var $target$$38;\n\n    if (matchValue$$5[0] === -1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$38 = 1;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$38 = 3;\n      } else {\n        $target$$38 = 4;\n      }\n    } else if (matchValue$$5[0] === 1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$38 = 2;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$38 = 0;\n      } else {\n        $target$$38 = 4;\n      }\n    } else {\n      $target$$38 = 4;\n    }\n\n    switch ($target$$38) {\n      case 0:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4)));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$4), BigInteger$$get_V(x$$12));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Subtraction$$56F059C0(x$$13, y$$5) {\n  if (BigInteger$$get_IsZero(y$$5)) {\n    return x$$13;\n  } else if (BigInteger$$get_IsZero(x$$13)) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(y$$5);\n  } else {\n    const matchValue$$6 = [BigInteger$$get_SignInt(x$$13), BigInteger$$get_SignInt(y$$5)];\n    var $target$$41;\n\n    if (matchValue$$6[0] === -1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$41 = 1;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$41 = 3;\n      } else {\n        $target$$41 = 4;\n      }\n    } else if (matchValue$$6[0] === 1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$41 = 2;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$41 = 0;\n      } else {\n        $target$$41 = 4;\n      }\n    } else {\n      $target$$41 = 4;\n    }\n\n    switch ($target$$41) {\n      case 0:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$5), BigInteger$$get_V(x$$13));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5)));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Multiply$$56F059C0(x$$14, y$$6) {\n  if (BigInteger$$get_IsZero(x$$14)) {\n    return x$$14;\n  } else if (BigInteger$$get_IsZero(y$$6)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(x$$14)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(y$$6)) {\n    return x$$14;\n  } else {\n    const m = BigNatModule$0024$0024$0024mul(BigInteger$$get_V(x$$14), BigInteger$$get_V(y$$6));\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(x$$14) * BigInteger$$get_SignInt(y$$6), m);\n  }\n}\nexport function BigInteger$$$DivRem$$56F059C0(x$$15, y$$7) {\n  if (BigInteger$$get_IsZero(y$$7)) {\n    throw new Error();\n  } else {\n    void null;\n  }\n\n  if (BigInteger$$get_IsZero(x$$15)) {\n    return [BigInteger$$$get_Zero(), BigInteger$$$get_Zero()];\n  } else {\n    const patternInput = BigNatModule$0024$0024$0024divmod(BigInteger$$get_V(x$$15), BigInteger$$get_V(y$$7));\n    const matchValue$$7 = [BigInteger$$get_SignInt(x$$15), BigInteger$$get_SignInt(y$$7)];\n    var $target$$46;\n\n    if (matchValue$$7[0] === -1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$46 = 1;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$46 = 3;\n      } else {\n        $target$$46 = 4;\n      }\n    } else if (matchValue$$7[0] === 1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$46 = 2;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$46 = 0;\n      } else {\n        $target$$46 = 4;\n      }\n    } else {\n      $target$$46 = 4;\n    }\n\n    switch ($target$$46) {\n      case 0:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 1:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 2:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 3:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Division$$56F059C0(x$$16, y$$8) {\n  const tuple = BigInteger$$$DivRem$$56F059C0(x$$16, y$$8);\n  return tuple[0];\n}\nexport function BigInteger$$$op_Modulus$$56F059C0(x$$17, y$$9) {\n  const tuple$$1 = BigInteger$$$DivRem$$56F059C0(x$$17, y$$9);\n  return tuple$$1[1];\n}\nexport function BigInteger$$$op_RightShift$$62E082A2(x$$18, y$$10) {\n  return BigInteger$$$op_Division$$56F059C0(x$$18, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$10));\n}\nexport function BigInteger$$$op_LeftShift$$62E082A2(x$$19, y$$11) {\n  return BigInteger$$$op_Multiply$$56F059C0(x$$19, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$11));\n}\nexport function BigInteger$$$op_BitwiseAnd$$56F059C0(x$$20, y$$12) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitAnd(BigInteger$$get_V(x$$20), BigInteger$$get_V(y$$12)));\n}\nexport function BigInteger$$$op_BitwiseOr$$56F059C0(x$$21, y$$13) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitOr(BigInteger$$get_V(x$$21), BigInteger$$get_V(y$$13)));\n}\nexport function BigInteger$$$op_ExclusiveOr$$56F059C0(x$$22, y$$14) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitXor(BigInteger$$get_V(x$$22), BigInteger$$get_V(y$$14)));\n}\nexport function BigInteger$$$GreatestCommonDivisor$$56F059C0(x$$23, y$$15) {\n  const matchValue$$8 = [BigInteger$$get_SignInt(x$$23), BigInteger$$get_SignInt(y$$15)];\n\n  if (matchValue$$8[0] === 0) {\n    if (matchValue$$8[1] === 0) {\n      return BigInteger$$$get_Zero();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(y$$15));\n    }\n  } else if (matchValue$$8[1] === 0) {\n    return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(x$$23));\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024hcf(BigInteger$$get_V(x$$23), BigInteger$$get_V(y$$15)));\n  }\n}\nexport function BigInteger$$get_IsNegative(x$$24) {\n  if (BigInteger$$get_SignInt(x$$24) === -1) {\n    return !BigInteger$$get_IsZero(x$$24);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$get_IsPositive(x$$25) {\n  if (BigInteger$$get_SignInt(x$$25) === 1) {\n    return !BigInteger$$get_IsZero(x$$25);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$Abs$$Z665282C2(x$$26) {\n  if (BigInteger$$get_SignInt(x$$26) === -1) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(x$$26);\n  } else {\n    return x$$26;\n  }\n}\nexport function BigInteger$$$op_LessThanOrEqual$$56F059C0(x$$27, y$$16) {\n  const matchValue$$9 = [BigInteger$$get_SignInt(x$$27), BigInteger$$get_SignInt(y$$16)];\n  var $target$$68;\n\n  if (matchValue$$9[0] === -1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 1;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 6;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 3;\n    } else {\n      $target$$68 = 9;\n    }\n  } else if (matchValue$$9[0] === 0) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 8;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 4;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 7;\n    } else {\n      $target$$68 = 9;\n    }\n  } else if (matchValue$$9[0] === 1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 2;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 5;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 0;\n    } else {\n      $target$$68 = 9;\n    }\n  } else {\n    $target$$68 = 9;\n  }\n\n  switch ($target$$68) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(x$$27), BigInteger$$get_V(y$$16));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(y$$16), BigInteger$$get_V(x$$27));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        return true;\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27));\n      }\n\n    case 6:\n      {\n        return true;\n      }\n\n    case 7:\n      {\n        return true;\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThanOrEqual$$56F059C0(x$$28, y$$17) {\n  const matchValue$$10 = [BigInteger$$get_SignInt(x$$28), BigInteger$$get_SignInt(y$$17)];\n  var $target$$71;\n\n  if (matchValue$$10[0] === -1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 1;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 6;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 3;\n    } else {\n      $target$$71 = 9;\n    }\n  } else if (matchValue$$10[0] === 0) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 8;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 4;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 7;\n    } else {\n      $target$$71 = 9;\n    }\n  } else if (matchValue$$10[0] === 1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 2;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 5;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 0;\n    } else {\n      $target$$71 = 9;\n    }\n  } else {\n    $target$$71 = 9;\n  }\n\n  switch ($target$$71) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(x$$28), BigInteger$$get_V(y$$17));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(y$$17), BigInteger$$get_V(x$$28));\n      }\n\n    case 2:\n      {\n        return true;\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return true;\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n      }\n\n    case 8:\n      {\n        return true;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$Pow$$62E082A2(x$$29, y$$18) {\n  if (y$$18 < 0) {\n    throw new Error(\"y\");\n  } else {\n    void null;\n  }\n\n  const matchValue$$11 = [BigInteger$$get_IsZero(x$$29), y$$18];\n\n  if (matchValue$$11[0]) {\n    if (matchValue$$11[1] === 0) {\n      return BigInteger$$$get_One();\n    } else {\n      return BigInteger$$$get_Zero();\n    }\n  } else {\n    const yval = BigInteger$$$$002Ector$$Z524259A4(y$$18);\n    return BigInteger$$$create$$Z2BE94A1(BigNatModule$0024$0024$0024isZero(BigNatModule$0024$0024$0024rem(BigInteger$$get_V(yval), BigNatModule$0024$0024$0024two)) ? 1 : BigInteger$$get_SignInt(x$$29), BigNatModule$0024$0024$0024pow(BigInteger$$get_V(x$$29), BigInteger$$get_V(yval)));\n  }\n}\nexport function BigInteger$$get_ToInt32(x$$30) {\n  if (BigInteger$$get_IsZero(x$$30)) {\n    return 0;\n  } else {\n    const u = BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$30));\n\n    if (u <= 2147483647 >>> 0) {\n      return BigInteger$$get_SignInt(x$$30) * ~~u | 0;\n    } else if (BigInteger$$get_SignInt(x$$30) === -1 ? u === 2147483647 + 1 >>> 0 : false) {\n      return -2147483648 | 0;\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt32(x$$31) {\n  if (BigInteger$$get_IsZero(x$$31)) {\n    return 0;\n  } else {\n    return BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$31));\n  }\n}\nexport function BigInteger$$get_ToInt64(x$$32) {\n  if (BigInteger$$get_IsZero(x$$32)) {\n    return fromBits(0, 0, false);\n  } else {\n    const u$$1 = BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$32));\n\n    if (compare(u$$1, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n      return op_Multiply(fromInteger(BigInteger$$get_SignInt(x$$32), false, 2), fromValue(u$$1, false));\n    } else if (BigInteger$$get_SignInt(x$$32) === -1 ? equals(u$$1, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n      return fromBits(0, 2147483648, false);\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt64(x$$33) {\n  if (BigInteger$$get_IsZero(x$$33)) {\n    return fromBits(0, 0, true);\n  } else {\n    return BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$33));\n  }\n}\nexport function BigInteger$$get_ToDouble(x$$34) {\n  const matchValue$$12 = BigInteger$$get_SignInt(x$$34) | 0;\n\n  switch (matchValue$$12) {\n    case -1:\n      {\n        return -BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$get_ToSByte(x$$35) {\n  return (BigInteger$$get_ToInt32(x$$35) + 0x80 & 0xFF) - 0x80;\n}\nexport function BigInteger$$get_ToByte(x$$36) {\n  return BigInteger$$get_ToUInt32(x$$36) & 0xFF;\n}\nexport function BigInteger$$get_ToInt16(x$$37) {\n  return (BigInteger$$get_ToInt32(x$$37) + 0x8000 & 0xFFFF) - 0x8000;\n}\nexport function BigInteger$$get_ToUInt16(x$$38) {\n  return BigInteger$$get_ToUInt32(x$$38) & 0xFFFF;\n}\nexport function BigInteger$$get_ToSingle(x$$39) {\n  return BigInteger$$get_ToDouble(x$$39);\n}\nexport function BigInteger$$get_ToDecimal(x$$40) {\n  return new Decimal(BigInteger$$get_ToDouble(x$$40));\n}\nexport function BigInteger$$$Parse$$Z721C83C5(text) {\n  if (text == null) {\n    throw new Error(\"text\");\n  } else {\n    void null;\n  }\n\n  const text$$1 = text.trim();\n  const len = text$$1.length | 0;\n\n  if (len === 0) {\n    throw new Error();\n  } else {\n    void null;\n  }\n\n  const matchValue$$13 = [text$$1[0], len];\n\n  if (matchValue$$13[0] === \"+\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else if (matchValue$$13[0] === \"-\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1));\n  }\n}\nexport function BigInteger$$get_IsSmall(x$$41) {\n  if (BigInteger$$get_IsZero(x$$41)) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isSmall(BigInteger$$get_V(x$$41));\n  }\n}\nexport function BigInteger$$$Factorial$$Z665282C2(x$$42) {\n  if (BigInteger$$get_IsNegative(x$$42)) {\n    throw new Error(\"mustBeNonNegative\\\\nParameter name: x\");\n  } else {\n    void null;\n  }\n\n  if (BigInteger$$get_IsPositive(x$$42)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024factorial(BigInteger$$get_V(x$$42)));\n  } else {\n    return BigInteger$$$get_One();\n  }\n}\nexport function BigInteger$$$op_UnaryPlus$$Z665282C2(n1) {\n  return n1;\n}\nexport function BigInteger$$$FromInt64$$Z524259C1(x$$43) {\n  return BigInteger$$$$002Ector$$Z524259C1(x$$43);\n}\nexport function BigInteger$$$FromInt32$$Z524259A4(x$$44) {\n  return BigInteger$$$$002Ector$$Z524259A4(x$$44);\n}\n\nBigInteger.prototype.CompareTo = function (obj$$1) {\n  const this$$$1 = this;\n\n  if (obj$$1 instanceof BigInteger) {\n    return BigInteger$$$compare$$56F059C0(this$$$1, obj$$1) | 0;\n  } else {\n    throw new Error(\"the objects are not comparable\\\\nParameter name: obj\");\n  }\n};","import { BigInteger$$$op_Inequality$$56F059C0 as BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0, BigInteger$$$op_Equality$$56F059C0 as BigInteger$0024$0024$0024op_Equality$0024$002456F059C0, BigInteger$$$op_GreaterThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0, BigInteger$$$op_GreaterThan$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0, BigInteger$$$op_LessThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0, BigInteger$$$op_LessThan$$56F059C0 as BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0, BigInteger$$$op_ExclusiveOr$$56F059C0 as BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0, BigInteger$$$op_BitwiseOr$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0, BigInteger$$$op_BitwiseAnd$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0, BigInteger$$$op_LeftShift$$62E082A2 as BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2, BigInteger$$$op_RightShift$$62E082A2 as BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2, BigInteger$$$op_UnaryPlus$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2, BigInteger$$$op_UnaryNegation$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2, BigInteger$$$op_Modulus$$56F059C0 as BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0, BigInteger$$$op_Division$$56F059C0 as BigInteger$0024$0024$0024op_Division$0024$002456F059C0, BigInteger$$$op_Multiply$$56F059C0 as BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0, BigInteger$$$op_Subtraction$$56F059C0 as BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0, BigInteger$$$op_Addition$$56F059C0 as BigInteger$0024$0024$0024op_Addition$0024$002456F059C0, BigInteger$$get_IsOne as BigInteger$0024$0024get_IsOne, BigInteger$$get_IsZero as BigInteger$0024$0024get_IsZero, BigInteger$$get_Sign as BigInteger$0024$0024get_Sign, BigInteger$$get_ToDecimal as BigInteger$0024$0024get_ToDecimal, BigInteger$$get_ToDouble as BigInteger$0024$0024get_ToDouble, BigInteger$$get_ToSingle as BigInteger$0024$0024get_ToSingle, BigInteger$$get_ToUInt64 as BigInteger$0024$0024get_ToUInt64, BigInteger$$get_ToInt64 as BigInteger$0024$0024get_ToInt64, BigInteger$$get_ToUInt32 as BigInteger$0024$0024get_ToUInt32, BigInteger$$get_ToInt32 as BigInteger$0024$0024get_ToInt32, BigInteger$$get_ToUInt16 as BigInteger$0024$0024get_ToUInt16, BigInteger$$get_ToInt16 as BigInteger$0024$0024get_ToInt16, BigInteger$$get_ToByte as BigInteger$0024$0024get_ToByte, BigInteger$$get_ToSByte as BigInteger$0024$0024get_ToSByte, BigInteger$$$$002Ector$$Z524259A4 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4, BigInteger$$$$002Ector$$Z524259C1 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1, BigInteger$$$get_Two as BigInteger$0024$0024$0024get_Two, BigInteger$$$get_One as BigInteger$0024$0024$0024get_One, BigInteger$$$Abs$$Z665282C2 as BigInteger$0024$0024$0024Abs$0024$0024Z665282C2, BigInteger$$$Pow$$62E082A2 as BigInteger$0024$0024$0024Pow$0024$002462E082A2, BigInteger$$$GreatestCommonDivisor$$56F059C0 as BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0, BigInteger$$$DivRem$$56F059C0 as BigInteger$0024$0024$0024DivRem$0024$002456F059C0, BigInteger$$$Parse$$Z721C83C5 as BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5, BigInteger$$$get_Zero as BigInteger$0024$0024$0024get_Zero, BigInteger } from \"./BigInt/z\";\nimport { fromInteger } from \"./Long.js\";\nimport { min, comparePrimitives, equals as equals$$1, structuralHash } from \"./Util.js\";\nimport { delay, unfold, rangeNumber } from \"./Seq.js\";\nimport { fold, head, skipWhile, find, ofSeq } from \"./List.js\";\nimport { List } from \"./Types.js\";\nimport { fill, reverse, ofList } from \"./Array.js\";\nexport function isBigInt(x) {\n  return x instanceof BigInteger;\n}\nexport function tryParse(str) {\n  try {\n    const res = BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(str);\n    return [true, res];\n  } catch (matchValue) {\n    return [false, BigInteger$0024$0024$0024get_Zero()];\n  }\n}\nexport function parse(arg00) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(arg00);\n}\nexport function divRem(arg00$$1, arg01) {\n  return BigInteger$0024$0024$0024DivRem$0024$002456F059C0(arg00$$1, arg01);\n}\nexport function greatestCommonDivisor(arg00$$2, arg01$$1) {\n  return BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0(arg00$$2, arg01$$1);\n}\nexport function pow(arg00$$3, arg01$$2) {\n  return BigInteger$0024$0024$0024Pow$0024$002462E082A2(arg00$$3, arg01$$2);\n}\nexport function abs(arg00$$4) {\n  return BigInteger$0024$0024$0024Abs$0024$0024Z665282C2(arg00$$4);\n}\nexport const zero = BigInteger$0024$0024$0024get_Zero();\nexport const one = BigInteger$0024$0024$0024get_One();\nexport const two = BigInteger$0024$0024$0024get_Two();\nexport function fromString(s) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(s);\n}\nexport function fromZero() {\n  return BigInteger$0024$0024$0024get_Zero();\n}\nexport function fromOne() {\n  return BigInteger$0024$0024$0024get_One();\n}\nexport function fromInt64(i) {\n  return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1(i);\n}\nexport function fromInt32(i$$1) {\n  var value;\n\n  if (i$$1 > 2147483647) {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1((value = i$$1, (fromInteger(value, false, 6))));\n  } else {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(i$$1);\n  }\n}\nexport function toSByte(x$$1) {\n  return BigInteger$0024$0024get_ToSByte(x$$1);\n}\nexport function toByte(x$$2) {\n  return BigInteger$0024$0024get_ToByte(x$$2);\n}\nexport function toInt16(x$$3) {\n  return BigInteger$0024$0024get_ToInt16(x$$3);\n}\nexport function toUInt16(x$$4) {\n  return BigInteger$0024$0024get_ToUInt16(x$$4);\n}\nexport function toInt32(x$$5) {\n  return BigInteger$0024$0024get_ToInt32(x$$5);\n}\nexport function toUInt32(x$$6) {\n  return BigInteger$0024$0024get_ToUInt32(x$$6);\n}\nexport function toInt64(x$$7) {\n  return BigInteger$0024$0024get_ToInt64(x$$7);\n}\nexport function toUInt64(x$$8) {\n  return BigInteger$0024$0024get_ToUInt64(x$$8);\n}\nexport function toSingle(x$$9) {\n  return BigInteger$0024$0024get_ToSingle(x$$9);\n}\nexport function toDouble(x$$10) {\n  return BigInteger$0024$0024get_ToDouble(x$$10);\n}\nexport function toDecimal(x$$11) {\n  return BigInteger$0024$0024get_ToDecimal(x$$11);\n}\nexport function sign(x$$12) {\n  return BigInteger$0024$0024get_Sign(x$$12);\n}\nexport function isZero(x$$13) {\n  return BigInteger$0024$0024get_IsZero(x$$13);\n}\nexport function isOne(x$$14) {\n  return BigInteger$0024$0024get_IsOne(x$$14);\n}\nexport function hash(x$$15) {\n  return structuralHash(x$$15);\n}\nexport function compare(x$$16, y) {\n  return x$$16.CompareTo(y);\n}\nexport function equals(x$$17, y$$1) {\n  return equals$$1(x$$17, y$$1);\n}\nexport function toString(x$$18) {\n  return String(x$$18);\n}\nexport const get_Zero = BigInteger$0024$0024$0024get_Zero();\nexport const get_One = BigInteger$0024$0024$0024get_One();\nexport function op_Addition(arg00$$5, arg01$$3) {\n  return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(arg00$$5, arg01$$3);\n}\nexport function op_Subtraction(arg00$$6, arg01$$4) {\n  return BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0(arg00$$6, arg01$$4);\n}\nexport function op_Multiply(arg00$$7, arg01$$5) {\n  return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(arg00$$7, arg01$$5);\n}\nexport function op_Division(arg00$$8, arg01$$6) {\n  return BigInteger$0024$0024$0024op_Division$0024$002456F059C0(arg00$$8, arg01$$6);\n}\nexport function op_Modulus(arg00$$9, arg01$$7) {\n  return BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0(arg00$$9, arg01$$7);\n}\nexport function op_UnaryNegation(arg00$$10) {\n  return BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2(arg00$$10);\n}\nexport function op_UnaryPlus(arg00$$11) {\n  return BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2(arg00$$11);\n}\nexport function op_RightShift(arg00$$12, arg01$$8) {\n  return BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(arg00$$12, arg01$$8);\n}\nexport function op_LeftShift(arg00$$13, arg01$$9) {\n  return BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(arg00$$13, arg01$$9);\n}\nexport function op_BitwiseAnd(arg00$$14, arg01$$10) {\n  return BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(arg00$$14, arg01$$10);\n}\nexport function op_BitwiseOr(arg00$$15, arg01$$11) {\n  return BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0(arg00$$15, arg01$$11);\n}\nexport function op_ExclusiveOr(arg00$$16, arg01$$12) {\n  return BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0(arg00$$16, arg01$$12);\n}\nexport function op_LessThan(arg00$$17, arg01$$13) {\n  return BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0(arg00$$17, arg01$$13);\n}\nexport function op_LessThanOrEqual(arg00$$18, arg01$$14) {\n  return BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0(arg00$$18, arg01$$14);\n}\nexport function op_GreaterThan(arg00$$19, arg01$$15) {\n  return BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0(arg00$$19, arg01$$15);\n}\nexport function op_GreaterThanOrEqual(arg00$$20, arg01$$16) {\n  return BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0(arg00$$20, arg01$$16);\n}\nexport function op_Equality(arg00$$21, arg01$$17) {\n  return BigInteger$0024$0024$0024op_Equality$0024$002456F059C0(arg00$$21, arg01$$17);\n}\nexport function op_Inequality(arg00$$22, arg01$$18) {\n  return BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0(arg00$$22, arg01$$18);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n  if (lowBitFound) {\n    return [(currByte ^ 255) & 255, true];\n  } else if (currByte === 0) {\n    return [0, false];\n  } else {\n    let firstBitIndex;\n    const list = ofSeq(rangeNumber(0, 1, 7));\n    firstBitIndex = find(function predicate(i$$2) {\n      return (currByte & 1 << i$$2) > 0;\n    }, list);\n    return [(currByte ^ 254 << firstBitIndex) & 255, true];\n  }\n}\n\nexport function toByteArray(value$$1) {\n  if (equals$$1(value$$1, zero)) {\n    return new Uint8Array([0]);\n  } else {\n    const isPositive = value$$1.CompareTo(zero) > 0;\n    const value$$2 = isPositive ? value$$1 : BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$1);\n    let mask32;\n    let i$$3;\n    i$$3 = fromInteger(4294967295, false, 6);\n    mask32 = fromInt64(i$$3);\n\n    const loop = function loop($accumBytes$$74, $consumeValue$$75, $lowBitFound$$1$$76) {\n      var value$$9, value$$10, value$$11;\n\n      loop: while (true) {\n        const accumBytes = $accumBytes$$74,\n              consumeValue = $consumeValue$$75,\n              lowBitFound$$1 = $lowBitFound$$1$$76;\n\n        if (consumeValue.CompareTo(zero) <= 0) {\n          let accumBytes$$1;\n\n          if (isPositive) {\n            accumBytes$$1 = skipWhile(function predicate$$1(b) {\n              return b === 0;\n            }, accumBytes);\n          } else {\n            accumBytes$$1 = skipWhile(function predicate$$2(b$$1) {\n              return b$$1 === 255;\n            }, accumBytes);\n          }\n\n          const isHighBitOne = (head(accumBytes$$1) & 128) !== 0;\n          const accumBytes$$2 = (isPositive ? isHighBitOne : false) ? new List(0, accumBytes$$1) : (!isPositive ? !isHighBitOne : false) ? new List(255, accumBytes$$1) : accumBytes$$1;\n          let array;\n          array = ofList(accumBytes$$2, Uint8Array);\n          return reverse(array, Uint8Array);\n        } else {\n          let currValue;\n          const x$$19 = BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(consumeValue, mask32);\n          currValue = toUInt32(x$$19);\n\n          if (isPositive) {\n            let b0;\n            b0 = currValue & 0xFF;\n            let b1;\n            const value$$5 = currValue >>> 8;\n            b1 = value$$5 & 0xFF;\n            let b2;\n            const value$$6 = currValue >>> 16;\n            b2 = value$$6 & 0xFF;\n            let b3;\n            const value$$7 = currValue >>> 24;\n            b3 = value$$7 & 0xFF;\n            $accumBytes$$74 = new List(b3, new List(b2, new List(b1, new List(b0, accumBytes))));\n            $consumeValue$$75 = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(consumeValue, 32);\n            $lowBitFound$$1$$76 = false;\n            continue loop;\n          } else {\n            const patternInput = flipTwosComplement((currValue & 0xFF), lowBitFound$$1);\n            const patternInput$$1 = flipTwosComplement((value$$9 = currValue >>> 8, (value$$9 & 0xFF)), patternInput[1]);\n            const patternInput$$2 = flipTwosComplement((value$$10 = currValue >>> 16, (value$$10 & 0xFF)), patternInput$$1[1]);\n            const patternInput$$3 = flipTwosComplement((value$$11 = currValue >>> 24, (value$$11 & 0xFF)), patternInput$$2[1]);\n            $accumBytes$$74 = new List(patternInput$$3[0], new List(patternInput$$2[0], new List(patternInput$$1[0], new List(patternInput[0], accumBytes))));\n            $consumeValue$$75 = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(consumeValue, 32);\n            $lowBitFound$$1$$76 = patternInput$$3[1];\n            continue loop;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop(new List(), value$$2, false);\n  }\n}\nexport function fromByteArray(bytes) {\n  if (bytes == null) {\n    throw new Error(\"bytes\");\n  } else {\n    void null;\n  }\n\n  if (bytes.length === 0) {\n    return zero;\n  } else {\n    const isPositive$$1 = (bytes[bytes.length - 1] & 128) === 0;\n    const buffer = fill(new Uint8Array(4), 0, 4, 0);\n\n    const loop$$1 = function loop$$1($accumUInt32$$80, $currIndex$$81, $bytesRemaining$$82, $lowBitFound$$6$$83) {\n      loop$$1: while (true) {\n        const accumUInt32 = $accumUInt32$$80,\n              currIndex = $currIndex$$81,\n              bytesRemaining = $bytesRemaining$$82,\n              lowBitFound$$6 = $lowBitFound$$6$$83;\n\n        if (bytesRemaining === 0) {\n          let value$$14;\n          value$$14 = fold(function folder(acc, value$$12) {\n            var i$$4;\n            return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(acc, 32), (i$$4 = (fromInteger(value$$12, false, 6)), (fromInt64(i$$4))));\n          }, zero, accumUInt32);\n\n          if (isPositive$$1) {\n            return value$$14;\n          } else {\n            return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$14);\n          }\n        } else {\n          const bytesToProcess = min(comparePrimitives, bytesRemaining, 4) | 0;\n\n          for (let i$$5 = 0; i$$5 <= bytesToProcess - 1; i$$5++) {\n            buffer[i$$5] = bytes[currIndex + i$$5];\n          }\n\n          if (isPositive$$1) {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n            const value$$15 = (((buffer[0] | buffer[1] << 8 >>> 0) >>> 0 | buffer[2] << 16 >>> 0) >>> 0 | buffer[3] << 24 >>> 0) >>> 0;\n            $accumUInt32$$80 = new List(value$$15, accumUInt32);\n            $currIndex$$81 = currIndex + bytesToProcess;\n            $bytesRemaining$$82 = bytesRemaining - bytesToProcess;\n            $lowBitFound$$6$$83 = false;\n            continue loop$$1;\n          } else {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n            const patternInput$$4 = flipTwosComplement(buffer[0], lowBitFound$$6);\n            const patternInput$$5 = flipTwosComplement(buffer[1], patternInput$$4[1]);\n            const patternInput$$6 = flipTwosComplement(buffer[2], patternInput$$5[1]);\n            const patternInput$$7 = flipTwosComplement(buffer[3], patternInput$$6[1]);\n            const value$$16 = (((patternInput$$4[0] | patternInput$$5[0] << 8 >>> 0) >>> 0 | patternInput$$6[0] << 16 >>> 0) >>> 0 | patternInput$$7[0] << 24 >>> 0) >>> 0;\n            $accumUInt32$$80 = new List(value$$16, accumUInt32);\n            $currIndex$$81 = currIndex + bytesToProcess;\n            $bytesRemaining$$82 = bytesRemaining - bytesToProcess;\n            $lowBitFound$$6$$83 = patternInput$$7[1];\n            continue loop$$1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop$$1(new List(), 0, bytes.length, false);\n  }\n}\nexport function makeRangeStepFunction(step, last) {\n  const stepComparedWithZero = step.CompareTo(zero) | 0;\n\n  if (stepComparedWithZero === 0) {\n    throw new Error(\"The step of a range cannot be zero\");\n  } else {\n    void null;\n  }\n\n  const stepGreaterThanZero = stepComparedWithZero > 0;\n  return function (x$$20) {\n    const comparedWithLast = x$$20.CompareTo(last) | 0;\n    return ((stepGreaterThanZero ? comparedWithLast <= 0 : false) ? true : !stepGreaterThanZero ? comparedWithLast >= 0 : false) ? [x$$20, BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(x$$20, step)] : undefined;\n  };\n}\nexport function range(first, step$$1, last$$1) {\n  const stepFn = makeRangeStepFunction(step$$1, last$$1);\n  return delay(function () {\n    return unfold(stepFn, first);\n  });\n}","namespace Fable.SimpleJson\r\n\r\nopen System\r\nopen FSharp.Reflection\r\nopen Fable.Core\r\nopen System.Reflection\r\nopen System.Collections.Generic\r\n\r\n[<AutoOpen>]\r\nmodule Converter =\r\n    let (|PrimitiveType|_|) (primType: Type) =\r\n        match primType.FullName with\r\n        | \"System.String\" -> Some TypeInfo.String\r\n        | \"System.Int16\" -> Some TypeInfo.Short\r\n        | \"System.Int32\" -> Some TypeInfo.Int32\r\n        | \"Microsoft.FSharp.Core.int64`1\"\r\n        | \"System.Int64\" -> Some TypeInfo.Long\r\n        | \"System.UInt16\" -> Some TypeInfo.UInt16\r\n        | \"System.UInt32\" -> Some TypeInfo.UInt32\r\n        | \"System.UInt64\" -> Some TypeInfo.UInt64\r\n        | \"System.DateTime\" -> Some TypeInfo.DateTime\r\n        | \"System.TimeSpan\" -> Some TypeInfo.TimeSpan\r\n        | \"System.DateTimeOffset\" -> Some TypeInfo.DateTimeOffset\r\n        | \"System.Boolean\" -> Some  TypeInfo.Bool\r\n        | \"System.Single\" -> Some TypeInfo.Float32\r\n        | \"System.Double\" -> Some TypeInfo.Float\r\n        | \"Microsoft.FSharp.Core.decimal`1\"\r\n        | \"System.Decimal\" -> Some TypeInfo.Decimal\r\n        | \"System.Numerics.BigInteger\" -> Some TypeInfo.BigInt\r\n        | \"Microsoft.FSharp.Core.Unit\" -> Some TypeInfo.Unit\r\n        | \"System.Guid\" -> Some TypeInfo.Guid\r\n        | \"System.Byte\" -> Some TypeInfo.Byte\r\n        | _ -> None\r\n\r\n    let (|RecordType|_|) (t: Type) =\r\n        if FSharpType.IsRecord t\r\n        then\r\n            FSharpType.GetRecordFields t\r\n            |> Array.map (fun prop -> prop.Name, prop.PropertyType)\r\n            |> Some\r\n        else None\r\n\r\n    let (|SetType|_|) (t: Type) =\r\n        if t.FullName.StartsWith \"Microsoft.FSharp.Collections.FSharpSet`1\"\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|UnionType|_|) (t: Type) =\r\n        if FSharpType.IsUnion t\r\n        then\r\n            FSharpType.GetUnionCases t\r\n            |> Array.map (fun info ->\r\n                let caseName = info.Name\r\n                let caseTypes = info.GetFields() |> Array.map (fun prop -> prop.PropertyType)\r\n                caseName, info, caseTypes)\r\n            |> Some\r\n        else None\r\n\r\n    let (|MapType|_|) (t: Type) =\r\n        if (t.FullName.StartsWith \"Microsoft.FSharp.Collections.FSharpMap`2\")\r\n        then\r\n            let genArgs = t.GetGenericArguments()\r\n            Some (genArgs.[0], genArgs.[1])\r\n        else None\r\n\r\n    let (|ListType|_|) (t: Type) =\r\n        if (t.FullName.StartsWith \"Microsoft.FSharp.Collections.FSharpList`1\")\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let rec flattenFuncTypes (typeDef: Type) =\r\n        [| if FSharpType.IsFunction typeDef\r\n           then let (domain, range) = FSharpType.GetFunctionElements typeDef\r\n                yield! flattenFuncTypes domain\r\n                yield! flattenFuncTypes range\r\n           else yield typeDef |]\r\n\r\n    let (|FuncType|_|) (t: Type) =\r\n        if FSharpType.IsFunction t\r\n        then flattenFuncTypes t |> Some\r\n        else None\r\n\r\n    let (|ArrayType|_|) (t:Type) =\r\n        if t.IsArray\r\n        then t.GetElementType() |> Some\r\n        else None\r\n\r\n    let (|OptionType|_|) (t:Type) =\r\n        if (t.FullName.StartsWith \"Microsoft.FSharp.Core.FSharpOption`1\")\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|TupleType|_|) (t: Type) =\r\n        if FSharpType.IsTuple t\r\n        then FSharpType.GetTupleElements(t) |> Some\r\n        else None\r\n\r\n    let (|SeqType|_|) (t: Type) =\r\n        if t.FullName.StartsWith \"System.Collections.Generic.IEnumerable`1\"\r\n        then  t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|DictionaryType|_|) (t: Type) =\r\n        if t.FullName.StartsWith \"System.Collections.Generic.Dictionary\"\r\n        then\r\n          let genArgs = t.GetGenericArguments()\r\n          Some (genArgs.[0], genArgs.[1])\r\n        else\r\n          None\r\n\r\n    let (|ResizeArrayType|_|) (t: Type) =\r\n        if t.FullName.StartsWith \"System.Collections.Generic.List\"\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|HashSetType|_|) (t: Type) =\r\n        if t.FullName.StartsWith \"System.Collections.Generic.HashSet\"\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|AsyncType|_|) (t:Type) =\r\n        if t.FullName.StartsWith \"Microsoft.FSharp.Control.FSharpAsync`1\"\r\n        then  t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|PromiseType|_|) (t:Type) =\r\n        if t.FullName.StartsWith \"Fable.Core.JS.Promise`1\"\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let private lazyToDelayed (l:Lazy<_>) = fun () -> l.Value\r\n\r\n    let (|EnumType|_|) (t: Type) =\r\n        if t.IsEnum\r\n        then Enum.GetUnderlyingType(t) |> Some\r\n        else None\r\n\r\n    let rec private _createTypeInfo (resolvedType: Type) : Fable.SimpleJson.TypeInfo =\r\n        match resolvedType with\r\n        | PrimitiveType typeInfo -> typeInfo\r\n        | FuncType (types) -> TypeInfo.Func <| lazyToDelayed (lazy (Array.map createTypeInfo types))\r\n        | RecordType fields ->\r\n            let l = lazy (\r\n                let fields =\r\n                    [| for (fieldName, fieldType) in fields ->\r\n                        { FieldName = fieldName;\r\n                          FieldType = createTypeInfo fieldType } |]\r\n                fields, resolvedType)\r\n            TypeInfo.Record (lazyToDelayed l)\r\n\r\n        | UnionType cases ->\r\n            let l = lazy (\r\n                [| for (caseName, caseInfo, caseTypes) in cases ->\r\n                    { CaseName = caseName;\r\n                      Info = caseInfo;\r\n                      CaseTypes = Array.map createTypeInfo caseTypes } |], resolvedType)\r\n            TypeInfo.Union (lazyToDelayed l)\r\n\r\n        | EnumType elemType -> TypeInfo.Enum (lazyToDelayed <| lazy (createTypeInfo elemType, resolvedType))\r\n        | ListType elemType -> TypeInfo.List (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | ResizeArrayType elemType -> TypeInfo.ResizeArray (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | HashSetType elemType -> TypeInfo.HashSet (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | ArrayType elemType -> TypeInfo.Array (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        // Checking for tuples has to happen after checking for arrays\r\n        | TupleType types -> TypeInfo.Tuple (lazyToDelayed <| lazy (Array.map createTypeInfo types))\r\n        | OptionType elemType -> TypeInfo.Option (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | SetType elemType -> TypeInfo.Set (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | MapType (keyType, valueType) -> TypeInfo.Map (lazyToDelayed <| lazy (createTypeInfo keyType, createTypeInfo valueType))\r\n        | DictionaryType (keyType, valueType) -> TypeInfo.Dictionary (lazyToDelayed <| lazy (createTypeInfo keyType, createTypeInfo valueType))\r\n        | SeqType elemType -> TypeInfo.Seq (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | AsyncType elemType -> TypeInfo.Async (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | PromiseType elemType -> TypeInfo.Promise (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | _ -> TypeInfo.Any (lazyToDelayed <| lazy (resolvedType))\r\n\r\n    and private typeInfoCache = Dictionary<Type,Fable.SimpleJson.TypeInfo>()\r\n\r\n    and createTypeInfo (resolvedType: Type) : Fable.SimpleJson.TypeInfo =\r\n        match typeInfoCache.TryGetValue resolvedType with\r\n        | true, ti -> ti\r\n        | false, _ ->\r\n            let ti = _createTypeInfo resolvedType\r\n            // see https://github.com/fable-compiler/Fable/issues/1871\r\n            // Type equality doesn't work for anonymous records - all anon records are considered equal.\r\n            // For anonymous records, the name is the empty string.\r\n            let notAnonymousRecord =\r\n                not (String.IsNullOrEmpty resolvedType.FullName)\r\n                && not (resolvedType.FullName.EndsWith(\"`1[]\"))\r\n                && not (resolvedType.FullName.EndsWith(\"`2[]\"))\r\n\r\n            if notAnonymousRecord then\r\n                typeInfoCache.[resolvedType] <- ti\r\n                ti\r\n            else\r\n                ti\r\n\r\n    type Fable.SimpleJson.TypeInfo with\r\n        static member inline createFrom<'t> () : Fable.SimpleJson.TypeInfo =\r\n            createTypeInfo typeof<'t>\r\n\r\n    /// returns whether a type is primitive\r\n    let isPrimitive = function\r\n        | Unit\r\n        | String\r\n        | UInt16\r\n        | UInt32\r\n        | UInt64\r\n        | Int32\r\n        | Bool\r\n        | Float32\r\n        | Float\r\n        | Decimal\r\n        | Short\r\n        | Long\r\n        | Byte\r\n        | DateTime\r\n        | DateTimeOffset\r\n        | BigInt\r\n        | Guid\r\n        | Option _ -> true\r\n        | otherwise -> false\r\n\r\n    /// returns whether the discrimiated union type is like a enum\r\n    let enumUnion = function\r\n        | TypeInfo.Union getCases ->\r\n            getCases()\r\n            |> fst\r\n            |> Array.forall (fun case -> Array.isEmpty case.CaseTypes)\r\n        | otherwise -> false\r\n","import { fromBits, getHighBits, getHighBitsUnsigned, getLowBits, getLowBitsUnsigned } from \"./Long\";\nconst littleEndian = true;\nexport function isLittleEndian() {\n    return littleEndian;\n}\nexport function getBytesBoolean(value) {\n    const bytes = new Uint8Array(1);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint8(0, value ? 1 : 0);\n    return bytes;\n}\nexport function getBytesChar(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value.charCodeAt(0), littleEndian);\n    return bytes;\n}\nexport function getBytesInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return bytes;\n}\nexport function getBytesUInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(littleEndian ? 0 : 4, getLowBitsUnsigned(value), littleEndian);\n    view.setUint32(littleEndian ? 4 : 0, getHighBitsUnsigned(value), littleEndian);\n    return bytes;\n}\nexport function getBytesSingle(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesDouble(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat64(0, value, littleEndian);\n    return bytes;\n}\nexport function int64BitsToDouble(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return view.getFloat64(0, littleEndian);\n}\nexport function doubleToInt64Bits(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setFloat64(0, value, littleEndian);\n    const lowBits = view.getInt32(littleEndian ? 0 : 4, littleEndian);\n    const highBits = view.getInt32(littleEndian ? 4 : 0, littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toBoolean(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint8(offset) === 1 ? true : false;\n}\nexport function toChar(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const code = view.getUint16(offset, littleEndian);\n    return String.fromCharCode(code);\n}\nexport function toInt16(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getInt16(offset, littleEndian);\n}\nexport function toInt32(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getInt32(offset, littleEndian);\n}\nexport function toInt64(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const lowBits = view.getInt32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getInt32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toUInt16(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint16(offset, littleEndian);\n}\nexport function toUInt32(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint32(offset, littleEndian);\n}\nexport function toUInt64(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const lowBits = view.getUint32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getUint32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, true);\n}\nexport function toSingle(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, littleEndian);\n}\nexport function toDouble(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, littleEndian);\n}\nexport function toString(bytes, offset, count) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    let buffer = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n    if (offset != null && count != null) {\n        buffer = buffer.subarray(offset, offset + count);\n    }\n    else if (offset != null) {\n        buffer = buffer.subarray(offset);\n    }\n    return Array.from(buffer).map((b) => (\"0\" + b.toString(16)).slice(-2)).join(\"-\");\n}\n//# sourceMappingURL=BitConverter.js.map","// tslint:disable: space-before-function-paren\nimport { combineHashCodes, compare, compareArrays, equalArrays, equals, identityHash, numberHash, structuralHash } from \"./Util\";\nfunction sameType(x, y) {\n    return y != null && Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\n// Taken from Babel helpers\nfunction inherits(subClass, superClass) {\n    // if (typeof superClass !== \"function\" && superClass !== null) {\n    //   throw new TypeError(\n    //     \"Super expression must either be null or a function, not \" +\n    //       typeof superClass\n    //   );\n    // }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        },\n    });\n    // if (superClass)\n    //   Object.setPrototypeOf\n    //     ? Object.setPrototypeOf(subClass, superClass)\n    //     : (subClass.__proto__ = superClass);\n}\nexport function declare(cons, superClass) {\n    inherits(cons, superClass || SystemObject);\n    return cons;\n}\nexport class SystemObject {\n    toString() {\n        return \"{\" + Object.entries(this).map(([k, v]) => k + \" = \" + String(v)).join(\";\\n \") + \"}\";\n    }\n    GetHashCode() {\n        return identityHash(this);\n    }\n    Equals(other) {\n        return this === other;\n    }\n}\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport class List {\n    constructor(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    toString() {\n        return \"[\" + Array.from(this).join(\"; \") + \"]\";\n    }\n    toJSON() {\n        return Array.from(this);\n    }\n    [Symbol.iterator]() {\n        let cur = this;\n        return {\n            next: () => {\n                const value = cur === null || cur === void 0 ? void 0 : cur.head;\n                const done = (cur === null || cur === void 0 ? void 0 : cur.tail) == null;\n                cur = cur === null || cur === void 0 ? void 0 : cur.tail;\n                return { done, value };\n            },\n        };\n    }\n    GetHashCode() {\n        const hashes = Array.from(this).map(structuralHash);\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        return compareList(this, other) === 0;\n    }\n    CompareTo(other) {\n        return compareList(this, other);\n    }\n}\nexport class Union extends SystemObject {\n    constructor(tag, name, ...fields) {\n        super();\n        this.tag = tag | 0;\n        this.name = name;\n        this.fields = fields;\n    }\n    toString() {\n        const len = this.fields.length;\n        if (len === 0) {\n            return this.name;\n        }\n        else if (len === 1) {\n            return this.name + \" \" + String(this.fields[0]);\n        }\n        else {\n            return this.name + \" (\" + this.fields.map((x) => String(x)).join(\",\") + \")\";\n        }\n    }\n    toJSON() {\n        return this.fields.length === 0\n            ? this.name\n            : [this.name].concat(this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        return this === other\n            || (sameType(this, other)\n                && this.tag === other.tag\n                && equalArrays(this.fields, other.fields));\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameType(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJson(record, getFieldNames) {\n    const o = {};\n    const keys = getFieldNames == null ? Object.keys(record) : getFieldNames(record);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = record[keys[i]];\n    }\n    return o;\n}\nfunction recordEquals(self, other, getFieldNames) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameType(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompare(self, other, getFieldNames) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameType(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record extends SystemObject {\n    toString() {\n        return \"{\" + Object.entries(this).map(([k, v]) => k + \" = \" + String(v)).join(\";\\n \") + \"}\";\n    }\n    toJSON() {\n        return recordToJson(this);\n    }\n    GetHashCode() {\n        const hashes = Object.values(this).map((v) => structuralHash(v));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        return recordEquals(this, other);\n    }\n    CompareTo(other) {\n        return recordCompare(this, other);\n    }\n}\nexport function anonRecord(o) {\n    return Object.assign(Object.create(Record.prototype), o);\n}\nexport class FSharpRef extends Record {\n    constructor(contents) {\n        super();\n        this.contents = contents;\n    }\n}\nexport const Exception = declare(function Exception(message) {\n    this.stack = Error().stack;\n    this.message = message;\n}, SystemObject);\nexport function isException(x) {\n    return x instanceof Error || x instanceof Exception;\n}\nfunction getFSharpExceptionFieldNames(self) {\n    return Object.keys(self).filter((k) => k !== \"message\" && k !== \"stack\");\n}\nexport class FSharpException extends Exception {\n    toString() {\n        var _a;\n        // const fieldNames = getFSharpExceptionFieldNames(this);\n        const fields = Object.entries(this).filter(([k, _]) => k !== \"message\" && k !== \"stack\");\n        const len = fields.length;\n        if (len === 0) {\n            return (_a = this.message) !== null && _a !== void 0 ? _a : \"\";\n        }\n        else if (len === 1) {\n            return this.message + \" \" + String(fields[1]);\n        }\n        else {\n            return this.message + \" (\" + fields.map(([_, v]) => String(v)).join(\",\") + \")\";\n        }\n    }\n    toJSON() {\n        return recordToJson(this, getFSharpExceptionFieldNames);\n    }\n    GetHashCode() {\n        const fields = Object.entries(this).filter(([k, _]) => k !== \"message\" && k !== \"stack\");\n        const hashes = fields.map(([_, v]) => structuralHash(v));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        return recordEquals(this, other, getFSharpExceptionFieldNames);\n    }\n    CompareTo(other) {\n        return recordCompare(this, other, getFSharpExceptionFieldNames);\n    }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport const Attribute = declare(function Attribute() { return; }, SystemObject);\n//# sourceMappingURL=Types.js.map","\"use strict\";\r\n\r\nexport function Parsimmon(action) {\r\n  if (!(this instanceof Parsimmon)) {\r\n    return new Parsimmon(action);\r\n  }\r\n  this._ = action;\r\n}\r\n\r\nvar _ = Parsimmon.prototype;\r\n\r\nexport function times(n, f) {\r\n  var i = 0;\r\n  for (i; i < n; i++) {\r\n    f(i);\r\n  }\r\n}\r\n\r\nexport function forEach(f, arr) {\r\n  times(arr.length, function(i) {\r\n    f(arr[i], i, arr);\r\n  });\r\n}\r\n\r\nexport function reduce(f, seed, arr) {\r\n  forEach(function(elem, i, arr) {\r\n    seed = f(seed, elem, i, arr);\r\n  }, arr);\r\n  return seed;\r\n}\r\n\r\nexport function map(f, arr) {\r\n  return reduce(\r\n    function(acc, elem, i, a) {\r\n      return acc.concat([f(elem, i, a)]);\r\n    },\r\n    [],\r\n    arr\r\n  );\r\n}\r\n\r\nexport function lshiftBuffer(input) {\r\n  var asTwoBytes = reduce(\r\n    function(a, v, i, b) {\r\n      return a.concat(\r\n        i === b.length - 1\r\n          ? Buffer.from([v, 0]).readUInt16BE(0)\r\n          : b.readUInt16BE(i)\r\n      );\r\n    },\r\n    [],\r\n    input\r\n  );\r\n  return Buffer.from(\r\n    map(function(x) {\r\n      return ((x << 1) & 0xffff) >> 8;\r\n    }, asTwoBytes)\r\n  );\r\n}\r\n\r\nfunction consumeBitsFromBuffer(n, input) {\r\n  var state = { v: 0, buf: input };\r\n  times(n, function() {\r\n    state = {\r\n      v: (state.v << 1) | bitPeekBuffer(state.buf),\r\n      buf: lshiftBuffer(state.buf)\r\n    };\r\n  });\r\n  return state;\r\n}\r\n\r\nfunction bitPeekBuffer(input) {\r\n  return input[0] >> 7;\r\n}\r\n\r\nexport function sum(numArr) {\r\n  return reduce(\r\n    function(x, y) {\r\n      return x + y;\r\n    },\r\n    0,\r\n    numArr\r\n  );\r\n}\r\n\r\nexport function find(pred, arr) {\r\n  return reduce(\r\n    function(found, elem) {\r\n      return found || (pred(elem) ? elem : found);\r\n    },\r\n    null,\r\n    arr\r\n  );\r\n}\r\n\r\nfunction bufferExists() {\r\n  return typeof Buffer !== \"undefined\";\r\n}\r\n\r\nfunction ensureBuffer() {\r\n  if (!bufferExists()) {\r\n    throw new Error(\r\n      \"Buffer global does not exist; please consider using https://github.com/feross/buffer if you are running Parsimmon in a browser.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction bitSeq(alignments) {\r\n  ensureBuffer();\r\n  var totalBits = sum(alignments);\r\n  if (totalBits % 8 !== 0) {\r\n    throw new Error(\r\n      \"The bits [\" +\r\n        alignments.join(\", \") +\r\n        \"] add up to \" +\r\n        totalBits +\r\n        \" which is not an even number of bytes; the total should be divisible by 8\"\r\n    );\r\n  }\r\n  var bytes = totalBits / 8;\r\n\r\n  var tooBigRange = find(function(x) {\r\n    return x > 48;\r\n  }, alignments);\r\n  if (tooBigRange) {\r\n    throw new Error(\r\n      tooBigRange + \" bit range requested exceeds 48 bit (6 byte) Number max.\"\r\n    );\r\n  }\r\n\r\n  return new Parsimmon(function(input, i) {\r\n    var newPos = bytes + i;\r\n    if (newPos > input.length) {\r\n      return makeFailure(i, bytes.toString() + \" bytes\");\r\n    }\r\n    return makeSuccess(\r\n      newPos,\r\n      reduce(\r\n        function(acc, bits) {\r\n          var state = consumeBitsFromBuffer(bits, acc.buf);\r\n          return {\r\n            coll: acc.coll.concat(state.v),\r\n            buf: state.buf\r\n          };\r\n        },\r\n        { coll: [], buf: input.slice(i, newPos) },\r\n        alignments\r\n      ).coll\r\n    );\r\n  });\r\n}\r\n\r\nfunction bitSeqObj(namedAlignments) {\r\n  ensureBuffer();\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var fullAlignments = map(function(item) {\r\n    if (isArray(item)) {\r\n      var pair = item;\r\n      if (pair.length !== 2) {\r\n        throw new Error(\r\n          \"[\" +\r\n            pair.join(\", \") +\r\n            \"] should be length 2, got length \" +\r\n            pair.length\r\n        );\r\n      }\r\n      assertString(pair[0]);\r\n      assertNumber(pair[1]);\r\n      if (Object.prototype.hasOwnProperty.call(seenKeys, pair[0])) {\r\n        throw new Error(\"duplicate key in bitSeqObj: \" + pair[0]);\r\n      }\r\n      seenKeys[pair[0]] = true;\r\n      totalKeys++;\r\n      return pair;\r\n    } else {\r\n      assertNumber(item);\r\n      return [null, item];\r\n    }\r\n  }, namedAlignments);\r\n  if (totalKeys < 1) {\r\n    throw new Error(\r\n      \"bitSeqObj expects at least one named pair, got [\" +\r\n        namedAlignments.join(\", \") +\r\n        \"]\"\r\n    );\r\n  }\r\n  var namesOnly = map(function(pair) {\r\n    return pair[0];\r\n  }, fullAlignments);\r\n  var alignmentsOnly = map(function(pair) {\r\n    return pair[1];\r\n  }, fullAlignments);\r\n\r\n  return bitSeq(alignmentsOnly).map(function(parsed) {\r\n    var namedParsed = map(function(name, i) {\r\n      return [name, parsed[i]];\r\n    }, namesOnly);\r\n\r\n    return reduce(\r\n      function(obj, kv) {\r\n        if (kv[0] !== null) {\r\n          obj[kv[0]] = kv[1];\r\n        }\r\n        return obj;\r\n      },\r\n      {},\r\n      namedParsed\r\n    );\r\n  });\r\n}\r\n\r\nfunction parseBufferFor(other, length) {\r\n  ensureBuffer();\r\n  return new Parsimmon(function(input, i) {\r\n    if (i + length > input.length) {\r\n      return makeFailure(i, length + \" bytes for \" + other);\r\n    }\r\n    return makeSuccess(i + length, input.slice(i, i + length));\r\n  });\r\n}\r\n\r\nfunction parseBuffer(length) {\r\n  return parseBufferFor(\"buffer\", length).map(function(unsafe) {\r\n    return Buffer.from(unsafe);\r\n  });\r\n}\r\n\r\nfunction encodedString(encoding, length) {\r\n  return parseBufferFor(\"string\", length).map(function(buff) {\r\n    return buff.toString(encoding);\r\n  });\r\n}\r\n\r\nfunction isInteger(value) {\r\n  return typeof value === \"number\" && Math.floor(value) === value;\r\n}\r\n\r\nfunction assertValidIntegerByteLengthFor(who, length) {\r\n  if (!isInteger(length) || length < 0 || length > 6) {\r\n    throw new Error(who + \" requires integer length in range [0, 6].\");\r\n  }\r\n}\r\n\r\nfunction uintBE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintBE\", length);\r\n  return parseBufferFor(\"uintBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction uintLE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintLE\", length);\r\n  return parseBufferFor(\"uintLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction intBE(length) {\r\n  assertValidIntegerByteLengthFor(\"intBE\", length);\r\n  return parseBufferFor(\"intBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction intLE(length) {\r\n  assertValidIntegerByteLengthFor(\"intLE\", length);\r\n  return parseBufferFor(\"intLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction floatBE() {\r\n  return parseBufferFor(\"floatBE\", 4).map(function(buff) {\r\n    return buff.readFloatBE(0);\r\n  });\r\n}\r\n\r\nfunction floatLE() {\r\n  return parseBufferFor(\"floatLE\", 4).map(function(buff) {\r\n    return buff.readFloatLE(0);\r\n  });\r\n}\r\n\r\nfunction doubleBE() {\r\n  return parseBufferFor(\"doubleBE\", 8).map(function(buff) {\r\n    return buff.readDoubleBE(0);\r\n  });\r\n}\r\n\r\nfunction doubleLE() {\r\n  return parseBufferFor(\"doubleLE\", 8).map(function(buff) {\r\n    return buff.readDoubleLE(0);\r\n  });\r\n}\r\n\r\nfunction toArray(arrLike) {\r\n  return Array.prototype.slice.call(arrLike);\r\n}\r\n// -*- Helpers -*-\r\n\r\nfunction isParser(obj) {\r\n  return obj instanceof Parsimmon;\r\n}\r\n\r\nfunction isArray(x) {\r\n  return {}.toString.call(x) === \"[object Array]\";\r\n}\r\n\r\nfunction isBuffer(x) {\r\n  /* global Buffer */\r\n  return bufferExists() && Buffer.isBuffer(x);\r\n}\r\n\r\nexport function makeSuccess(index, value) {\r\n  return {\r\n    status: true,\r\n    index: index,\r\n    value: value,\r\n    furthest: -1,\r\n    expected: []\r\n  };\r\n}\r\n\r\nexport function makeFailure(index, expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  return {\r\n    status: false,\r\n    index: -1,\r\n    value: null,\r\n    furthest: index,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction mergeReplies(result, last) {\r\n  if (!last) {\r\n    return result;\r\n  }\r\n  if (result.furthest > last.furthest) {\r\n    return result;\r\n  }\r\n  var expected =\r\n    result.furthest === last.furthest\r\n      ? union(result.expected, last.expected)\r\n      : last.expected;\r\n  return {\r\n    status: result.status,\r\n    index: result.index,\r\n    value: result.value,\r\n    furthest: last.furthest,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction makeLineColumnIndex(input, i) {\r\n  if (isBuffer(input)) {\r\n    return {\r\n      offset: i,\r\n      line: -1,\r\n      column: -1\r\n    };\r\n  }\r\n  var lines = input.slice(0, i).split(\"\\n\");\r\n  // Note that unlike the character offset, the line and column offsets are\r\n  // 1-based.\r\n  var lineWeAreUpTo = lines.length;\r\n  var columnWeAreUpTo = lines[lines.length - 1].length + 1;\r\n  return {\r\n    offset: i,\r\n    line: lineWeAreUpTo,\r\n    column: columnWeAreUpTo\r\n  };\r\n}\r\n\r\n// Returns the sorted set union of two arrays of strings\r\nfunction union(xs, ys) {\r\n  var obj = {};\r\n  for (var i = 0; i < xs.length; i++) {\r\n    obj[xs[i]] = true;\r\n  }\r\n  for (var j = 0; j < ys.length; j++) {\r\n    obj[ys[j]] = true;\r\n  }\r\n  var keys = [];\r\n  for (var k in obj) {\r\n    if ({}.hasOwnProperty.call(obj, k)) {\r\n      keys.push(k);\r\n    }\r\n  }\r\n  keys.sort();\r\n  return keys;\r\n}\r\n\r\nfunction assertParser(p) {\r\n  if (!isParser(p)) {\r\n    throw new Error(\"not a parser: \" + p);\r\n  }\r\n}\r\n\r\nfunction get(input, i) {\r\n  if (typeof input === \"string\") {\r\n    return input.charAt(i);\r\n  }\r\n  return input[i];\r\n}\r\n\r\n// TODO[ES5]: Switch to Array.isArray eventually.\r\nfunction assertArray(x) {\r\n  if (!isArray(x)) {\r\n    throw new Error(\"not an array: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertNumber(x) {\r\n  if (typeof x !== \"number\") {\r\n    throw new Error(\"not a number: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertRegexp(x) {\r\n  if (!(x instanceof RegExp)) {\r\n    throw new Error(\"not a regexp: \" + x);\r\n  }\r\n  var f = flags(x);\r\n  for (var i = 0; i < f.length; i++) {\r\n    var c = f.charAt(i);\r\n    // Only allow regexp flags [imu] for now, since [g] and [y] specifically\r\n    // mess up Parsimmon. If more non-stateful regexp flags are added in the\r\n    // future, this will need to be revisited.\r\n    if (c !== \"i\" && c !== \"m\" && c !== \"u\") {\r\n      throw new Error('unsupported regexp flag \"' + c + '\": ' + x);\r\n    }\r\n  }\r\n}\r\n\r\nfunction assertFunction(x) {\r\n  if (typeof x !== \"function\") {\r\n    throw new Error(\"not a function: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertString(x) {\r\n  if (typeof x !== \"string\") {\r\n    throw new Error(\"not a string: \" + x);\r\n  }\r\n}\r\n\r\n// -*- Error Formatting -*-\r\n\r\nvar linesBeforeStringError = 2;\r\nvar linesAfterStringError = 3;\r\nvar bytesPerLine = 8;\r\nvar bytesBefore = bytesPerLine * 5;\r\nvar bytesAfter = bytesPerLine * 4;\r\nvar defaultLinePrefix = \"  \";\r\n\r\nexport function repeat(string, amount) {\r\n  return new Array(amount + 1).join(string);\r\n}\r\n\r\nexport function formatExpected(expected) {\r\n  if (expected.length === 1) {\r\n    return \"Expected:\\n\\n\" + expected[0];\r\n  }\r\n  return \"Expected one of the following: \\n\\n\" + expected.join(\", \");\r\n}\r\n\r\nexport function leftPad(str, pad, char) {\r\n  var add = pad - str.length;\r\n  if (add <= 0) {\r\n    return str;\r\n  }\r\n  return repeat(char, add) + str;\r\n}\r\n\r\nfunction toChunks(arr, chunkSize) {\r\n  var length = arr.length;\r\n  var chunks = [];\r\n  var chunkIndex = 0;\r\n\r\n  if (length <= chunkSize) {\r\n    return [arr.slice()];\r\n  }\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    if (!chunks[chunkIndex]) {\r\n      chunks.push([]);\r\n    }\r\n\r\n    chunks[chunkIndex].push(arr[i]);\r\n\r\n    if ((i + 1) % chunkSize === 0) {\r\n      chunkIndex++;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\n// Get a range of indexes including `i`-th element and `before` and `after` amount of elements from `arr`.\r\nexport function rangeFromIndexAndOffsets(i, before, after, length) {\r\n  return {\r\n    // Guard against the negative upper bound for lines included in the output.\r\n    from: i - before > 0 ? i - before : 0,\r\n    to: i + after > length ? length : i + after\r\n  };\r\n}\r\n\r\nexport function byteRangeToRange(byteRange) {\r\n  // Exception for inputs smaller than `bytesPerLine`\r\n  if (byteRange.from === 0 && byteRange.to === 1) {\r\n    return {\r\n      from: byteRange.from,\r\n      to: byteRange.to\r\n    };\r\n  }\r\n\r\n  return {\r\n    from: byteRange.from / bytesPerLine,\r\n    // Round `to`, so we don't get float if the amount of bytes is not divisible by `bytesPerLine`\r\n    to: Math.floor(byteRange.to / bytesPerLine)\r\n  };\r\n}\r\n\r\nexport function formatGot(input, error) {\r\n  var index = error.index;\r\n  var i = index.offset;\r\n\r\n  var verticalMarkerLength = 1;\r\n  var column;\r\n  var lineWithErrorIndex;\r\n  var lines;\r\n  var lineRange;\r\n  var lastLineNumberLabelLength;\r\n\r\n  if (i === input.length) {\r\n    return \"Got the end of the input\";\r\n  }\r\n\r\n  if (isBuffer(input)) {\r\n    var byteLineWithErrorIndex = i - (i % bytesPerLine);\r\n    var columnByteIndex = i - byteLineWithErrorIndex;\r\n    var byteRange = rangeFromIndexAndOffsets(\r\n      byteLineWithErrorIndex,\r\n      bytesBefore,\r\n      bytesAfter + bytesPerLine,\r\n      input.length\r\n    );\r\n    var bytes = input.slice(byteRange.from, byteRange.to);\r\n    var bytesInChunks = toChunks(bytes.toJSON().data, bytesPerLine);\r\n\r\n    var byteLines = map(function(byteRow) {\r\n      return map(function(byteValue) {\r\n        // Prefix byte values with a `0` if they are shorter than 2 characters.\r\n        return leftPad(byteValue.toString(16), 2, \"0\");\r\n      }, byteRow);\r\n    }, bytesInChunks);\r\n\r\n    lineRange = byteRangeToRange(byteRange);\r\n    lineWithErrorIndex = byteLineWithErrorIndex / bytesPerLine;\r\n    column = columnByteIndex * 3;\r\n\r\n    // Account for an extra space.\r\n    if (columnByteIndex >= 4) {\r\n      column += 1;\r\n    }\r\n\r\n    verticalMarkerLength = 2;\r\n    lines = map(function(byteLine) {\r\n      return byteLine.length <= 4\r\n        ? byteLine.join(\" \")\r\n        : byteLine.slice(0, 4).join(\" \") + \"  \" + byteLine.slice(4).join(\" \");\r\n    }, byteLines);\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  } else {\r\n    var inputLines = input.split(/\\r\\n|[\\n\\r\\u2028\\u2029]/);\r\n    column = index.column - 1;\r\n    lineWithErrorIndex = index.line - 1;\r\n    lineRange = rangeFromIndexAndOffsets(\r\n      lineWithErrorIndex,\r\n      linesBeforeStringError,\r\n      linesAfterStringError,\r\n      inputLines.length\r\n    );\r\n\r\n    lines = inputLines.slice(lineRange.from, lineRange.to);\r\n    lastLineNumberLabelLength = lineRange.to.toString().length;\r\n  }\r\n\r\n  var lineWithErrorCurrentIndex = lineWithErrorIndex - lineRange.from;\r\n\r\n  if (isBuffer(input)) {\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  }\r\n\r\n  var linesWithLineNumbers = reduce(\r\n    function(acc, lineSource, index) {\r\n      var isLineWithError = index === lineWithErrorCurrentIndex;\r\n      var prefix = isLineWithError ? \"> \" : defaultLinePrefix;\r\n      var lineNumberLabel;\r\n\r\n      if (isBuffer(input)) {\r\n        lineNumberLabel = leftPad(\r\n          ((lineRange.from + index) * 8).toString(16),\r\n          lastLineNumberLabelLength,\r\n          \"0\"\r\n        );\r\n      } else {\r\n        lineNumberLabel = leftPad(\r\n          (lineRange.from + index + 1).toString(),\r\n          lastLineNumberLabelLength,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      return [].concat(\r\n        acc,\r\n        [prefix + lineNumberLabel + \" | \" + lineSource],\r\n        isLineWithError\r\n          ? [\r\n              defaultLinePrefix +\r\n                repeat(\" \", lastLineNumberLabelLength) +\r\n                \" | \" +\r\n                leftPad(\"\", column, \" \") +\r\n                repeat(\"^\", verticalMarkerLength)\r\n            ]\r\n          : []\r\n      );\r\n    },\r\n    [],\r\n    lines\r\n  );\r\n\r\n  return linesWithLineNumbers.join(\"\\n\");\r\n}\r\n\r\nexport function formatError(input, error) {\r\n  return [\r\n    \"\\n\",\r\n    \"-- PARSING FAILED \" + repeat(\"-\", 50),\r\n    \"\\n\\n\",\r\n    formatGot(input, error),\r\n    \"\\n\\n\",\r\n    formatExpected(error.expected),\r\n    \"\\n\"\r\n  ].join(\"\");\r\n}\r\n\r\nexport function flags(re) {\r\n  var s = \"\" + re;\r\n  return s.slice(s.lastIndexOf(\"/\") + 1);\r\n}\r\n\r\nexport function anchoredRegexp(re) {\r\n  return RegExp(\"^(?:\" + re.source + \")\", flags(re));\r\n}\r\n\r\n// -*- Combinators -*-\r\n\r\nexport function seq() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = new Array(numParsers);\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      accum[j] = result.value;\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqObj() {\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var parsers = toArray(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    var p = parsers[j];\r\n    if (isParser(p)) {\r\n      continue;\r\n    }\r\n    if (isArray(p)) {\r\n      var isWellFormed =\r\n        p.length === 2 && typeof p[0] === \"string\" && isParser(p[1]);\r\n      if (isWellFormed) {\r\n        var key = p[0];\r\n        if (Object.prototype.hasOwnProperty.call(seenKeys, key)) {\r\n          throw new Error(\"seqObj: duplicate key \" + key);\r\n        }\r\n        seenKeys[key] = true;\r\n        totalKeys++;\r\n        continue;\r\n      }\r\n    }\r\n    throw new Error(\r\n      \"seqObj arguments must be parsers or [string, parser] array pairs.\"\r\n    );\r\n  }\r\n  if (totalKeys === 0) {\r\n    throw new Error(\"seqObj expects at least one named parser, found zero\");\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = {};\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      var name;\r\n      var parser;\r\n      if (isArray(parsers[j])) {\r\n        name = parsers[j][0];\r\n        parser = parsers[j][1];\r\n      } else {\r\n        name = null;\r\n        parser = parsers[j];\r\n      }\r\n      result = mergeReplies(parser._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      if (name) {\r\n        accum[name] = result.value;\r\n      }\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqMap() {\r\n  var args = [].slice.call(arguments);\r\n  if (args.length === 0) {\r\n    throw new Error(\"seqMap needs at least one argument\");\r\n  }\r\n  var mapper = args.pop();\r\n  assertFunction(mapper);\r\n  return seq.apply(null, args).map(function(results) {\r\n    return mapper.apply(null, results);\r\n  });\r\n}\r\n\r\n// TODO[ES5]: Revisit this with Object.keys and .bind.\r\nexport function createLanguage(parsers) {\r\n  var language = {};\r\n  for (var key in parsers) {\r\n    if ({}.hasOwnProperty.call(parsers, key)) {\r\n      (function(key) {\r\n        var func = function() {\r\n          return parsers[key](language);\r\n        };\r\n        language[key] = lazy(func);\r\n      })(key);\r\n    }\r\n  }\r\n  return language;\r\n}\r\n\r\nexport function alt() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  if (numParsers === 0) {\r\n    return fail(\"zero alternates\");\r\n  }\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    for (var j = 0; j < parsers.length; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (result.status) {\r\n        return result;\r\n      }\r\n    }\r\n    return result;\r\n  });\r\n}\r\n\r\nexport function sepBy(parser, separator) {\r\n  // Argument asserted by sepBy1\r\n  return sepBy1(parser, separator).or(succeed([]));\r\n}\r\n\r\nexport function sepBy1(parser, separator) {\r\n  assertParser(parser);\r\n  assertParser(separator);\r\n  var pairs = separator.then(parser).many();\r\n  return seqMap(parser, pairs, function(r, rs) {\r\n    return [r].concat(rs);\r\n  });\r\n}\r\n\r\n// -*- Core Parsing Methods -*-\r\n\r\n_.parse = function(input) {\r\n  if (typeof input !== \"string\" && !isBuffer(input)) {\r\n    throw new Error(\r\n      \".parse must be called with a string or Buffer as its argument\"\r\n    );\r\n  }\r\n  var result = this.skip(eof)._(input, 0);\r\n  if (result.status) {\r\n    return {\r\n      status: true,\r\n      value: result.value\r\n    };\r\n  }\r\n  return {\r\n    status: false,\r\n    index: makeLineColumnIndex(input, result.furthest),\r\n    expected: result.expected\r\n  };\r\n};\r\n\r\n// -*- Other Methods -*-\r\n\r\n_.tryParse = function(str) {\r\n  var result = this.parse(str);\r\n  if (result.status) {\r\n    return result.value;\r\n  } else {\r\n    var msg = formatError(str, result);\r\n    var err = new Error(msg);\r\n    err.type = \"ParsimmonError\";\r\n    err.result = result;\r\n    throw err;\r\n  }\r\n};\r\n\r\n_.or = function(alternative) {\r\n  return alt(this, alternative);\r\n};\r\n\r\n_.trim = function(parser) {\r\n  return this.wrap(parser, parser);\r\n};\r\n\r\n_.wrap = function(leftParser, rightParser) {\r\n  return seqMap(leftParser, this, rightParser, function(left, middle) {\r\n    return middle;\r\n  });\r\n};\r\n\r\n_.thru = function(wrapper) {\r\n  return wrapper(this);\r\n};\r\n\r\n_.then = function(next) {\r\n  assertParser(next);\r\n  return seq(this, next).map(function(results) {\r\n    return results[1];\r\n  });\r\n};\r\n\r\n_.many = function() {\r\n  var self = this;\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n\r\n    for (;;) {\r\n      result = mergeReplies(self._(input, i), result);\r\n      if (result.status) {\r\n        if (i === result.index) {\r\n          throw new Error(\r\n            \"infinite loop detected in .many() parser --- calling .many() on \" +\r\n              \"a parser which can accept zero characters is usually the cause\"\r\n          );\r\n        }\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return mergeReplies(makeSuccess(i, accum), result);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n_.tieWith = function(separator) {\r\n  assertString(separator);\r\n  return this.map(function(args) {\r\n    assertArray(args);\r\n    if (args.length) {\r\n      assertString(args[0]);\r\n      var s = args[0];\r\n      for (var i = 1; i < args.length; i++) {\r\n        assertString(args[i]);\r\n        s += separator + args[i];\r\n      }\r\n      return s;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  });\r\n};\r\n\r\n_.tie = function() {\r\n  return this.tieWith(\"\");\r\n};\r\n\r\n_.times = function(min, max) {\r\n  var self = this;\r\n  if (arguments.length < 2) {\r\n    max = min;\r\n  }\r\n  assertNumber(min);\r\n  assertNumber(max);\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n    var prevResult = undefined;\r\n    for (var times = 0; times < min; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return prevResult;\r\n      }\r\n    }\r\n    for (; times < max; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), prevResult);\r\n  });\r\n};\r\n\r\n_.result = function(res) {\r\n  return this.map(function() {\r\n    return res;\r\n  });\r\n};\r\n\r\n_.atMost = function(n) {\r\n  return this.times(0, n);\r\n};\r\n\r\n_.atLeast = function(n) {\r\n  return seqMap(this.times(n), this.many(), function(init, rest) {\r\n    return init.concat(rest);\r\n  });\r\n};\r\n\r\n_.map = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\r\n  });\r\n};\r\n\r\n_.contramap = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self.parse(fn(input.slice(i)));\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return makeSuccess(i + input.length, result.value);\r\n  });\r\n};\r\n\r\n_.promap = function(f, g) {\r\n  assertFunction(f);\r\n  assertFunction(g);\r\n  return this.contramap(f).map(g);\r\n};\r\n\r\n_.skip = function(next) {\r\n  return seq(this, next).map(function(results) {\r\n    return results[0];\r\n  });\r\n};\r\n\r\n_.mark = function() {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      start: start,\r\n      value: value,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.node = function(name) {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      name: name,\r\n      value: value,\r\n      start: start,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.sepBy = function(separator) {\r\n  return sepBy(this, separator);\r\n};\r\n\r\n_.sepBy1 = function(separator) {\r\n  return sepBy1(this, separator);\r\n};\r\n\r\n_.lookahead = function(x) {\r\n  return this.skip(lookahead(x));\r\n};\r\n\r\n_.notFollowedBy = function(x) {\r\n  return this.skip(notFollowedBy(x));\r\n};\r\n\r\n_.desc = function(expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var reply = self._(input, i);\r\n    if (!reply.status) {\r\n      reply.expected = expected;\r\n    }\r\n    return reply;\r\n  });\r\n};\r\n\r\n_.fallback = function(result) {\r\n  return this.or(succeed(result));\r\n};\r\n\r\n_.ap = function(other) {\r\n  return seqMap(other, this, function(f, x) {\r\n    return f(x);\r\n  });\r\n};\r\n\r\n_.chain = function(f) {\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    var nextParser = f(result.value);\r\n    return mergeReplies(nextParser._(input, result.index), result);\r\n  });\r\n};\r\n\r\n// -*- Constructors -*-\r\n\r\nexport function string(str) {\r\n  assertString(str);\r\n  var expected = \"'\" + str + \"'\";\r\n  return Parsimmon(function(input, i) {\r\n    var j = i + str.length;\r\n    var head = input.slice(i, j);\r\n    if (head === str) {\r\n      return makeSuccess(j, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function byte(b) {\r\n  ensureBuffer();\r\n  assertNumber(b);\r\n  if (b > 0xff) {\r\n    throw new Error(\r\n      \"Value specified to byte constructor (\" +\r\n        b +\r\n        \"=0x\" +\r\n        b.toString(16) +\r\n        \") is larger in value than a single byte.\"\r\n    );\r\n  }\r\n  var expected = (b > 0xf ? \"0x\" : \"0x0\") + b.toString(16);\r\n  return Parsimmon(function(input, i) {\r\n    var head = get(input, i);\r\n    if (head === b) {\r\n      return makeSuccess(i + 1, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function regexp(re, group) {\r\n  assertRegexp(re);\r\n  if (arguments.length >= 2) {\r\n    assertNumber(group);\r\n  } else {\r\n    group = 0;\r\n  }\r\n  var anchored = anchoredRegexp(re);\r\n  var expected = \"\" + re;\r\n  return Parsimmon(function(input, i) {\r\n    var match = anchored.exec(input.slice(i));\r\n    if (match) {\r\n      if (0 <= group && group <= match.length) {\r\n        var fullMatch = match[0];\r\n        var groupMatch = match[group];\r\n        return makeSuccess(i + fullMatch.length, groupMatch);\r\n      }\r\n      var message =\r\n        \"valid match group (0 to \" + match.length + \") in \" + expected;\r\n      return makeFailure(i, message);\r\n    }\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function succeed(value) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeSuccess(i, value);\r\n  });\r\n}\r\n\r\nexport function fail(expected) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function lookahead(x) {\r\n  if (isParser(x)) {\r\n    return Parsimmon(function(input, i) {\r\n      var result = x._(input, i);\r\n      result.index = i;\r\n      result.value = \"\";\r\n      return result;\r\n    });\r\n  } else if (typeof x === \"string\") {\r\n    return lookahead(string(x));\r\n  } else if (x instanceof RegExp) {\r\n    return lookahead(regexp(x));\r\n  }\r\n  throw new Error(\"not a string, regexp, or parser: \" + x);\r\n}\r\n\r\nexport function notFollowedBy(parser) {\r\n  assertParser(parser);\r\n  return Parsimmon(function(input, i) {\r\n    var result = parser._(input, i);\r\n    var text = input.slice(i, result.index);\r\n    return result.status\r\n      ? makeFailure(i, 'not \"' + text + '\"')\r\n      : makeSuccess(i, null);\r\n  });\r\n}\r\n\r\nexport function test(predicate) {\r\n  assertFunction(predicate);\r\n  return Parsimmon(function(input, i) {\r\n    var char = get(input, i);\r\n    if (i < input.length && predicate(char)) {\r\n      return makeSuccess(i + 1, char);\r\n    } else {\r\n      return makeFailure(i, \"a character/byte matching \" + predicate);\r\n    }\r\n  });\r\n}\r\n\r\nexport function oneOf(str) {\r\n  var expected = str.split(\"\");\r\n  for (var idx = 0; idx < expected.length; idx++) {\r\n    expected[idx] = \"'\" + expected[idx] + \"'\";\r\n  }\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) >= 0;\r\n  }).desc(expected);\r\n}\r\n\r\nexport function noneOf(str) {\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) < 0;\r\n  }).desc(\"none of '\" + str + \"'\");\r\n}\r\n\r\nexport function custom(parsingFunction) {\r\n  return Parsimmon(parsingFunction(makeSuccess, makeFailure));\r\n}\r\n\r\n// TODO[ES5]: Improve error message using JSON.stringify eventually.\r\nexport function range(begin, end) {\r\n  return test(function(ch) {\r\n    return begin <= ch && ch <= end;\r\n  }).desc(begin + \"-\" + end);\r\n}\r\n\r\nexport function takeWhile(predicate) {\r\n  assertFunction(predicate);\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var j = i;\r\n    while (j < input.length && predicate(get(input, j))) {\r\n      j++;\r\n    }\r\n    return makeSuccess(j, input.slice(i, j));\r\n  });\r\n}\r\n\r\nexport function lazy(desc, f) {\r\n  if (arguments.length < 2) {\r\n    f = desc;\r\n    desc = undefined;\r\n  }\r\n\r\n  var parser = Parsimmon(function(input, i) {\r\n    parser._ = f()._;\r\n    return parser._(input, i);\r\n  });\r\n\r\n  if (desc) {\r\n    return parser.desc(desc);\r\n  } else {\r\n    return parser;\r\n  }\r\n}\r\n\r\n// -*- Fantasy Land Extras -*-\r\n\r\nfunction empty() {\r\n  return fail(\"fantasy-land/empty\");\r\n}\r\n\r\n_.concat = _.or;\r\n_.empty = empty;\r\n_.of = succeed;\r\n_[\"fantasy-land/ap\"] = _.ap;\r\n_[\"fantasy-land/chain\"] = _.chain;\r\n_[\"fantasy-land/concat\"] = _.concat;\r\n_[\"fantasy-land/empty\"] = _.empty;\r\n_[\"fantasy-land/of\"] = _.of;\r\n_[\"fantasy-land/map\"] = _.map;\r\n\r\n// -*- Base Parsers -*-\r\n\r\nexport const index = Parsimmon(function(input, i) {\r\n  return makeSuccess(i, makeLineColumnIndex(input, i));\r\n});\r\n\r\nexport const any = Parsimmon(function(input, i) {\r\n  if (i >= input.length) {\r\n    return makeFailure(i, \"any character/byte\");\r\n  }\r\n  return makeSuccess(i + 1, get(input, i));\r\n});\r\n\r\nexport const all = Parsimmon(function(input, i) {\r\n  return makeSuccess(input.length, input.slice(i));\r\n});\r\n\r\nexport const eof = Parsimmon(function(input, i) {\r\n  if (i < input.length) {\r\n    return makeFailure(i, \"EOF\");\r\n  }\r\n  return makeSuccess(i, null);\r\n});\r\n\r\nexport const digit = regexp(/[0-9]/).desc(\"a digit\");\r\nexport const digits = regexp(/[0-9]*/).desc(\"optional digits\");\r\nexport const letter = regexp(/[a-z]/i).desc(\"a letter\");\r\nexport const letters = regexp(/[a-z]*/i).desc(\"optional letters\");\r\nexport const optWhitespace = regexp(/\\s*/).desc(\"optional whitespace\");\r\nexport const whitespace = regexp(/\\s+/).desc(\"whitespace\");\r\nexport const cr = string(\"\\r\");\r\nexport const lf = string(\"\\n\");\r\nexport const crlf = string(\"\\r\\n\");\r\nexport const newline = alt(crlf, lf, cr).desc(\"newline\");\r\nexport const end = alt(newline, eof);","/**\nxxHash implementation in pure Javascript\n\nCopyright (C) 2013, Pierre Curto\nMIT license\n*/\nimport { UINT32 } from './uint32'\n\n/*\n\tMerged this sequence of method calls as it speeds up\n\tthe calculations by a factor of 2\n */\n// this.v1.add( other.multiply(PRIME32_2) ).rotl(13).multiply(PRIME32_1);\nUINT32.prototype.xxh_update = function (low, high) {\n    var b00 = PRIME32_2._low\n    var b16 = PRIME32_2._high\n\n    var c16, c00\n    c00 = low * b00\n    c16 = c00 >>> 16\n\n    c16 += high * b00\n    c16 &= 0xFFFF\t\t// Not required but improves performance\n    c16 += low * b16\n\n    var a00 = this._low + (c00 & 0xFFFF)\n    var a16 = a00 >>> 16\n\n    a16 += this._high + (c16 & 0xFFFF)\n\n    var v = (a16 << 16) | (a00 & 0xFFFF)\n    v = (v << 13) | (v >>> 19)\n\n    a00 = v & 0xFFFF\n    a16 = v >>> 16\n\n    b00 = PRIME32_1._low\n    b16 = PRIME32_1._high\n\n    c00 = a00 * b00\n    c16 = c00 >>> 16\n\n    c16 += a16 * b00\n    c16 &= 0xFFFF\t\t// Not required but improves performance\n    c16 += a00 * b16\n\n    this._low = c00 & 0xFFFF\n    this._high = c16 & 0xFFFF\n}\n\n/*\n * Constants\n */\nvar PRIME32_1 = UINT32('2654435761')\nvar PRIME32_2 = UINT32('2246822519')\nvar PRIME32_3 = UINT32('3266489917')\nvar PRIME32_4 = UINT32('668265263')\nvar PRIME32_5 = UINT32('374761393')\n\n/**\n* Convert string to proper UTF-8 array\n* @param str Input string\n* @returns {Uint8Array} UTF8 array is returned as uint8 array\n*/\nfunction toUTF8Array(str) {\n    var utf8 = []\n    for (var i = 0, n = str.length; i < n; i++) {\n        var charcode = str.charCodeAt(i)\n        if (charcode < 0x80) utf8.push(charcode)\n        else if (charcode < 0x800) {\n            utf8.push(0xc0 | (charcode >> 6),\n                0x80 | (charcode & 0x3f))\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n            utf8.push(0xe0 | (charcode >> 12),\n                0x80 | ((charcode >> 6) & 0x3f),\n                0x80 | (charcode & 0x3f))\n        }\n        // surrogate pair\n        else {\n            i++;\n            // UTF-16 encodes 0x10000-0x10FFFF by\n            // subtracting 0x10000 and splitting the\n            // 20 bits of 0x0-0xFFFFF into two halves\n            charcode = 0x10000 + (((charcode & 0x3ff) << 10)\n                | (str.charCodeAt(i) & 0x3ff))\n            utf8.push(0xf0 | (charcode >> 18),\n                0x80 | ((charcode >> 12) & 0x3f),\n                0x80 | ((charcode >> 6) & 0x3f),\n                0x80 | (charcode & 0x3f))\n        }\n    }\n\n    return new Uint8Array(utf8)\n}\n\n/**\n * XXH object used as a constructor or a function\n * @constructor\n * or\n * @param {Object|String} input data\n * @param {Number|UINT32} seed\n * @return ThisExpression\n * or\n * @return {UINT32} xxHash\n */\nexport function XXH() {\n    if (arguments.length == 2)\n        return new XXH(arguments[1]).update(arguments[0]).digest()\n\n    if (!(this instanceof XXH))\n        return new XXH(arguments[0])\n\n    init.call(this, arguments[0])\n}\n\n/**\n * Initialize the XXH instance with the given seed\n * @method init\n * @param {Number|Object} seed as a number or an unsigned 32 bits integer\n * @return ThisExpression\n */\nfunction init(seed) {\n    this.seed = seed instanceof UINT32 ? seed.clone() : UINT32(seed)\n    this.v1 = this.seed.clone().add(PRIME32_1).add(PRIME32_2)\n    this.v2 = this.seed.clone().add(PRIME32_2)\n    this.v3 = this.seed.clone()\n    this.v4 = this.seed.clone().subtract(PRIME32_1)\n    this.total_len = 0\n    this.memsize = 0\n    this.memory = null\n\n    return this\n}\nXXH.prototype.init = init\n\n/**\n * Add data to be computed for the XXH hash\n * @method update\n * @param {String|Buffer|ArrayBuffer} input as a string or nodejs Buffer or ArrayBuffer\n * @return ThisExpression\n */\nXXH.prototype.update = function (input) {\n    var isString = typeof input == 'string'\n    var isArrayBuffer\n\n    // Convert all strings to utf-8 first (issue #5)\n    if (isString) {\n        input = toUTF8Array(input)\n        isString = false\n        isArrayBuffer = true\n    }\n\n    if (typeof ArrayBuffer !== \"undefined\" && input instanceof ArrayBuffer) {\n        isArrayBuffer = true\n        input = new Uint8Array(input);\n    }\n\n    var p = 0\n    var len = input.length\n    var bEnd = p + len\n\n    if (len == 0) return this\n\n    this.total_len += len\n\n    if (this.memsize == 0) {\n        if (isString) {\n            this.memory = ''\n        } else if (isArrayBuffer) {\n            this.memory = new Uint8Array(16)\n        } else {\n            this.memory = new Buffer(16)\n        }\n    }\n\n    if (this.memsize + len < 16)   // fill in tmp buffer\n    {\n        // XXH_memcpy(this.memory + this.memsize, input, len)\n        if (isString) {\n            this.memory += input\n        } else if (isArrayBuffer) {\n            this.memory.set(input.subarray(0, len), this.memsize)\n        } else {\n            input.copy(this.memory, this.memsize, 0, len)\n        }\n\n        this.memsize += len\n        return this\n    }\n\n    if (this.memsize > 0)   // some data left from previous update\n    {\n        // XXH_memcpy(this.memory + this.memsize, input, 16-this.memsize);\n        if (isString) {\n            this.memory += input.slice(0, 16 - this.memsize)\n        } else if (isArrayBuffer) {\n            this.memory.set(input.subarray(0, 16 - this.memsize), this.memsize)\n        } else {\n            input.copy(this.memory, this.memsize, 0, 16 - this.memsize)\n        }\n\n        var p32 = 0\n        if (isString) {\n            this.v1.xxh_update(\n                (this.memory.charCodeAt(p32 + 1) << 8) | this.memory.charCodeAt(p32)\n                , (this.memory.charCodeAt(p32 + 3) << 8) | this.memory.charCodeAt(p32 + 2)\n            )\n            p32 += 4\n            this.v2.xxh_update(\n                (this.memory.charCodeAt(p32 + 1) << 8) | this.memory.charCodeAt(p32)\n                , (this.memory.charCodeAt(p32 + 3) << 8) | this.memory.charCodeAt(p32 + 2)\n            )\n            p32 += 4\n            this.v3.xxh_update(\n                (this.memory.charCodeAt(p32 + 1) << 8) | this.memory.charCodeAt(p32)\n                , (this.memory.charCodeAt(p32 + 3) << 8) | this.memory.charCodeAt(p32 + 2)\n            )\n            p32 += 4\n            this.v4.xxh_update(\n                (this.memory.charCodeAt(p32 + 1) << 8) | this.memory.charCodeAt(p32)\n                , (this.memory.charCodeAt(p32 + 3) << 8) | this.memory.charCodeAt(p32 + 2)\n            )\n        } else {\n            this.v1.xxh_update(\n                (this.memory[p32 + 1] << 8) | this.memory[p32]\n                , (this.memory[p32 + 3] << 8) | this.memory[p32 + 2]\n            )\n            p32 += 4\n            this.v2.xxh_update(\n                (this.memory[p32 + 1] << 8) | this.memory[p32]\n                , (this.memory[p32 + 3] << 8) | this.memory[p32 + 2]\n            )\n            p32 += 4\n            this.v3.xxh_update(\n                (this.memory[p32 + 1] << 8) | this.memory[p32]\n                , (this.memory[p32 + 3] << 8) | this.memory[p32 + 2]\n            )\n            p32 += 4\n            this.v4.xxh_update(\n                (this.memory[p32 + 1] << 8) | this.memory[p32]\n                , (this.memory[p32 + 3] << 8) | this.memory[p32 + 2]\n            )\n        }\n\n        p += 16 - this.memsize\n        this.memsize = 0\n        if (isString) this.memory = ''\n    }\n\n    if (p <= bEnd - 16) {\n        var limit = bEnd - 16\n\n        do {\n            if (isString) {\n                this.v1.xxh_update(\n                    (input.charCodeAt(p + 1) << 8) | input.charCodeAt(p)\n                    , (input.charCodeAt(p + 3) << 8) | input.charCodeAt(p + 2)\n                )\n                p += 4\n                this.v2.xxh_update(\n                    (input.charCodeAt(p + 1) << 8) | input.charCodeAt(p)\n                    , (input.charCodeAt(p + 3) << 8) | input.charCodeAt(p + 2)\n                )\n                p += 4\n                this.v3.xxh_update(\n                    (input.charCodeAt(p + 1) << 8) | input.charCodeAt(p)\n                    , (input.charCodeAt(p + 3) << 8) | input.charCodeAt(p + 2)\n                )\n                p += 4\n                this.v4.xxh_update(\n                    (input.charCodeAt(p + 1) << 8) | input.charCodeAt(p)\n                    , (input.charCodeAt(p + 3) << 8) | input.charCodeAt(p + 2)\n                )\n            } else {\n                this.v1.xxh_update(\n                    (input[p + 1] << 8) | input[p]\n                    , (input[p + 3] << 8) | input[p + 2]\n                )\n                p += 4\n                this.v2.xxh_update(\n                    (input[p + 1] << 8) | input[p]\n                    , (input[p + 3] << 8) | input[p + 2]\n                )\n                p += 4\n                this.v3.xxh_update(\n                    (input[p + 1] << 8) | input[p]\n                    , (input[p + 3] << 8) | input[p + 2]\n                )\n                p += 4\n                this.v4.xxh_update(\n                    (input[p + 1] << 8) | input[p]\n                    , (input[p + 3] << 8) | input[p + 2]\n                )\n            }\n            p += 4\n        } while (p <= limit)\n    }\n\n    if (p < bEnd) {\n        // XXH_memcpy(this.memory, p, bEnd-p);\n        if (isString) {\n            this.memory += input.slice(p)\n        } else if (isArrayBuffer) {\n            this.memory.set(input.subarray(p, bEnd), this.memsize)\n        } else {\n            input.copy(this.memory, this.memsize, p, bEnd)\n        }\n\n        this.memsize = bEnd - p\n    }\n\n    return this\n}\n\n/**\n * Finalize the XXH computation. The XXH instance is ready for reuse for the given seed\n * @method digest\n * @return {UINT32} xxHash\n */\nXXH.prototype.digest = function () {\n    var input = this.memory\n    var isString = typeof input == 'string'\n    var p = 0\n    var bEnd = this.memsize\n    var h32, h\n    var u = new UINT32\n\n    if (this.total_len >= 16) {\n        h32 = this.v1.rotl(1).add(this.v2.rotl(7).add(this.v3.rotl(12).add(this.v4.rotl(18))))\n    }\n    else {\n        h32 = this.seed.clone().add(PRIME32_5)\n    }\n\n    h32.add(u.fromNumber(this.total_len))\n\n    while (p <= bEnd - 4) {\n        if (isString) {\n            u.fromBits(\n                (input.charCodeAt(p + 1) << 8) | input.charCodeAt(p)\n                , (input.charCodeAt(p + 3) << 8) | input.charCodeAt(p + 2)\n            )\n        } else {\n            u.fromBits(\n                (input[p + 1] << 8) | input[p]\n                , (input[p + 3] << 8) | input[p + 2]\n            )\n        }\n        h32\n            .add(u.multiply(PRIME32_3))\n            .rotl(17)\n            .multiply(PRIME32_4)\n        p += 4\n    }\n\n    while (p < bEnd) {\n        u.fromBits(isString ? input.charCodeAt(p++) : input[p++], 0)\n        h32\n            .add(u.multiply(PRIME32_5))\n            .rotl(11)\n            .multiply(PRIME32_1)\n    }\n\n    h = h32.clone().shiftRight(15)\n    h32.xor(h).multiply(PRIME32_2)\n\n    h = h32.clone().shiftRight(13)\n    h32.xor(h).multiply(PRIME32_3)\n\n    h = h32.clone().shiftRight(16)\n    h32.xor(h)\n\n    // Reset the state\n    this.init(this.seed)\n\n    return h32\n}\n","namespace Fable.SimpleJson\r\n\r\nopen System\r\nopen Fable.Core\r\nopen FSharp.Reflection\r\nopen System.Numerics\r\nopen System.Collections\r\nopen System.Collections.Generic\r\n\r\nmodule Node =\r\n\r\n    [<Emit(\"Array.prototype.slice.call(Buffer.from($0, 'base64'))\")>]\r\n    /// Converts Base64 string into a byte array in Node environment\r\n    let bytesFromBase64 (value: string) : byte array = jsNative\r\n\r\nmodule Convert =\r\n    [<Emit(\"new Function(\\\"try {return this===window;}catch(e){ return false;}\\\")\")>]\r\n    let internal isBrowser : unit -> bool = jsNative\r\n\r\n    let insideBrowser = isBrowser()\r\n\r\n    [<Emit(\"typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\")>]\r\n    let internal insideWorker :  bool = jsNative\r\n\r\n    [<Emit(\"$0[$1] = $2\")>]\r\n    let internal setProp o k v = jsNative\r\n\r\n    type InternalMap =\r\n        | MapEmpty\r\n        | MapOne of string * Json\r\n        | MapNode of string * Json * InternalMap * InternalMap\r\n\r\n    let rec flattenMap = function\r\n        | MapEmpty -> [ ]\r\n        | MapOne (key, value) -> [ key, value ]\r\n        | MapNode (key, value, left, right) ->\r\n            [ yield! flattenMap left\r\n              yield! flattenMap right\r\n              yield  (key, value) ]\r\n\r\n    let (|KeyValue|_|) key (map: Map<string, Json>) =\r\n        map\r\n        |> Map.tryFind key\r\n        |> Option.map (fun value -> key, value, Map.remove key map)\r\n\r\n    let (|NonArray|_|) = function\r\n        | JArray _ -> None\r\n        | json -> Some json\r\n\r\n    let (|MapEmpty|_|) json =\r\n        match json with\r\n        | JString \"MapEmpty\" -> Some json\r\n        | _ -> None\r\n\r\n    let (|MapKey|_|) = function\r\n        | JNumber number -> Some (string number)\r\n        | JString key -> Some key\r\n        | _ -> None\r\n\r\n    let (|MapOne|_|) = function\r\n        | JArray [ JString \"MapOne\"; MapKey key; value ] -> Some (key, value)\r\n        | _ -> None\r\n\r\n    let (|MapNode|_|) = function\r\n        | JArray [ JString \"MapNode\"; MapKey key; value; left; right; JNumber _  ] ->\r\n            Some (key, value, left, right)\r\n        | _ -> None\r\n\r\n    let rec generateMap json =\r\n        match json with\r\n        | MapEmpty _ -> Some InternalMap.MapEmpty\r\n        | MapOne (key, value) -> Some (InternalMap.MapOne (key, value))\r\n        | MapNode (key, value, left, right) ->\r\n            match generateMap left, generateMap right with\r\n            | Some leftMap, Some rightMap ->\r\n                Some (InternalMap.MapNode(key, value, leftMap, rightMap))\r\n            | _ -> None\r\n        | _ -> None\r\n\r\n    let arrayLike = function\r\n        | TypeInfo.Array _ -> true\r\n        | TypeInfo.List _ -> true\r\n        | TypeInfo.Seq _ -> true\r\n        | TypeInfo.Tuple _ -> true\r\n        | _ -> false\r\n\r\n    let optional = function\r\n        | TypeInfo.Option _ -> true\r\n        | _ -> false\r\n\r\n    let isQuoted (input: string) =\r\n        input.StartsWith \"\\\"\" && input.EndsWith \"\\\"\"\r\n\r\n    let removeQuotes (input: string) =\r\n        input.Substring(1, input.Length - 2)\r\n\r\n    let rec fromJsonAs (input: Json) (typeInfo: Fable.SimpleJson.TypeInfo) : obj =\r\n        match input, typeInfo with\r\n        | JNumber value, TypeInfo.Float -> unbox value\r\n        | JNumber value, TypeInfo.Float32 -> unbox (float32 value)\r\n        | JString value, TypeInfo.Float32 -> unbox (float32 value)\r\n        // reading number as int -> floor it\r\n        | JNumber value, TypeInfo.Int32 -> unbox (JS.Math.floor(value))\r\n        | JBool value, TypeInfo.Bool -> unbox value\r\n        // reading int from string -> parse it\r\n        | JString value, TypeInfo.Int32 -> unbox (int value)\r\n        // reading into strings\r\n        | JString value, TypeInfo.String -> unbox value\r\n        | JNumber value, TypeInfo.String -> unbox (string value)\r\n        // decimals\r\n        | JString value, TypeInfo.Decimal -> unbox (decimal value)\r\n        | JNumber value, TypeInfo.Decimal -> unbox (decimal value)\r\n        | JString value, TypeInfo.Short -> unbox (int16 value)\r\n        | JNumber value, TypeInfo.Short -> unbox (int16 value)\r\n        // Unsigned integers\r\n        | JNumber value, TypeInfo.UInt16 -> unbox (uint16 value)\r\n        | JString value, TypeInfo.UInt16 -> unbox (uint16 value)\r\n        | JNumber value, TypeInfo.UInt32 -> unbox (uint32 value)\r\n        | JString value, TypeInfo.UInt32 -> unbox (uint32 value)\r\n        | JNumber value, TypeInfo.UInt64 -> unbox (uint64 value)\r\n        | JString value, TypeInfo.UInt64 -> unbox (uint64 value)\r\n        | JNumber value, TypeInfo.TimeSpan -> unbox (JS.Math.floor value)\r\n        | JString value, TypeInfo.Enum getlElemType ->\r\n            let (underlyingType, originalType) = getlElemType()\r\n            match underlyingType with\r\n            | TypeInfo.Int32 ->\r\n                match Int32.TryParse(value) with\r\n                | true, parsedNumber ->\r\n                    unbox parsedNumber\r\n                | false, _ ->\r\n                    failwithf \"The value '%s' is not valid for enum of type '%s'\" value originalType.Name\r\n            | TypeInfo.Long ->\r\n                match Int64.TryParse(value) with\r\n                | true, parsedNumber ->\r\n                    unbox parsedNumber\r\n                | false, _ ->\r\n                    failwithf \"The value '%s' is not valid for enum of type '%s'\" value originalType.Name\r\n            | other ->\r\n                failwithf \"The value '%s' cannot be converted to enum of type '%s'\" value originalType.Name\r\n        | JNumber value, TypeInfo.Enum getElemType ->\r\n            let (_, originalType) = getElemType()\r\n            unbox value\r\n        // byte[] coming from the server is serialized as base64 string\r\n        // convert it back to the actual byte array\r\n        | JString value, TypeInfo.Array getElemType ->\r\n            let elemType = getElemType()\r\n            match elemType with\r\n            | TypeInfo.Byte ->\r\n                if insideWorker || insideBrowser\r\n                then unbox (Convert.FromBase64String value)\r\n                else unbox (Node.bytesFromBase64 value)\r\n            | otherType -> failwithf \"Cannot convert arbitrary string '%s' to %A\" value otherType\r\n\r\n        // null values for strings are just the null string\r\n        | JNull, TypeInfo.String -> unbox null\r\n        | JNull, TypeInfo.Unit -> unbox ()\r\n        // int64 as string -> parse it\r\n        | JString value, TypeInfo.Long -> unbox (int64 value)\r\n        | JString value, TypeInfo.Byte -> unbox (byte value)\r\n        | JNumber value, TypeInfo.Byte -> unbox (byte value)\r\n        // BigInt as string -> parse it\r\n        | JString value, TypeInfo.BigInt -> unbox (BigInteger.Parse value)\r\n        | JNumber value, TypeInfo.BigInt -> unbox (bigint (JS.Math.floor(value)))\r\n        // parse formatted date time\r\n        | JString value, TypeInfo.DateTime -> unbox (DateTime.Parse(value))\r\n        // parse formatted date time offset\r\n        | JString value, TypeInfo.DateTimeOffset -> unbox (DateTimeOffset.Parse(value))\r\n        // deserialize union from objects\r\n        // { \"One\": 20 } or {\"One\": [20]} -> One of int\r\n        | JObject values, TypeInfo.Union (getTypes) ->\r\n            let (cases, unionType) = getTypes()\r\n            match Map.toList values with\r\n            | [ caseName, JArray values ] ->\r\n                cases\r\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\r\n                |> function\r\n                    | None ->\r\n                        let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) cases\r\n                        let expectedCases = String.concat \", \" caseNames\r\n                        failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\r\n                    | Some foundCase when Array.length foundCase.CaseTypes = 1 && arrayLike foundCase.CaseTypes.[0] ->\r\n                        let deserialized = fromJsonAs (JArray values) foundCase.CaseTypes.[0]\r\n                        FSharpValue.MakeUnion(foundCase.Info, [| deserialized |])\r\n                        |> unbox\r\n                    | Some foundCase when Array.length foundCase.CaseTypes = 1 && optional foundCase.CaseTypes.[0] ->\r\n                        let parsedOptional = unbox (fromJsonAs (JArray values) foundCase.CaseTypes.[0])\r\n                        FSharpValue.MakeUnion(foundCase.Info, [| parsedOptional |])\r\n                        |> unbox\r\n                    | Some foundCase ->\r\n                        if Array.length foundCase.CaseTypes = 1\r\n                            && not (arrayLike foundCase.CaseTypes.[0])\r\n                            && Array.length foundCase.CaseTypes <> List.length values\r\n                        then failwithf \"Expected case '%s' to have %d argument types but the JSON data only contained %d values\" foundCase.CaseName (Array.length foundCase.CaseTypes) (List.length values)\r\n                        let parsedValues =\r\n                            Array.ofList values\r\n                            |> Array.zip foundCase.CaseTypes\r\n                            |> Array.map (fun (valueType, value) -> fromJsonAs value valueType)\r\n                        FSharpValue.MakeUnion(foundCase.Info, parsedValues)\r\n                        |> unbox\r\n            | [ caseName, NonArray json ] ->\r\n                cases\r\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\r\n                |> function\r\n                    | Some ({ CaseName = caseName; Info = caseInfo; CaseTypes = [| caseType |] }) ->\r\n                        FSharpValue.MakeUnion(caseInfo, [| unbox fromJsonAs json caseType |])\r\n                        |> unbox\r\n                    | _ ->\r\n                        let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) cases\r\n                        let expectedCases = String.concat \", \" caseNames\r\n                        failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\r\n            | otherwise ->\r\n                // TODO!!! Better error messages here\r\n                let unexpectedJson = JS.JSON.stringify otherwise\r\n                let expectedType = JS.JSON.stringify cases\r\n                failwithf \"Expected JSON:\\n%s\\nto match the type\\n%s\" unexpectedJson expectedType\r\n        | JNull, TypeInfo.Option _ -> unbox None\r\n        | jsonValue, TypeInfo.Option optionalTypeDelayed when jsonValue <> JNull ->\r\n            let optionalType = optionalTypeDelayed()\r\n            let parsedOptional = unbox (fromJsonAs jsonValue optionalType)\r\n            unbox Some parsedOptional\r\n        | JString value, TypeInfo.Guid _ -> unbox (System.Guid.Parse(value))\r\n        // int64 as a number, convert it to int then to in64\r\n        | JNumber value , TypeInfo.Long _ -> unbox int64 (int value)\r\n        // int64 as the internal representation from Long.js\r\n        // then reconstruct it from the high/low (two integers) components\r\n        | JObject dict, TypeInfo.Long _ ->\r\n            let get key = Map.tryFind key dict\r\n            [ get \"low\"; get \"high\"; get \"unsigned\" ]\r\n            |> List.choose id\r\n            |> function\r\n                | [ JNumber low; JNumber high; JBool _ ] ->\r\n                    let lowBytes = BitConverter.GetBytes(int low)\r\n                    let highBytes = BitConverter.GetBytes(int high)\r\n                    let combinedBytes = Array.concat [ lowBytes; highBytes ]\r\n                    BitConverter.ToInt64(combinedBytes, 0)\r\n                    |> unbox\r\n                | _ -> failwithf \"Unable to construct int64 from object literal { low: int, high: int, unsigned: bool }\"\r\n        // convert a single case string to union\r\n        // \"One\" -> One, here is a special case where the case in quoted inside the string\r\n        | JString caseName, TypeInfo.Union getTypes when isQuoted caseName ->\r\n            let (caseTypes, unionType) = getTypes()\r\n            caseTypes\r\n            |> Array.tryFind (fun case -> case.CaseName = removeQuotes caseName)\r\n            |> function\r\n                | Some ({ Info = caseInfo }) -> unbox (FSharpValue.MakeUnion(caseInfo, [||]))\r\n                | None ->\r\n                    let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) caseTypes\r\n                    let expectedCases = String.concat \", \" caseNames\r\n                    failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\r\n        // convert a single case string to union\r\n        // \"One\" -> One\r\n        | JString caseName, TypeInfo.Union getTypes ->\r\n            let (caseTypes, unionType) = getTypes()\r\n            caseTypes\r\n            |> Array.tryFind (fun case -> case.CaseName = caseName)\r\n            |> function\r\n                | Some ({ Info = caseInfo }) -> unbox (FSharpValue.MakeUnion(caseInfo, [||]))\r\n                | None ->\r\n                    let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) caseTypes\r\n                    let expectedCases = String.concat \", \" caseNames\r\n                    failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\r\n        | JString serializedRecord, TypeInfo.Record getFields ->\r\n            fromJsonAs (SimpleJson.parse serializedRecord) typeInfo\r\n        // convert unions from arrays\r\n        // [\"One\", 20] -> One of int\r\n        | JArray caseValue, TypeInfo.Union getTypes ->\r\n            let (cases, unionType) = getTypes()\r\n            match caseValue with\r\n            // Union case without values\r\n            | [ JString caseName ] ->\r\n                cases\r\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\r\n                |> function\r\n                    | Some ({ CaseName = caseName; Info = caseInfo; CaseTypes = caseInfoTypes }) ->\r\n                        // single case without values\r\n                        unbox (FSharpValue.MakeUnion(caseInfo, [||]))\r\n                    | None ->\r\n                        let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) cases\r\n                        let expectedCases = String.concat \", \" caseNames\r\n                        failwithf \"Case '%s' was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\r\n            | JString caseName :: values ->\r\n                cases\r\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\r\n                |> function\r\n                    | None ->\r\n                        let caseNames = Array.map (fun ({ CaseName = name }) -> name) cases\r\n                        let expectedCases = String.concat \", \" caseNames\r\n                        failwithf \"Case %s was not valid, expected one of [%s]\" caseName expectedCases\r\n                    | Some ({ CaseName = foundCaseName; Info = caseInfo; CaseTypes = types }) ->\r\n                        if Array.length types <> List.length values\r\n                        then failwithf \"The number of union case parameters for '%s' is different\" foundCaseName\r\n                        let parsedValues =\r\n                            Array.ofList values\r\n                            |> Array.zip types\r\n                            |> Array.map (fun (valueType, value) -> fromJsonAs value valueType)\r\n                        FSharpValue.MakeUnion(caseInfo, parsedValues)\r\n                        |> unbox\r\n            | otherwise ->\r\n                let unexpectedJson = JS.JSON.stringify otherwise\r\n                let expectedType = JS.JSON.stringify cases\r\n                failwithf \"Expected JSON:\\n%s\\nto match the type\\n%s\" unexpectedJson expectedType\r\n        // Arrays\r\n        | JArray values, TypeInfo.Array elementTypeDelayed ->\r\n            let elementType = elementTypeDelayed()\r\n            values\r\n            |> List.map (fun value -> unbox (fromJsonAs value elementType))\r\n            |> Array.ofList\r\n            |> unbox\r\n        // Lists\r\n        | JArray values, TypeInfo.List elementTypeDelayed ->\r\n            let elementType = elementTypeDelayed()\r\n            values\r\n            |> List.map (fun value -> unbox (fromJsonAs value elementType))\r\n            |> unbox\r\n        | JArray values, TypeInfo.Set elementTypeDelayed ->\r\n            let elementType = elementTypeDelayed()\r\n            values\r\n            |> List.map (fun value -> unbox (fromJsonAs value elementType))\r\n            |> Set.ofList\r\n            |> unbox\r\n\r\n        | JArray values, TypeInfo.Seq elementTypeDelayed ->\r\n            let elementType = elementTypeDelayed()\r\n            let converted = List.map (fun value -> unbox (fromJsonAs value elementType)) values\r\n            unbox converted\r\n        // Tuples, become just arrays\r\n        | JArray array, TypeInfo.Tuple tupleTypesDelayed ->\r\n            let tupleTypes = tupleTypesDelayed()\r\n            array\r\n            |> Array.ofList\r\n            |> Array.zip tupleTypes\r\n            |> Array.map (fun (jsonType, jsonData) -> fromJsonAs jsonData jsonType)\r\n            |> unbox\r\n        // Records\r\n        | JObject dict, TypeInfo.Record getTypes ->\r\n            let fields, recordType = getTypes()\r\n            // Match the JSON object literal keys with their types\r\n            let recordValues =\r\n                let values = Map.toList dict\r\n                fields\r\n                |> Array.map (fun ({ FieldName = fieldName; FieldType = fieldType }) ->\r\n                    values\r\n                    |> List.tryFind (fun (key, value) -> fieldName = key)\r\n                    |> function\r\n                        | Some (key, value) -> unbox (fromJsonAs value fieldType)\r\n                        | None ->\r\n                            match fieldType with\r\n                            // field type is an option of something, just return None\r\n                            | TypeInfo.Option _ -> unbox None\r\n                            | _ ->\r\n                              // field type is required and it doens't exist in the JSON\r\n                              // then generate a nice error message\r\n                              let dictKeys =\r\n                                  Map.toList dict\r\n                                  |> List.map (fst >> sprintf \"'%s'\")\r\n                                  |> String.concat \", \"\r\n                                  |> sprintf \"[ %s ]\"\r\n                              let recordFields =\r\n                                  fields\r\n                                  |> Array.map (fun ({ FieldName = name; FieldType = innerFieldType }) ->\r\n                                      match innerFieldType with\r\n                                      | TypeInfo.Option _ -> sprintf \"optional('%s')\" name\r\n                                      | _ -> sprintf \"required('%s')\" name)\r\n                                  |> String.concat \", \"\r\n                                  |> sprintf \"[ %s ]\"\r\n                              failwithf \"Could not find the required key '%s' in the JSON object literal with keys %s to match with record type '%s' that has fields %s\" fieldName dictKeys recordType.Name recordFields)\r\n            unbox (FSharpValue.MakeRecord(recordType, recordValues))\r\n\r\n        | JArray tuples, TypeInfo.Map getTypes ->\r\n            let (keyType, valueType) = getTypes()\r\n            let pairs =\r\n                [ for keyValuePair in tuples do\r\n                    let tuple = fromJsonAs keyValuePair (TypeInfo.Tuple (let a = [| keyType; valueType |] in fun () -> a))\r\n                    yield tuple ]\r\n            match keyType with\r\n            | TypeInfo.Int32\r\n            | TypeInfo.String\r\n            | TypeInfo.Bool ->\r\n                pairs\r\n                |> unbox<(string * obj) list>\r\n                |> Map.ofList\r\n                |> unbox\r\n            | _ ->\r\n                pairs\r\n                |> unbox<(IStructuralComparable * obj) list>\r\n                |> Map.ofList\r\n                |> unbox\r\n\r\n        | JArray tuples, TypeInfo.Dictionary getTypes ->\r\n            let (keyType, valueType) = getTypes()\r\n            let pairs =\r\n                [ for keyValuePair in tuples do\r\n                    let tuple = fromJsonAs keyValuePair (TypeInfo.Tuple (let a = [| keyType; valueType |] in fun () -> a))\r\n                    yield tuple ]\r\n            let output = System.Collections.Generic.Dictionary<IStructuralComparable, _>()\r\n            for (key, value) in (unbox<(IStructuralComparable * obj) list> pairs) do output.Add(unbox key, value)\r\n            output\r\n            |> unbox\r\n\r\n        | JObject dict, TypeInfo.Dictionary getTypes ->\r\n            let (keyType, valueType) = getTypes()\r\n            dict\r\n            |> Map.toList\r\n            |> List.map (fun (key, value) -> fromJsonAs (JString key) keyType, fromJsonAs value valueType )\r\n            |> fun pairs ->\r\n                let output = System.Collections.Generic.Dictionary<IStructuralComparable, _>()\r\n                for (key, value) in pairs do output.Add(unbox key, value)\r\n                output\r\n                |> unbox\r\n\r\n        | JArray items, TypeInfo.HashSet getType ->\r\n            let elemType = getType()\r\n            let hashset = HashSet<IStructuralComparable>()\r\n            for item in items do\r\n                let deserialized = fromJsonAs item elemType\r\n                hashset.Add(unbox deserialized) |> ignore\r\n\r\n            unbox hashset\r\n\r\n        | JObject map, TypeInfo.Map getTypes ->\r\n            let (keyType, valueType) = getTypes()\r\n            // check whether the map is serialized to it's internal representation\r\n            // and convert that to back to a normal map from the data\r\n            match Map.tryFind \"comparer\" map, Map.tryFind \"tree\" map with\r\n            | Some (JObject comparer), Some (JArray tree) when Map.isEmpty comparer ->\r\n                match generateMap (JArray tree) with\r\n                | Some internalMap ->\r\n                    let pairs =\r\n                        flattenMap internalMap\r\n                        |> List.map (fun (key, value) ->\r\n                            let nextKey =\r\n                                if not (isQuoted key)\r\n                                then unbox (fromJsonAs (JString key) keyType)\r\n                                else unbox (fromJsonAs (SimpleJson.parseNative key) keyType)\r\n                            let nextValue = unbox (fromJsonAs value valueType)\r\n                            unbox<obj> nextKey, nextValue)\r\n                    match keyType with\r\n                    | TypeInfo.Int32\r\n                    | TypeInfo.String\r\n                    | TypeInfo.Bool ->\r\n                        pairs\r\n                        |> unbox<(string * obj) list>\r\n                        |> Map.ofList\r\n                        |> unbox\r\n                    | _ ->\r\n                        pairs\r\n                        |> unbox<(IStructuralComparable * obj) list>\r\n                        |> Map.ofList\r\n                        |> unbox\r\n\r\n                | None ->\r\n                    let inputJson = SimpleJson.toString (JArray tree)\r\n                    failwithf \"Could not generate map from JSON\\n %s\" inputJson\r\n            | _ ->\r\n                // if comparer and tree are not present,\r\n                // assume we are parsing Fable 1 object literal\r\n                // and converting that to map\r\n                let pairs =\r\n                    map\r\n                    |> Map.toList\r\n                    |> List.map (fun (key, value) ->\r\n                        let nextKey =\r\n                            if not (isQuoted key)\r\n                            then\r\n                                if Converter.isPrimitive keyType || Converter.enumUnion keyType\r\n                                then\r\n                                    // for primitive type, just read them as string and parse\r\n                                    unbox (fromJsonAs (JString key) keyType)\r\n                                else\r\n                                    // server-side JSON can still be complex (for complex types)\r\n                                    // but doesn't have to be quoted, parse again here\r\n                                    unbox (fromJsonAs (SimpleJson.parseNative key) keyType)\r\n                            else\r\n                                unbox (fromJsonAs (SimpleJson.parseNative key) keyType)\r\n                        let nextValue = unbox (fromJsonAs value valueType)\r\n                        unbox<string> nextKey, nextValue)\r\n\r\n                match keyType with\r\n                | TypeInfo.Int32\r\n                | TypeInfo.String\r\n                | TypeInfo.Bool ->\r\n                    pairs\r\n                    |> unbox<(string * obj) list>\r\n                    |> Map.ofList\r\n                    |> unbox\r\n                | _ ->\r\n                    pairs\r\n                    |> unbox<(IStructuralComparable * obj) list>\r\n                    |> Map.ofList\r\n                    |> unbox\r\n        | _, TypeInfo.Any getType ->\r\n            let unknownType = getType()\r\n            failwithf \"Cannot convert %s to %s\" (SimpleJson.toString input) unknownType.FullName\r\n        | _ ->\r\n            failwithf \"Cannot convert %s to %s\" (SimpleJson.toString input) (JS.JSON.stringify typeInfo)\r\n\r\n    let fromJson<'t> json typeInfo =\r\n        unbox<'t> (fromJsonAs json typeInfo)\r\n\r\n[<AutoOpenAttribute>]\r\nmodule ConverterExtensions =\r\n    type Json with\r\n        static member stringify<'t> (x: 't) =\r\n            SimpleJson.stringify x\r\n\r\n        /// Parses the input string as JSON and tries to convert it as the given type argument\r\n        static member inline parseAs<'t> (input: string) : 't =\r\n            match SimpleJson.tryParse input with\r\n            | None -> failwith \"Couldn't parse the input JSON string because it seems to be invalid\"\r\n            | Some inputJson ->\r\n                let typeInfo = TypeInfo.createFrom<'t> ()\r\n                Convert.fromJson<'t> inputJson typeInfo\r\n\r\n        /// Parses the input string as JSON using native parsing and tries to convert it as the given type argument\r\n        static member inline parseNativeAs<'t> (input: string) : 't =\r\n            let inputJson = SimpleJson.parseNative input\r\n            let typeInfo = TypeInfo.createFrom<'t> ()\r\n            Convert.fromJson<'t> inputJson typeInfo\r\n\r\n        /// Tries to parse the input string as JSON and tries to convert it as the given type argument, returing a (hopefully) useful error message when it fails\r\n        static member inline tryParseAs<'t> (input: string) : Result<'t, string> =\r\n            try Ok (Json.parseAs<'t> input)\r\n            with | ex -> Error ex.Message\r\n\r\n        /// Tries to parse the input string as JSON using native parsing and tries to convert it as the given type argument\r\n        static member inline tryParseNativeAs<'t> (input: string) : Result<'t, string> =\r\n            try Ok (Json.parseNativeAs<'t> input)\r\n            with | ex -> Error ex.Message\r\n\r\n        /// Tries to convert parsed JSON object as the given type parameter argument, this method is used when you want to apply transformations to the JSON object before parsing\r\n        static member inline convertFromJsonAs<'t> (input: Json) : 't =\r\n            let typeInfo = TypeInfo.createFrom<'t> ()\r\n            Convert.fromJson<'t> input typeInfo\r\n\r\n        /// Tries to convert parsed JSON object as the given type parameter argument, this method is used when you want to apply transformations to the JSON object before parsing\r\n        static member inline tryConvertFromJsonAs<'t> (input: Json) : Result<'t, string> =\r\n            try Ok (Json.convertFromJsonAs<'t> input)\r\n            with | ex -> Error ex.Message\r\n","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, padWithZeros } from \"./Util\";\nexport default function DateTimeOffset(value, offset) {\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nexport function fromDate(date, offset) {\n    const isUtc = date.kind === 1 /* UTC */;\n    const offset2 = isUtc ? 0 : date.getTimezoneOffset() * -60000;\n    if (offset != null && offset !== offset2) {\n        throw new Error(isUtc\n            ? \"The UTC Offset for Utc DateTime instances must be 0.\"\n            : \"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v, _refValue) {\n    try {\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    if (offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes\");\n        }\n        if (~~(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hour\");\n        }\n    }\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDate();\n}\nexport function hour(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCHours();\n}\nexport function millisecond(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMilliseconds();\n}\nexport function minute(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMinutes();\n}\nexport function month(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMonth() + 1;\n}\nexport function second(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCSeconds();\n}\nexport function year(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDay();\n}\nexport function dayOfYear(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    var _a;\n    return DateTimeOffset(d.getTime() + ts, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addDays(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 86400000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addHours(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 3600000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMinutes(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 60000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addSeconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 1000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMilliseconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addYears(d, v) {\n    var _a;\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMonths(d, v) {\n    var _a, _b;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), ((_b = d.offset) !== null && _b !== void 0 ? _b : 0));\n}\nexport function subtract(d, that) {\n    var _a;\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0))\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\n//# sourceMappingURL=DateOffset.js.map","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport default function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(str) {\n    let date = new Date(str);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(str);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, _refValue) {\n    try {\n        // if value is null or whitespace, parsing fails\n        if (v == null || v.trim() === \"\") {\n            return [false, minValue()];\n        }\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\n//# sourceMappingURL=Date.js.map","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, 0];\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n//# sourceMappingURL=Int32.js.map","// tslint:disable:ban-types\nexport function bindThis(this$, source) {\n    for (const key of Object.keys(source)) {\n        if (typeof source[key] === \"function\") {\n            source[key] = source[key].bind(this$);\n        }\n    }\n    return source;\n}\n// Object.assign flattens getters and setters\n// See https://stackoverflow.com/questions/37054596/js-es5-how-to-assign-objects-with-setters-and-getters\nexport function extend(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Object.keys(source)) {\n            const descr = Object.getOwnPropertyDescriptor(source, key);\n            if (descr) {\n                Object.defineProperty(target, key, descr);\n            }\n        }\n    }\n    return target;\n}\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return x != null && (Array.isArray(x) || ArrayBuffer.isView(x));\n}\nexport function isComparer(x) {\n    return x != null && typeof x.Compare === \"function\";\n}\nexport function isComparable(x) {\n    return x != null && typeof x.CompareTo === \"function\";\n}\nexport function isEquatable(x) {\n    return x != null && typeof x.Equals === \"function\";\n}\nexport function isHashable(x) {\n    return x != null && typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\n// TODO: Move these three methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                const len = x.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(x[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(String(x));\n            }\n        }\n    }\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\n// export function equalObjects(x: { [k: string]: any }, y: { [k: string]: any }): boolean {\n//   if (x == null) { return y == null; }\n//   if (y == null) { return false; }\n//   const xKeys = Object.keys(x);\n//   const yKeys = Object.keys(y);\n//   if (xKeys.length !== yKeys.length) {\n//     return false;\n//   }\n//   xKeys.sort();\n//   yKeys.sort();\n//   for (let i = 0; i < xKeys.length; i++) {\n//     if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return false;\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nexport function compareObjects(x, y) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x) && isArrayLike(y)) {\n        return compareArrays(x, y);\n    }\n    else if (x instanceof Date && y instanceof Date) {\n        return compareDates(x, y);\n    }\n    else {\n        return 1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value) => {\n        if (value === void 0) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function createObj(fields, caseRule = CaseRules.None) {\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    const o = {};\n    const definedCaseRule = caseRule;\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (typeof kvPair.toJSON === \"function\") {\n            kvPair = kvPair.toJSON();\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    o[changeCase(kvPair[0], caseRule)] = true;\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    o[changeCase(kvPair[0], caseRule)] = value;\n                    break;\n                default:\n                    o[changeCase(kvPair[0], caseRule)] = kvPair.slice(1);\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            o[changeCase(kvPair, caseRule)] = true;\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return o;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return undefined;\n    }\n    // The function is already uncurried\n    if (f.length > 1) {\n        // if (CURRIED_KEY in f) { // This doesn't always work\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return undefined;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n//# sourceMappingURL=Util.js.map","import { defaultArg, value as value$$1, some } from \"./Option.js\";\nimport { List } from \"./Types.js\";\nimport { transpose as transpose$$1, pairwise as pairwise$$1, collect as collect$$1, scanBack as scanBack$$1, scan as scan$$1, foldBack2 as foldBack2$$1, fold2 as fold2$$1, fold as fold$$1, map as map$$1 } from \"./Seq.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet, count } from \"./Util.js\";\nimport { ofList } from \"./Array.js\";\nimport { splitInto as splitInto$$1, chunkBySize as chunkBySize$$1, permute as permute$$1, findIndexBack as findIndexBack$$1, tryFindIndexBack as tryFindIndexBack$$1 } from \"./Array\";\nimport { createMutable } from \"./Set.js\";\nimport { createMutable as createMutable$$1 } from \"./Map.js\";\nexport function head(_arg1) {\n  if (_arg1.tail != null) {\n    return _arg1.head;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function tryHead(_arg1$$1) {\n  if (_arg1$$1.tail != null) {\n    return some(_arg1$$1.head);\n  } else {\n    return undefined;\n  }\n}\nexport function tail(_arg1$$2) {\n  if (_arg1$$2.tail != null) {\n    return _arg1$$2.tail;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function last($_arg1$$3$$5) {\n  last: while (true) {\n    const _arg1$$3 = $_arg1$$3$$5;\n\n    if (_arg1$$3.tail != null) {\n      if (_arg1$$3.tail.tail == null) {\n        return _arg1$$3.head;\n      } else {\n        $_arg1$$3$$5 = _arg1$$3.tail;\n        continue last;\n      }\n    } else {\n      throw new Error(\"List was empty\");\n    }\n\n    break;\n  }\n}\nexport function tryLast($_arg1$$4$$6) {\n  tryLast: while (true) {\n    const _arg1$$4 = $_arg1$$4$$6;\n\n    if (_arg1$$4.tail != null) {\n      if (_arg1$$4.tail.tail == null) {\n        return some(_arg1$$4.head);\n      } else {\n        $_arg1$$4$$6 = _arg1$$4.tail;\n        continue tryLast;\n      }\n    } else {\n      return undefined;\n    }\n\n    break;\n  }\n}\nexport function compareWith(comparer, xs$$3, ys) {\n  if (xs$$3 === ys) {\n    return 0;\n  } else {\n    const loop = function loop($xs$$4$$10, $ys$$1$$11) {\n      loop: while (true) {\n        const xs$$4 = $xs$$4$$10,\n              ys$$1 = $ys$$1$$11;\n\n        if (xs$$4.tail != null) {\n          if (ys$$1.tail != null) {\n            const matchValue$$1 = comparer(xs$$4.head, ys$$1.head) | 0;\n\n            if (matchValue$$1 === 0) {\n              $xs$$4$$10 = xs$$4.tail;\n              $ys$$1$$11 = ys$$1.tail;\n              continue loop;\n            } else {\n              return matchValue$$1 | 0;\n            }\n          } else {\n            return 1;\n          }\n        } else if (ys$$1.tail == null) {\n          return 0;\n        } else {\n          return -1 | 0;\n        }\n\n        break;\n      }\n    };\n\n    return loop(xs$$3, ys) | 0;\n  }\n}\nexport function foldIndexedAux($f$$12, $i$$13, $acc$$14, $_arg1$$5$$15) {\n  foldIndexedAux: while (true) {\n    const f = $f$$12,\n          i = $i$$13,\n          acc = $acc$$14,\n          _arg1$$5 = $_arg1$$5$$15;\n\n    if (_arg1$$5.tail != null) {\n      $f$$12 = f;\n      $i$$13 = i + 1;\n      $acc$$14 = f(i, acc, _arg1$$5.head);\n      $_arg1$$5$$15 = _arg1$$5.tail;\n      continue foldIndexedAux;\n    } else {\n      return acc;\n    }\n\n    break;\n  }\n}\nexport function foldIndexed(f$$1, state, xs$$7) {\n  return foldIndexedAux(f$$1, 0, state, xs$$7);\n}\nexport function fold($f$$2$$19, $state$$1$$20, $xs$$8$$21) {\n  fold: while (true) {\n    const f$$2 = $f$$2$$19,\n          state$$1 = $state$$1$$20,\n          xs$$8 = $xs$$8$$21;\n\n    if (xs$$8.tail != null) {\n      $f$$2$$19 = f$$2;\n      $state$$1$$20 = f$$2(state$$1, xs$$8.head);\n      $xs$$8$$21 = xs$$8.tail;\n      continue fold;\n    } else {\n      return state$$1;\n    }\n\n    break;\n  }\n}\nexport function reverse(xs$$9) {\n  return fold(function (acc$$1, x$$6) {\n    return new List(x$$6, acc$$1);\n  }, new List(), xs$$9);\n}\nexport function foldBack(f$$3, xs$$10, state$$2) {\n  return fold(function (acc$$2, x$$7) {\n    return f$$3(x$$7, acc$$2);\n  }, state$$2, reverse(xs$$10));\n}\nexport function toSeq(xs$$11) {\n  return map$$1(function (x$$8) {\n    return x$$8;\n  }, xs$$11);\n}\nexport function ofSeq(xs$$12) {\n  const xs$$13 = fold$$1(function (acc$$3, x$$9) {\n    return new List(x$$9, acc$$3);\n  }, new List(), xs$$12);\n  return reverse(xs$$13);\n}\nexport function concat(lists) {\n  const xs$$15 = fold$$1(function (state$$3, xs$$14) {\n    return fold(function f$$4(acc$$4, x$$10) {\n      return new List(x$$10, acc$$4);\n    }, state$$3, xs$$14);\n  }, new List(), lists);\n  return reverse(xs$$15);\n}\nexport function foldIndexed2Aux($f$$5$$31, $i$$1$$32, $acc$$5$$33, $bs$$34, $cs$$35) {\n  foldIndexed2Aux: while (true) {\n    const f$$5 = $f$$5$$31,\n          i$$1 = $i$$1$$32,\n          acc$$5 = $acc$$5$$33,\n          bs = $bs$$34,\n          cs = $cs$$35;\n    var $target$$36, x$$11, xs$$16, y$$1, ys$$3;\n\n    if (bs.tail != null) {\n      if (cs.tail != null) {\n        $target$$36 = 1;\n        x$$11 = bs.head;\n        xs$$16 = bs.tail;\n        y$$1 = cs.head;\n        ys$$3 = cs.tail;\n      } else {\n        $target$$36 = 2;\n      }\n    } else if (cs.tail == null) {\n      $target$$36 = 0;\n    } else {\n      $target$$36 = 2;\n    }\n\n    switch ($target$$36) {\n      case 0:\n        {\n          return acc$$5;\n        }\n\n      case 1:\n        {\n          $f$$5$$31 = f$$5;\n          $i$$1$$32 = i$$1 + 1;\n          $acc$$5$$33 = f$$5(i$$1, acc$$5, x$$11, y$$1);\n          $bs$$34 = xs$$16;\n          $cs$$35 = ys$$3;\n          continue foldIndexed2Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed2(f$$6, state$$4, xs$$17, ys$$4) {\n  return foldIndexed2Aux(f$$6, 0, state$$4, xs$$17, ys$$4);\n}\nexport function fold2(f$$7, state$$5, xs$$18, ys$$5) {\n  return fold2$$1(f$$7, state$$5, xs$$18, ys$$5);\n}\nexport function foldBack2(f$$8, xs$$19, ys$$6, state$$6) {\n  return foldBack2$$1(f$$8, xs$$19, ys$$6, state$$6);\n}\nexport function unfold(f$$9, state$$7) {\n  const unfoldInner = function unfoldInner($acc$$6$$51, $state$$8$$52) {\n    unfoldInner: while (true) {\n      const acc$$6 = $acc$$6$$51,\n            state$$8 = $state$$8$$52;\n      const matchValue$$3 = f$$9(state$$8);\n\n      if (matchValue$$3 != null) {\n        const x$$12 = matchValue$$3[0];\n        const state$$9 = matchValue$$3[1];\n        $acc$$6$$51 = new List(x$$12, acc$$6);\n        $state$$8$$52 = state$$9;\n        continue unfoldInner;\n      } else {\n        return reverse(acc$$6);\n      }\n\n      break;\n    }\n  };\n\n  return unfoldInner(new List(), state$$7);\n}\nexport function foldIndexed3Aux($f$$10$$53, $i$$2$$54, $acc$$7$$55, $bs$$1$$56, $cs$$1$$57, $ds$$58) {\n  foldIndexed3Aux: while (true) {\n    const f$$10 = $f$$10$$53,\n          i$$2 = $i$$2$$54,\n          acc$$7 = $acc$$7$$55,\n          bs$$1 = $bs$$1$$56,\n          cs$$1 = $cs$$1$$57,\n          ds = $ds$$58;\n    var $target$$59, x$$13, xs$$20, y$$2, ys$$7, z, zs;\n\n    if (bs$$1.tail != null) {\n      if (cs$$1.tail != null) {\n        if (ds.tail != null) {\n          $target$$59 = 1;\n          x$$13 = bs$$1.head;\n          xs$$20 = bs$$1.tail;\n          y$$2 = cs$$1.head;\n          ys$$7 = cs$$1.tail;\n          z = ds.head;\n          zs = ds.tail;\n        } else {\n          $target$$59 = 2;\n        }\n      } else {\n        $target$$59 = 2;\n      }\n    } else if (cs$$1.tail == null) {\n      if (ds.tail == null) {\n        $target$$59 = 0;\n      } else {\n        $target$$59 = 2;\n      }\n    } else {\n      $target$$59 = 2;\n    }\n\n    switch ($target$$59) {\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      case 1:\n        {\n          $f$$10$$53 = f$$10;\n          $i$$2$$54 = i$$2 + 1;\n          $acc$$7$$55 = f$$10(i$$2, acc$$7, x$$13, y$$2, z);\n          $bs$$1$$56 = xs$$20;\n          $cs$$1$$57 = ys$$7;\n          $ds$$58 = zs;\n          continue foldIndexed3Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed3(f$$11, seed, xs$$21, ys$$8, zs$$1) {\n  return foldIndexed3Aux(f$$11, 0, seed, xs$$21, ys$$8, zs$$1);\n}\nexport function fold3(f$$12, state$$10, xs$$22, ys$$9, zs$$2) {\n  return foldIndexed3(function (_arg1$$6, acc$$8, x$$14, y$$3, z$$1) {\n    return f$$12(acc$$8, x$$14, y$$3, z$$1);\n  }, state$$10, xs$$22, ys$$9, zs$$2);\n}\nexport function scan(f$$13, state$$11, xs$$23) {\n  const xs$$24 = scan$$1(f$$13, state$$11, xs$$23);\n  return ofSeq(xs$$24);\n}\nexport function scanBack(f$$14, xs$$25, state$$12) {\n  const xs$$26 = scanBack$$1(f$$14, xs$$25, state$$12);\n  return ofSeq(xs$$26);\n}\nexport function length(xs$$27) {\n  return fold(function (acc$$9, _arg1$$7) {\n    return acc$$9 + 1;\n  }, 0, xs$$27);\n}\nexport function append(xs$$28, ys$$10) {\n  return fold(function (acc$$10, x$$15) {\n    return new List(x$$15, acc$$10);\n  }, ys$$10, reverse(xs$$28));\n}\nexport function collect(f$$15, xs$$29) {\n  const xs$$30 = collect$$1(f$$15, xs$$29);\n  return ofSeq(xs$$30);\n}\nexport function map(f$$16, xs$$31) {\n  const xs$$32 = fold(function (acc$$11, x$$16) {\n    return new List(f$$16(x$$16), acc$$11);\n  }, new List(), xs$$31);\n  return reverse(xs$$32);\n}\nexport function mapIndexed(f$$17, xs$$33) {\n  const xs$$34 = foldIndexed(function (i$$3, acc$$12, x$$17) {\n    return new List(f$$17(i$$3, x$$17), acc$$12);\n  }, new List(), xs$$33);\n  return reverse(xs$$34);\n}\nexport function indexed(xs$$35) {\n  return mapIndexed(function (i$$4, x$$18) {\n    return [i$$4, x$$18];\n  }, xs$$35);\n}\nexport function map2(f$$18, xs$$36, ys$$11) {\n  const xs$$37 = fold2(function (acc$$13, x$$19, y$$4) {\n    return new List(f$$18(x$$19, y$$4), acc$$13);\n  }, new List(), xs$$36, ys$$11);\n  return reverse(xs$$37);\n}\nexport function mapIndexed2(f$$19, xs$$38, ys$$12) {\n  const xs$$39 = foldIndexed2(function (i$$5, acc$$14, x$$20, y$$5) {\n    return new List(f$$19(i$$5, x$$20, y$$5), acc$$14);\n  }, new List(), xs$$38, ys$$12);\n  return reverse(xs$$39);\n}\nexport function map3(f$$20, xs$$40, ys$$13, zs$$3) {\n  const xs$$41 = fold3(function (acc$$15, x$$21, y$$6, z$$2) {\n    return new List(f$$20(x$$21, y$$6, z$$2), acc$$15);\n  }, new List(), xs$$40, ys$$13, zs$$3);\n  return reverse(xs$$41);\n}\nexport function mapIndexed3(f$$21, xs$$42, ys$$14, zs$$4) {\n  const xs$$43 = foldIndexed3(function (i$$6, acc$$16, x$$22, y$$7, z$$3) {\n    return new List(f$$21(i$$6, x$$22, y$$7, z$$3), acc$$16);\n  }, new List(), xs$$42, ys$$14, zs$$4);\n  return reverse(xs$$43);\n}\nexport function mapFold(f$$22, s, xs$$44) {\n  const patternInput$$1 = fold(function foldFn(tupledArg, x$$23) {\n    const patternInput = f$$22(tupledArg[1], x$$23);\n    return [new List(patternInput[0], tupledArg[0]), patternInput[1]];\n  }, [new List(), s], xs$$44);\n  return [reverse(patternInput$$1[0]), patternInput$$1[1]];\n}\nexport function mapFoldBack(f$$23, xs$$45, s$$2) {\n  return mapFold(function (s$$3, v) {\n    return f$$23(v, s$$3);\n  }, s$$2, reverse(xs$$45));\n}\nexport function iterate(f$$24, xs$$46) {\n  fold(function (unitVar0, x$$24) {\n    f$$24(x$$24);\n  }, void null, xs$$46);\n}\nexport function iterate2(f$$25, xs$$47, ys$$15) {\n  fold2(function (unitVar0$$1, x$$25, y$$8) {\n    f$$25(x$$25, y$$8);\n  }, void null, xs$$47, ys$$15);\n}\nexport function iterateIndexed(f$$26, xs$$48) {\n  foldIndexed(function (i$$7, unitVar1, x$$26) {\n    f$$26(i$$7, x$$26);\n  }, void null, xs$$48);\n}\nexport function iterateIndexed2(f$$27, xs$$49, ys$$16) {\n  foldIndexed2(function (i$$8, unitVar1$$1, x$$27, y$$9) {\n    f$$27(i$$8, x$$27, y$$9);\n  }, void null, xs$$49, ys$$16);\n}\nexport function ofArray(xs$$50) {\n  let res$$1 = new List();\n\n  for (let i$$9 = count(xs$$50) - 1; i$$9 >= 0; i$$9--) {\n    res$$1 = new List(xs$$50[i$$9], res$$1);\n  }\n\n  return res$$1;\n}\nexport function empty() {\n  return new List();\n}\nexport function isEmpty(_arg1$$8) {\n  if (_arg1$$8.tail == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function tryPickIndexedAux($f$$28$$120, $i$$10$$121, $_arg1$$9$$122) {\n  tryPickIndexedAux: while (true) {\n    const f$$28 = $f$$28$$120,\n          i$$10 = $i$$10$$121,\n          _arg1$$9 = $_arg1$$9$$122;\n\n    if (_arg1$$9.tail != null) {\n      const result = f$$28(i$$10, _arg1$$9.head);\n\n      if (result == null) {\n        $f$$28$$120 = f$$28;\n        $i$$10$$121 = i$$10 + 1;\n        $_arg1$$9$$122 = _arg1$$9.tail;\n        continue tryPickIndexedAux;\n      } else {\n        return result;\n      }\n    } else {\n      return undefined;\n    }\n\n    break;\n  }\n}\nexport function tryPickIndexed(f$$29, xs$$52) {\n  return tryPickIndexedAux(f$$29, 0, xs$$52);\n}\nexport function tryPick(f$$30, xs$$53) {\n  return tryPickIndexed(function (_arg1$$10, x$$29) {\n    return f$$30(x$$29);\n  }, xs$$53);\n}\nexport function pick(f$$31, xs$$54) {\n  const matchValue$$5 = tryPick(f$$31, xs$$54);\n\n  if (matchValue$$5 != null) {\n    const x$$30 = value$$1(matchValue$$5);\n    return x$$30;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function tryFindIndexed(f$$32, xs$$55) {\n  return tryPickIndexed(function (i$$11, x$$31) {\n    return f$$32(i$$11, x$$31) ? some(x$$31) : undefined;\n  }, xs$$55);\n}\nexport function tryFind(f$$33, xs$$56) {\n  return tryPickIndexed(function (_arg1$$11, x$$32) {\n    return f$$33(x$$32) ? some(x$$32) : undefined;\n  }, xs$$56);\n}\nexport function findIndexed(f$$34, xs$$57) {\n  const matchValue$$6 = tryFindIndexed(f$$34, xs$$57);\n\n  if (matchValue$$6 != null) {\n    const x$$33 = value$$1(matchValue$$6);\n    return x$$33;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function find(f$$35, xs$$58) {\n  return findIndexed(function (_arg1$$12, x$$34) {\n    return f$$35(x$$34);\n  }, xs$$58);\n}\nexport function findBack(f$$36, xs$$59) {\n  let xs$$61;\n  xs$$61 = reverse(xs$$59);\n  return find(f$$36, xs$$61);\n}\nexport function tryFindBack(f$$37, xs$$62) {\n  let xs$$64;\n  xs$$64 = reverse(xs$$62);\n  return tryFind(f$$37, xs$$64);\n}\nexport function tryFindIndex(f$$38, xs$$65) {\n  return tryPickIndexed(function (i$$12, x$$35) {\n    return f$$38(x$$35) ? i$$12 : undefined;\n  }, xs$$65);\n}\nexport function tryFindIndexBack(f$$39, xs$$66) {\n  const array = ofList(xs$$66, Array);\n  return tryFindIndexBack$$1(f$$39, array);\n}\nexport function findIndex(f$$40, xs$$67) {\n  const matchValue$$7 = tryFindIndex(f$$40, xs$$67);\n\n  if (matchValue$$7 != null) {\n    const x$$36 = matchValue$$7 | 0;\n    return x$$36 | 0;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function findIndexBack(f$$41, xs$$68) {\n  const array$$1 = ofList(xs$$68, Array);\n  return findIndexBack$$1(f$$41, array$$1) | 0;\n}\nexport function item(n, xs$$69) {\n  return findIndexed(function (i$$13, _arg1$$13) {\n    return n === i$$13;\n  }, xs$$69);\n}\nexport function tryItem(n$$1, xs$$70) {\n  return tryFindIndexed(function (i$$14, _arg1$$14) {\n    return n$$1 === i$$14;\n  }, xs$$70);\n}\nexport function filter(f$$42, xs$$71) {\n  const xs$$72 = fold(function (acc$$17, x$$37) {\n    return f$$42(x$$37) ? new List(x$$37, acc$$17) : acc$$17;\n  }, new List(), xs$$71);\n  return reverse(xs$$72);\n}\nexport function partition(f$$43, xs$$73) {\n  return fold(function (tupledArg$$1, x$$38) {\n    return f$$43(x$$38) ? [new List(x$$38, tupledArg$$1[0]), tupledArg$$1[1]] : [tupledArg$$1[0], new List(x$$38, tupledArg$$1[1])];\n  }, [new List(), new List()], reverse(xs$$73));\n}\nexport function choose(f$$44, xs$$74) {\n  const xs$$75 = fold(function (acc$$18, x$$39) {\n    const matchValue$$8 = f$$44(x$$39);\n\n    if (matchValue$$8 == null) {\n      return acc$$18;\n    } else {\n      const y$$10 = value$$1(matchValue$$8);\n      return new List(y$$10, acc$$18);\n    }\n  }, new List(), xs$$74);\n  return reverse(xs$$75);\n}\nexport function contains(value, list, eq) {\n  const loop$$1 = function loop$$1($xs$$76$$162) {\n    loop$$1: while (true) {\n      const xs$$76 = $xs$$76$$162;\n\n      if (xs$$76.tail != null) {\n        if (eq.Equals(value, xs$$76.head)) {\n          return true;\n        } else {\n          $xs$$76$$162 = xs$$76.tail;\n          continue loop$$1;\n        }\n      } else {\n        return false;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(list);\n}\nexport function except(itemsToExclude, array$$2, eq$$1) {\n  if (isEmpty(array$$2)) {\n    return array$$2;\n  } else {\n    const cached = createMutable(itemsToExclude, eq$$1);\n    return filter(function f$$45(arg00) {\n      return addToSet(arg00, cached);\n    }, array$$2);\n  }\n}\nexport function initialize(n$$2, f$$46) {\n  let xs$$78 = new List();\n\n  for (let i$$15 = 0; i$$15 <= n$$2 - 1; i$$15++) {\n    xs$$78 = new List(f$$46(i$$15), xs$$78);\n  }\n\n  return reverse(xs$$78);\n}\nexport function replicate(n$$3, x$$40) {\n  return initialize(n$$3, function (_arg1$$15) {\n    return x$$40;\n  });\n}\nexport function reduce(f$$47, _arg1$$16) {\n  if (_arg1$$16.tail != null) {\n    return fold(f$$47, _arg1$$16.head, _arg1$$16.tail);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function reduceBack(f$$48, _arg1$$17) {\n  if (_arg1$$17.tail != null) {\n    return foldBack(f$$48, _arg1$$17.tail, _arg1$$17.head);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function forAll(f$$49, xs$$79) {\n  return fold(function (acc$$19, x$$41) {\n    return acc$$19 ? f$$49(x$$41) : false;\n  }, true, xs$$79);\n}\nexport function forAll2(f$$50, xs$$80, ys$$17) {\n  return fold2(function (acc$$20, x$$42, y$$11) {\n    return acc$$20 ? f$$50(x$$42, y$$11) : false;\n  }, true, xs$$80, ys$$17);\n}\nexport function exists($f$$51$$180, $_arg1$$18$$181) {\n  exists: while (true) {\n    const f$$51 = $f$$51$$180,\n          _arg1$$18 = $_arg1$$18$$181;\n\n    if (_arg1$$18.tail != null) {\n      if (f$$51(_arg1$$18.head)) {\n        return true;\n      } else {\n        $f$$51$$180 = f$$51;\n        $_arg1$$18$$181 = _arg1$$18.tail;\n        continue exists;\n      }\n    } else {\n      return false;\n    }\n\n    break;\n  }\n}\nexport function exists2($f$$52$$182, $bs$$2$$183, $cs$$2$$184) {\n  exists2: while (true) {\n    const f$$52 = $f$$52$$182,\n          bs$$2 = $bs$$2$$183,\n          cs$$2 = $cs$$2$$184;\n    var $target$$185, x$$44, xs$$82, y$$12, ys$$18;\n\n    if (bs$$2.tail != null) {\n      if (cs$$2.tail != null) {\n        $target$$185 = 1;\n        x$$44 = bs$$2.head;\n        xs$$82 = bs$$2.tail;\n        y$$12 = cs$$2.head;\n        ys$$18 = cs$$2.tail;\n      } else {\n        $target$$185 = 2;\n      }\n    } else if (cs$$2.tail == null) {\n      $target$$185 = 0;\n    } else {\n      $target$$185 = 2;\n    }\n\n    switch ($target$$185) {\n      case 0:\n        {\n          return false;\n        }\n\n      case 1:\n        {\n          if (f$$52(x$$44, y$$12)) {\n            return true;\n          } else {\n            $f$$52$$182 = f$$52;\n            $bs$$2$$183 = xs$$82;\n            $cs$$2$$184 = ys$$18;\n            continue exists2;\n          }\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function unzip(xs$$83) {\n  return foldBack(function (tupledArg$$2, tupledArg$$3) {\n    return [new List(tupledArg$$2[0], tupledArg$$3[0]), new List(tupledArg$$2[1], tupledArg$$3[1])];\n  }, xs$$83, [new List(), new List()]);\n}\nexport function unzip3(xs$$84) {\n  return foldBack(function (tupledArg$$4, tupledArg$$5) {\n    return [new List(tupledArg$$4[0], tupledArg$$5[0]), new List(tupledArg$$4[1], tupledArg$$5[1]), new List(tupledArg$$4[2], tupledArg$$5[2])];\n  }, xs$$84, [new List(), new List(), new List()]);\n}\nexport function zip(xs$$85, ys$$19) {\n  return map2(function (x$$47, y$$15) {\n    return [x$$47, y$$15];\n  }, xs$$85, ys$$19);\n}\nexport function zip3(xs$$86, ys$$20, zs$$5) {\n  return map3(function (x$$48, y$$16, z$$5) {\n    return [x$$48, y$$16, z$$5];\n  }, xs$$86, ys$$20, zs$$5);\n}\nexport function sort(xs$$87, comparer$$1) {\n  let xs$$89;\n  const xs$$88 = ofList(xs$$87, Array);\n  xs$$88.sort(function comparer$$2(x$$49, y$$17) {\n    return comparer$$1.Compare(x$$49, y$$17);\n  });\n  xs$$89 = xs$$88;\n  return ofArray(xs$$89);\n}\nexport function sortBy(projection, xs$$90, comparer$$3) {\n  let xs$$92;\n  const xs$$91 = ofList(xs$$90, Array);\n  xs$$91.sort(function comparer$$4(x$$50, y$$18) {\n    return comparer$$3.Compare(projection(x$$50), projection(y$$18));\n  });\n  xs$$92 = xs$$91;\n  return ofArray(xs$$92);\n}\nexport function sortDescending(xs$$93, comparer$$5) {\n  let xs$$95;\n  const xs$$94 = ofList(xs$$93, Array);\n  xs$$94.sort(function comparer$$6(x$$51, y$$19) {\n    return comparer$$5.Compare(x$$51, y$$19) * -1;\n  });\n  xs$$95 = xs$$94;\n  return ofArray(xs$$95);\n}\nexport function sortByDescending(projection$$1, xs$$96, comparer$$7) {\n  let xs$$98;\n  const xs$$97 = ofList(xs$$96, Array);\n  xs$$97.sort(function comparer$$8(x$$52, y$$20) {\n    return comparer$$7.Compare(projection$$1(x$$52), projection$$1(y$$20)) * -1;\n  });\n  xs$$98 = xs$$97;\n  return ofArray(xs$$98);\n}\nexport function sortWith(comparer$$9, xs$$99) {\n  let xs$$101;\n  const xs$$100 = ofList(xs$$99, Array);\n  xs$$100.sort(comparer$$9);\n  xs$$101 = xs$$100;\n  return ofArray(xs$$101);\n}\nexport function sum(xs$$102, adder) {\n  return fold(function (acc$$21, x$$53) {\n    return adder.Add(acc$$21, x$$53);\n  }, adder.GetZero(), xs$$102);\n}\nexport function sumBy(f$$53, xs$$103, adder$$1) {\n  return fold(function (acc$$22, x$$54) {\n    return adder$$1.Add(acc$$22, f$$53(x$$54));\n  }, adder$$1.GetZero(), xs$$103);\n}\nexport function maxBy(projection$$2, xs$$104, comparer$$11) {\n  return reduce(function (x$$55, y$$21) {\n    return comparer$$11.Compare(projection$$2(y$$21), projection$$2(x$$55)) > 0 ? y$$21 : x$$55;\n  }, xs$$104);\n}\nexport function max(li, comparer$$12) {\n  return reduce(function (x$$56, y$$22) {\n    return comparer$$12.Compare(y$$22, x$$56) > 0 ? y$$22 : x$$56;\n  }, li);\n}\nexport function minBy(projection$$3, xs$$105, comparer$$13) {\n  return reduce(function (x$$57, y$$23) {\n    return comparer$$13.Compare(projection$$3(y$$23), projection$$3(x$$57)) > 0 ? x$$57 : y$$23;\n  }, xs$$105);\n}\nexport function min(xs$$106, comparer$$14) {\n  return reduce(function (x$$58, y$$24) {\n    return comparer$$14.Compare(y$$24, x$$58) > 0 ? x$$58 : y$$24;\n  }, xs$$106);\n}\nexport function average(xs$$107, averager) {\n  const total = fold(function (acc$$23, x$$59) {\n    return averager.Add(acc$$23, x$$59);\n  }, averager.GetZero(), xs$$107);\n  return averager.DivideByInt(total, length(xs$$107));\n}\nexport function averageBy(f$$54, xs$$108, averager$$1) {\n  const total$$1 = fold(function (acc$$24, x$$60) {\n    return averager$$1.Add(acc$$24, f$$54(x$$60));\n  }, averager$$1.GetZero(), xs$$108);\n  return averager$$1.DivideByInt(total$$1, length(xs$$108));\n}\nexport function permute(f$$55, xs$$109) {\n  let xs$$110;\n  let array$$3;\n  array$$3 = ofList(xs$$109, Array);\n  xs$$110 = permute$$1(f$$55, array$$3);\n  return ofArray(xs$$110);\n}\nexport function chunkBySize(chunkSize, xs$$111) {\n  let xs$$114;\n  let xs$$112;\n  let array$$4;\n  array$$4 = ofList(xs$$111, Array);\n  xs$$112 = chunkBySize$$1(chunkSize, array$$4);\n  xs$$114 = ofArray(xs$$112);\n  return map(function f$$56(xs$$113) {\n    return ofArray(xs$$113);\n  }, xs$$114);\n}\nexport function skip(i$$16, xs$$115) {\n  const skipInner = function skipInner($i$$17$$240, $xs$$116$$241) {\n    skipInner: while (true) {\n      const i$$17 = $i$$17$$240,\n            xs$$116 = $xs$$116$$241;\n\n      if (i$$17 === 0) {\n        return xs$$116;\n      } else if (xs$$116.tail != null) {\n        $i$$17$$240 = i$$17 - 1;\n        $xs$$116$$241 = xs$$116.tail;\n        continue skipInner;\n      } else {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      }\n\n      break;\n    }\n  };\n\n  if (i$$16 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$242, i$$20, xs$$119;\n\n    if (i$$16 === 0) {\n      $target$$242 = 0;\n    } else if (i$$16 === 1) {\n      if (xs$$115.tail != null) {\n        $target$$242 = 1;\n      } else {\n        $target$$242 = 2;\n        i$$20 = i$$16;\n        xs$$119 = xs$$115;\n      }\n    } else {\n      $target$$242 = 2;\n      i$$20 = i$$16;\n      xs$$119 = xs$$115;\n    }\n\n    switch ($target$$242) {\n      case 0:\n        {\n          return xs$$115;\n        }\n\n      case 1:\n        {\n          return xs$$115.tail;\n        }\n\n      case 2:\n        {\n          return skipInner(i$$20, xs$$119);\n        }\n    }\n  }\n}\nexport function skipWhile($predicate$$243, $xs$$120$$244) {\n  skipWhile: while (true) {\n    const predicate = $predicate$$243,\n          xs$$120 = $xs$$120$$244;\n    var $target$$245, h$$4, t$$4;\n\n    if (xs$$120.tail != null) {\n      if (predicate(xs$$120.head)) {\n        $target$$245 = 0;\n        h$$4 = xs$$120.head;\n        t$$4 = xs$$120.tail;\n      } else {\n        $target$$245 = 1;\n      }\n    } else {\n      $target$$245 = 1;\n    }\n\n    switch ($target$$245) {\n      case 0:\n        {\n          $predicate$$243 = predicate;\n          $xs$$120$$244 = t$$4;\n          continue skipWhile;\n        }\n\n      case 1:\n        {\n          return xs$$120;\n        }\n    }\n\n    break;\n  }\n}\nexport function takeSplitAux($error$$246, $i$$21$$247, $acc$$25$$248, $xs$$121$$249) {\n  takeSplitAux: while (true) {\n    const error = $error$$246,\n          i$$21 = $i$$21$$247,\n          acc$$25 = $acc$$25$$248,\n          xs$$121 = $xs$$121$$249;\n\n    if (i$$21 === 0) {\n      return [reverse(acc$$25), xs$$121];\n    } else if (xs$$121.tail != null) {\n      $error$$246 = error;\n      $i$$21$$247 = i$$21 - 1;\n      $acc$$25$$248 = new List(xs$$121.head, acc$$25);\n      $xs$$121$$249 = xs$$121.tail;\n      continue takeSplitAux;\n    } else {\n      if (error) {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      } else {\n        return [reverse(acc$$25), xs$$121];\n      }\n    }\n\n    break;\n  }\n}\nexport function take(i$$22, xs$$123) {\n  if (i$$22 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$252, i$$25, xs$$124;\n\n    if (i$$22 === 0) {\n      $target$$252 = 0;\n    } else if (i$$22 === 1) {\n      if (xs$$123.tail != null) {\n        $target$$252 = 1;\n      } else {\n        $target$$252 = 2;\n        i$$25 = i$$22;\n        xs$$124 = xs$$123;\n      }\n    } else {\n      $target$$252 = 2;\n      i$$25 = i$$22;\n      xs$$124 = xs$$123;\n    }\n\n    switch ($target$$252) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$123.head, new List());\n        }\n\n      case 2:\n        {\n          const tuple = takeSplitAux(true, i$$25, new List(), xs$$124);\n          return tuple[0];\n        }\n    }\n  }\n}\nexport function takeWhile(predicate$$1, xs$$125) {\n  if (xs$$125.tail != null) {\n    if (xs$$125.tail.tail == null) {\n      if (predicate$$1(xs$$125.head)) {\n        return xs$$125;\n      } else {\n        return xs$$125.tail;\n      }\n    } else {\n      if (!predicate$$1(xs$$125.head)) {\n        return new List();\n      } else {\n        return new List(xs$$125.head, takeWhile(predicate$$1, xs$$125.tail));\n      }\n    }\n  } else {\n    return xs$$125;\n  }\n}\nexport function truncate(i$$26, xs$$127) {\n  if (i$$26 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$257, i$$29, xs$$128;\n\n    if (i$$26 === 0) {\n      $target$$257 = 0;\n    } else if (i$$26 === 1) {\n      if (xs$$127.tail != null) {\n        $target$$257 = 1;\n      } else {\n        $target$$257 = 2;\n        i$$29 = i$$26;\n        xs$$128 = xs$$127;\n      }\n    } else {\n      $target$$257 = 2;\n      i$$29 = i$$26;\n      xs$$128 = xs$$127;\n    }\n\n    switch ($target$$257) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$127.head, new List());\n        }\n\n      case 2:\n        {\n          const tuple$$1 = takeSplitAux(false, i$$29, new List(), xs$$128);\n          return tuple$$1[0];\n        }\n    }\n  }\n}\nexport function splitAt(i$$30, xs$$129) {\n  if (i$$30 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$260, i$$33, xs$$131;\n\n    if (i$$30 === 0) {\n      $target$$260 = 0;\n    } else if (i$$30 === 1) {\n      if (xs$$129.tail != null) {\n        $target$$260 = 1;\n      } else {\n        $target$$260 = 2;\n        i$$33 = i$$30;\n        xs$$131 = xs$$129;\n      }\n    } else {\n      $target$$260 = 2;\n      i$$33 = i$$30;\n      xs$$131 = xs$$129;\n    }\n\n    switch ($target$$260) {\n      case 0:\n        {\n          return [new List(), xs$$129];\n        }\n\n      case 1:\n        {\n          return [new List(xs$$129.head, new List()), xs$$129.tail];\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$33, new List(), xs$$131);\n        }\n    }\n  }\n}\nexport function outOfRange() {\n  throw new Error(\"Index out of range\");\n}\nexport function slice(lower, upper, xs$$132) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const hasUpper = upper != null;\n\n  if (lower$$1 < 0) {\n    return outOfRange();\n  } else if (hasUpper ? upper < lower$$1 : false) {\n    return new List();\n  } else {\n    let lastIndex = -1 | 0;\n    let res$$2;\n    const state$$13 = new List();\n    res$$2 = foldIndexed(function f$$57(i$$34, acc$$26, x$$67) {\n      lastIndex = i$$34;\n\n      if (lower$$1 <= i$$34 ? !hasUpper ? true : i$$34 <= upper : false) {\n        return new List(x$$67, acc$$26);\n      } else {\n        return acc$$26;\n      }\n    }, state$$13, xs$$132);\n\n    if (lower$$1 > lastIndex + 1 ? true : hasUpper ? upper > lastIndex : false) {\n      outOfRange();\n    } else {\n      void null;\n    }\n\n    return reverse(res$$2);\n  }\n}\nexport function distinctBy(projection$$4, xs$$134, eq$$2) {\n  const hashSet = createMutable([], eq$$2);\n  return filter(function f$$58($arg$$1) {\n    const arg00$$1 = projection$$4($arg$$1);\n    return addToSet(arg00$$1, hashSet);\n  }, xs$$134);\n}\nexport function distinct(xs$$136, eq$$3) {\n  return distinctBy(function (x$$68) {\n    return x$$68;\n  }, xs$$136, eq$$3);\n}\nexport function exactlyOne(xs$$137) {\n  if (xs$$137.tail != null) {\n    if (xs$$137.tail.tail != null) {\n      throw new Error(\"Input list too long\\\\nParameter name: list\");\n    } else {\n      return xs$$137.head;\n    }\n  } else {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: list\");\n  }\n}\nexport function groupBy(projection$$5, xs$$139, eq$$4) {\n  const dict = createMutable$$1([], eq$$4);\n  let keys = new List();\n  iterate(function f$$59(v$$2) {\n    const key = projection$$5(v$$2);\n    const matchValue$$16 = tryGetValue(dict, key, null);\n\n    if (matchValue$$16[0]) {\n      dict.set(key, new List(v$$2, matchValue$$16[1]));\n    } else {\n      addToDict(dict, key, new List(v$$2, new List()));\n      keys = new List(key, keys);\n    }\n  }, xs$$139);\n  let result$$1 = new List();\n  const xs$$141 = keys;\n  iterate(function f$$60(key$$1) {\n    result$$1 = new List([key$$1, reverse(getItemFromDict(dict, key$$1))], result$$1);\n  }, xs$$141);\n  return result$$1;\n}\nexport function countBy(projection$$6, xs$$142, eq$$5) {\n  const dict$$1 = createMutable$$1([], eq$$5);\n  let keys$$1 = new List();\n  iterate(function f$$61(v$$3) {\n    const key$$2 = projection$$6(v$$3);\n    const matchValue$$17 = tryGetValue(dict$$1, key$$2, 0);\n\n    if (matchValue$$17[0]) {\n      dict$$1.set(key$$2, matchValue$$17[1] + 1);\n    } else {\n      dict$$1.set(key$$2, 1);\n      keys$$1 = new List(key$$2, keys$$1);\n    }\n  }, xs$$142);\n  let result$$2 = new List();\n  const xs$$144 = keys$$1;\n  iterate(function f$$62(key$$3) {\n    result$$2 = new List([key$$3, getItemFromDict(dict$$1, key$$3)], result$$2);\n  }, xs$$144);\n  return result$$2;\n}\nexport function where(predicate$$2, source) {\n  return filter(predicate$$2, source);\n}\nexport function pairwise(source$$1) {\n  const xs$$145 = pairwise$$1(source$$1);\n  return ofSeq(xs$$145);\n}\nexport function windowed(windowSize, source$$2) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  } else {\n    void null;\n  }\n\n  let res$$3 = new List();\n\n  for (let i$$35 = length(source$$2); i$$35 >= windowSize; i$$35--) {\n    res$$3 = new List(slice(i$$35 - windowSize, i$$35 - 1, source$$2), res$$3);\n  }\n\n  return res$$3;\n}\nexport function splitInto(chunks, source$$3) {\n  let xs$$148;\n  let xs$$146;\n  let array$$5;\n  array$$5 = ofList(source$$3, Array);\n  xs$$146 = splitInto$$1(chunks, array$$5);\n  xs$$148 = ofArray(xs$$146);\n  return map(function f$$63(xs$$147) {\n    return ofArray(xs$$147);\n  }, xs$$148);\n}\nexport function transpose(lists$$1) {\n  let xs$$150;\n  let source$$5;\n  source$$5 = transpose$$1(lists$$1);\n  xs$$150 = map$$1(ofSeq, source$$5);\n  return ofSeq(xs$$150);\n}","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[0];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n//# sourceMappingURL=big.js.map","import Decimal from \"./lib/big\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str) {\n    try {\n        return [true, new Decimal(str.trim())];\n    }\n    catch (_a) {\n        return [false, get_Zero];\n    }\n}\nexport function parse(str) {\n    const [ok, value] = tryParse(str);\n    if (ok) {\n        return value;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return null;\n        }\n    };\n}\n//# sourceMappingURL=Decimal.js.map","namespace Fable.Parsimmon\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\ntype ParseResult<'t> =\r\n    abstract status : bool\r\n    abstract value : 't\r\n\r\ntype IParserOffSet =\r\n    abstract offset : int\r\n    abstract line : int\r\n    abstract column : int\r\n\r\ntype TokenPosition =\r\n    { offset: int\r\n      line: int\r\n      column: int }\r\n\r\ntype NodeResult<'t> =\r\n    { name: string\r\n      value: 't\r\n      start: TokenPosition\r\n      ``end``: TokenPosition }\r\n\r\ntype IParser<'t> =\r\n    abstract map<'u> : ('t -> 'u) -> IParser<'u>\r\n    abstract parse : string -> ParseResult<'t>\r\n    abstract times : int -> IParser<'t []>\r\n    abstract times : int * int -> IParser<'t []>\r\n    abstract many : unit -> IParser<'t []>\r\n    [<Emit(\"$0.then($1)\")>]\r\n    abstract chain : IParser<'u> -> IParser<'u>\r\n    [<Emit(\"$0.chain($1)\")>]\r\n    abstract bind : ('t -> IParser<'u>) -> IParser<'u>\r\n    abstract skip : IParser<'u> -> IParser<'t>\r\n    abstract sepBy : IParser<'u> -> IParser<'t []>\r\n    abstract fallback : 't -> IParser<'t>\r\n    abstract trim : IParser<'u> -> IParser<'t>\r\n    abstract notFollowedBy : IParser<'u> -> IParser<'t>\r\n    abstract atMost : int -> IParser<'t[]>\r\n    abstract atLeast : int -> IParser<'t[]>\r\n    [<Emit(\"$0.or($1)\")>]\r\n    abstract orTry : IParser<'t> -> IParser<'t>\r\n    abstract sepBy1 : IParser<'u> -> IParser<'t []>\r\n    [<Emit(\"$0.node($1)\")>]\r\n    abstract node : string -> IParser<NodeResult<'t>>\r\n\r\nmodule Parsimmon =\r\n    let parseRaw (input: string) (parser: IParser<'t>) =\r\n        parser.parse input\r\n\r\n    let parse (input: string) (parser: IParser<'t>) =\r\n        parser.parse input\r\n        |> fun result ->\r\n            match result.status with\r\n            | true -> Some result.value\r\n            | false -> None\r\n\r\n    /// A parser that consumes no input and yields an object an object representing the current offset into the parse: it has a 0-based character offset property and 1-based line and column properties\r\n    let index : IParser<IParserOffSet> =\r\n        import \"index\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a new parser which tries parser, and if it fails uses otherParser. Example:\r\n    let orTry (otherParser: IParser<'t>) (parser: IParser<'t>) : IParser<'t> =\r\n        parser.orTry(otherParser)\r\n\r\n    /// Returns a new parser that tries to parse the input exactly `n` times\r\n    let times<'t> (n: int) (parser : IParser<'t>) : IParser<'t[]> =\r\n        parser.times n\r\n\r\n    /// Expects parser at least n times. Yields an array of the results.\r\n    let atLeast (n: int) (parser: IParser<'t>) : IParser<'t[]> =\r\n        parser.atLeast n\r\n\r\n\r\n    /// Expects parser at most n times. Yields an array of the results.\r\n    let atMost (n: int) (parser: IParser<'t>) : IParser<'t[]> =\r\n        parser.atMost n\r\n\r\n    let skip (skipped: IParser<'u>) (keep: IParser<'t>) : IParser<'t> =\r\n        keep.skip skipped\r\n\r\n    let many (parser : IParser<'t>) : IParser<'t[]> =\r\n        parser.many()\r\n\r\n    /// Returns a parser that looks for a match to the regexp and yields the entire text matched. The regexp will always match starting at the current parse location.\r\n    [<Import(\"regexp\", \"./Parsimmon.js\"); Emit(\"$0(new RegExp($1))\")>]\r\n    let regex (pattern: string) : IParser<string> = jsNative\r\n    /// Returns a parser that looks for a match to the regexp and yields the entire text matched. The regexp will always match starting at the current parse location.\r\n    [<Import(\"regexp\", \"./Parsimmon.js\"); Emit(\"$0(new RegExp($1), $2)\")>]\r\n    let regexGroupNumber (pattern: string) (groupNumber: int): IParser<string> = jsNative\r\n    let ofLazy (f: unit -> IParser<'t>) : IParser<'t> =\r\n        import \"lazy\" \"./Parsimmon.js\"\r\n\r\n    /// This is the same as Parsimmon.sepBy, but matches the parser at least once.\r\n    let seperateByAtLeastOne (seperator : IParser<'u>) (parser: IParser<'t>) : IParser<'t[]> =\r\n        parser.sepBy1(seperator)\r\n\r\n    /// Expects parser \"after\" to follow parser \"before\", and yields the result of \"before\".\r\n    let chain  (after: IParser<'u>) (before: IParser<'t>) : IParser<'u> =\r\n        before.chain after\r\n\r\n    /// Returns a new parser which tries parser \"p\", and on success calls the function \"f\" with the result of the parse, which is expected to return another parser, which will be tried next. This allows you to dynamically decide how to continue the parse, which is impossible with the other combinators.\r\n    let bind (f: 't -> IParser<'u>) (p: IParser<'t>) : IParser<'u> =\r\n        p.bind f\r\n\r\n    /// A parser that consumes one letter\r\n    let letter : IParser<string> =\r\n        import \"letter\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that tries `parser` and succeeds if `parser` is able to parse between `min` and `max` times\r\n    let timesBetween (min: int) (max: int) (parser: IParser<'u>) =\r\n        parser.times(min, max)\r\n\r\n    /// A parser that consumes one or more letters\r\n    let letters : IParser<string[]> =\r\n        import \"letters\" \"./Parsimmon.js\"\r\n\r\n    /// A parser that expects to be at the end of the input (zero characters left).\r\n    let endOfFile : IParser<string> =\r\n        import \"eof\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that looks for anything but whatever \"p\" wants to parse, and does not consume it. Yields the same result as \"before\".\r\n    let notFollowedBy (p: IParser<'u>) (before: IParser<'t>) : IParser<'t> =\r\n        before.notFollowedBy p\r\n\r\n    /// Returns a parser that doesn't consume any input, and yields the given value\r\n    let succeed (value: 't) : IParser<'t> =\r\n        import \"succeed\" \"./Parsimmon.js\"\r\n\r\n    /// Parses using parser, but does not consume what it parses. Yields an empty string.\r\n    let lookahead (parser: IParser<'t>) : IParser<string> =\r\n        import \"lookahead\" \"./Parsimmon.js\"\r\n\r\n    // A parser that consumes one digit\r\n    let digit : IParser<string> =\r\n        import \"digit\" \"./Parsimmon.js\"\r\n\r\n    // A parser that consumes one or more digits\r\n    let digits : IParser<string[]> =\r\n        digit\r\n        |> many\r\n\r\n    /// Returns a new parser which tries \"parser\" and, if it fails, yields value without consuming any input.\r\n    let fallback (value: 't) (parser: IParser<'t>) : IParser<'t> =\r\n        parser.fallback value\r\n\r\n    let seperateBy (content: IParser<'u>) (others: IParser<'t>) : IParser<'t[]> =\r\n        others.sepBy(content)\r\n\r\n    let between (left: IParser<'t>) (right: IParser<'u>) (middle: IParser<'v>) =\r\n        left\r\n        |> chain middle\r\n        |> skip right\r\n\r\n    /// Transforms the parsed value of the given parser.\r\n    let map (f: 't -> 'u) (parser: IParser<'t>) = parser.map f\r\n\r\n    /// Alias of Parsimmon.concat\r\n    let tie (parser: IParser<string[]>) : IParser<string> =\r\n        map (String.concat \"\") parser\r\n\r\n    /// A parser that consumes and yields the next character of the input.\r\n    let any : IParser<string> =\r\n        import \"any\" \"./Parsimmon.js\"\r\n\r\n    /// Accepts any number of parsers, yielding the value of the first one that succeeds, backtracking in between.\r\n    let choose (ps: IParser<'t> list) : IParser<'t> =\r\n        List.reduce (fun acc parser -> acc.orTry(parser)) ps\r\n\r\n    /// A parser that consumes and yields the entire remainder of the input.\r\n    let all : IParser<string> =\r\n        import \"all\"  \"./Parsimmon.js\"\r\n\r\n    /// Returns a failing parser with the given message.\r\n    let fail (input: string) : IParser<string> =\r\n        import \"fail\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that yield a single character if it passes the predicate function.\r\n    let satisfy (f: string -> bool) : IParser<string> =\r\n        import \"test\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser yield a string containing all the next characters that pass the predicate \"f\"\r\n    let takeWhile (f: string -> bool) : IParser<string> =\r\n        import \"takeWhile\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that can only parse the exact given input string\r\n    let str (input: string) : IParser<string> =\r\n        import \"string\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that parses any of the characters of the input string\r\n    let oneOf (input: string) : IParser<string> =\r\n        import \"oneOf\" \"./Parsimmon.js\"\r\n\r\n    let whitespace : IParser<string> =\r\n        import \"whitespace\" \"./Parsimmon.js\"\r\n\r\n    let optionalWhitespace : IParser<string> =\r\n        import \"optWhitespace\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that succeeds one or more times\r\n    let atLeastOneOrMany (parser: IParser<'t>) : IParser<'t[]> =\r\n        atLeast 1 parser\r\n\r\n    let stringReturn (input: string) (value: 't) : IParser<'t> =\r\n        str input\r\n        |> map (fun _ -> value)\r\n\r\n    /// Returns a parser that parses comsumes any character of a string other than the characters of the input string\r\n    let noneOf (input: string) : IParser<string> =\r\n        import \"noneOf\" \"./Parsimmon.js\"\r\n\r\n    let seq2 (p1: IParser<'t>) (p2:IParser<'u>) :  IParser<'t * 'u> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    let trim (trimmed: IParser<'a>) (p: IParser<'t>) : IParser<'t> =\r\n        p.trim trimmed\r\n\r\n    /// Equivalent to `parser.map (String.concat \"\")`\r\n    let concat (parser: IParser<string[]>) : IParser<string> =\r\n        parser.map (String.concat \"\")\r\n\r\n    let seq3 (p1: IParser<'t>)\r\n             (p2: IParser<'u>)\r\n             (p3:IParser<'v>) :  IParser<'t * 'u * 'v> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    let seq4 (p1: IParser<'t>)\r\n             (p2: IParser<'u>)\r\n             (p3:IParser<'v>)\r\n             (p4:IParser<'w>) :  IParser<'t * 'u * 'v * 'w> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    let seq5 (p1: IParser<'t>)\r\n             (p2: IParser<'u>)\r\n             (p3: IParser<'v>)\r\n             (p4: IParser<'w>)\r\n             (p5: IParser<'q>) : IParser<'t * 'u * 'v * 'w * 'q> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    /// Equivalent to `parser.node(\"description\")`\r\n    let node<'t> description (p:IParser<'t>) = p.node(description)","namespace Fable.SimpleJson\r\n\r\nopen Fable.Parsimmon\r\n\r\n#nowarn \"40\"\r\n\r\nmodule Parser =\r\n\r\n    let digits = \r\n        Parsimmon.digit \r\n        |> Parsimmon.atLeastOneOrMany\r\n        |> Parsimmon.concat\r\n\r\n    let jint = digits |> Parsimmon.map float\r\n\r\n    let negJint = \r\n        Parsimmon.seq2 (Parsimmon.str \"-\") jint \r\n        |> Parsimmon.map (fun (sign, number) -> -number)\r\n\r\n    let jfloat = \r\n\r\n        let digits = \r\n            Parsimmon.digit \r\n            |> Parsimmon.many\r\n            |> Parsimmon.concat\r\n\r\n        let dot = Parsimmon.str \".\"\r\n\r\n        let decimals = \r\n            Parsimmon.digit\r\n            |> Parsimmon.atLeastOneOrMany\r\n            |> Parsimmon.concat\r\n\r\n        Parsimmon.seq3 digits dot decimals\r\n        |> Parsimmon.map (fun (digitsLeft,dot,digitsRight) -> \r\n            match digitsLeft with\r\n            | \"\" -> \"0\"\r\n            | other -> other \r\n            |> fun digitsLeft ->\r\n                [digitsLeft; dot; digitsRight]\r\n                |> String.concat \"\" \r\n                |> float\r\n        )\r\n\r\n    let negativeJFloat = \r\n        Parsimmon.seq2 (Parsimmon.str \"-\") jfloat \r\n        |> Parsimmon.map (fun (sign, number) -> -number)\r\n\r\n    let jnumber = \r\n        [jfloat; negativeJFloat; jint; negJint] \r\n        |> Parsimmon.choose\r\n        |> Parsimmon.map JNumber\r\n\r\n    let jbool = \r\n        [ Parsimmon.stringReturn \"true\" (JBool true)\r\n          Parsimmon.stringReturn \"false\" (JBool false)]\r\n        |> Parsimmon.choose\r\n\r\n    let jnull = Parsimmon.stringReturn \"null\" JNull\r\n\r\n    let stringLiteral =\r\n        let escape =  \r\n            Parsimmon.oneOf \"\\\"\\\\/bfnrt\"\r\n            |> Parsimmon.map(function\r\n                | \"b\" -> \"\\b\"\r\n                | \"f\" -> \"\\u000C\"\r\n                | \"n\" -> \"\\n\"\r\n                | \"r\" -> \"\\r\"\r\n                | \"t\" -> \"\\t\"\r\n                | c   -> c) // every other char is mapped to itself\r\n\r\n        let escapedCharSnippet = \r\n            Parsimmon.seq2 (Parsimmon.str \"\\\\\") escape\r\n            |> Parsimmon.map snd\r\n\r\n        let normalCharSnippet = Parsimmon.satisfy (fun c -> c <> \"\\\"\" && c <> \"\\\\\")\r\n\r\n        let anyCharSnippet = \r\n            normalCharSnippet\r\n            |> Parsimmon.orTry escapedCharSnippet\r\n            |> Parsimmon.many\r\n            |> Parsimmon.concat\r\n\r\n        anyCharSnippet\r\n        |> Parsimmon.between (Parsimmon.str \"\\\"\") (Parsimmon.str \"\\\"\")\r\n        \r\n    let jstring = stringLiteral.map JString\r\n\r\n    let withWhitespace p = \r\n        Parsimmon.between (Parsimmon.optionalWhitespace) (Parsimmon.optionalWhitespace) p\r\n        \r\n    let jvalue = \r\n        [ jnull; jbool; jnumber; jstring ]\r\n        |> List.map withWhitespace\r\n        |> Parsimmon.choose\r\n    \r\n    let comma = withWhitespace (Parsimmon.str \",\")\r\n \r\n    let rec json = Parsimmon.ofLazy <| fun () ->\r\n        \r\n        let leftBracket = withWhitespace (Parsimmon.str \"[\")\r\n        let rightBracket = withWhitespace (Parsimmon.str \"]\")\r\n                    \r\n        let arrayValue = Parsimmon.seperateBy comma json\r\n        \r\n        let jarray = \r\n            arrayValue\r\n            |> Parsimmon.between leftBracket rightBracket\r\n            |> Parsimmon.map (List.ofArray >> JArray)\r\n\r\n        let leftBrace = withWhitespace (Parsimmon.str \"{\")\r\n        let rightBrace = withWhitespace (Parsimmon.str \"}\")\r\n            \r\n        let keyValues = \r\n            Parsimmon.seq3 \r\n                (withWhitespace stringLiteral)\r\n                (withWhitespace (Parsimmon.str \":\"))\r\n                (withWhitespace json)\r\n            |> Parsimmon.map (fun (key, _ , value) -> key,value)\r\n            |> Parsimmon.seperateBy comma\r\n\r\n        let jobject = \r\n            keyValues\r\n            |> Parsimmon.between leftBrace rightBrace\r\n            |> Parsimmon.map (List.ofArray >> Map.ofList >> JObject)\r\n\r\n        [jvalue; jarray; jobject]\r\n        |> Parsimmon.choose\r\n        \r\n    let jsonParser = withWhitespace json\r\n","namespace Fable.SimpleJson\r\n\r\nopen Fable.Core\r\nopen Fable.Parsimmon\r\nopen Parser\r\nopen Fable.Import\r\nopen System\r\nopen Fable.Core.JsInterop\r\n\r\n[<AutoOpen>]\r\nmodule InteropUtil =\r\n    [<Emit(\"Array.from($0)\")>]\r\n    let arrayFrom (xs: obj) : obj = jsNative\r\n    [<Emit(\"$1[$0]\")>]\r\n    let get<'a> (key: string) (x: obj) : 'a = jsNative\r\n    [<Emit(\"$0 instanceof Date\")>]\r\n    let isDate (x: obj) = jsNative\r\n    [<Emit(\"$0 in $1\")>]\r\n    let hasKey (key: string) (x: 'a) = jsNative\r\n    let isDateOffset (x: obj) = isDate x && hasKey \"offset\" x\r\n    [<Emit(\"typeof $0\")>]\r\n    let getTypeOf (x: obj) : string = jsNative\r\n    let isObjectLiteral (x: obj) = getTypeOf x = \"object\"\r\n    let isBigInt (x: obj) =\r\n        not (isNull x)\r\n        && isObjectLiteral x\r\n        && hasKey \"signInt\" x\r\n        && hasKey \"v\" x\r\n        && hasKey \"digits\" (get \"v\" x)\r\n        && hasKey \"bound\" (get \"v\" x)\r\n\r\n    [<Emit(\"console.log($0)\")>]\r\n    let log (x: 'a) : unit = jsNative\r\n\r\nmodule SimpleJson =\r\n    /// Tries to parse a string into a Json structured JSON data.\r\n    let tryParse (input: string) : Option<Json> =\r\n        Parsimmon.parse input jsonParser\r\n\r\n    /// Parses the input string into a structured JSON data. Fails with an exception if parsing fails.\r\n    let parse (input: string) : Json =\r\n        match tryParse input with\r\n        | Some result -> result\r\n        | None -> failwithf \"Could not parse the JSON input: %s\" input\r\n\r\n    /// Stringifies a Json object back to string representation\r\n    let rec toString = function\r\n        | JNull -> \"null\"\r\n        | JBool true -> \"true\"\r\n        | JBool false -> \"false\"\r\n        | JNumber number -> string number\r\n        | JString text -> sprintf \"\\\"%s\\\"\" text\r\n        | JArray elements ->\r\n            elements\r\n            |> List.map toString\r\n            |> String.concat \",\"\r\n            |> sprintf \"[%s]\"\r\n        | JObject map ->\r\n            map\r\n            |> Map.toList\r\n            |> List.map (fun (key,value) -> sprintf \"\\\"%s\\\":%s\" key (toString value))\r\n            |> String.concat \",\"\r\n            |> sprintf \"{%s}\"\r\n\r\n    let stringify (value: 'a) : string =\r\n        JS.JSON.stringify(value, (fun key v ->\r\n            if isDateOffset (get key jsThis) then\r\n                let dateOffset : DateTimeOffset = get key jsThis\r\n                box (dateOffset.ToString(\"O\"))\r\n            elif isBigInt (get key jsThis) then\r\n                let bigInt : bigint = get key jsThis\r\n                box (string (decimal bigInt))\r\n            else\r\n            match v with\r\n            | :? string -> v\r\n            | :? System.Collections.IEnumerable ->\r\n                if JS.Constructors.Array.isArray(v) then v\r\n                else arrayFrom v\r\n            | _ when isBigInt v -> box (string (decimal (unbox<bigint> v)))\r\n            | _ when isDateOffset v -> box ((unbox<DateTimeOffset> v).ToString(\"O\"))\r\n            | _ -> v\r\n        ), 0)\r\n\r\n    let rec internal parseNative' (x: obj) =\r\n        match x with\r\n        | TypeCheck.NativeString str -> JString str\r\n        | TypeCheck.NativeNumber number -> JNumber number\r\n        | TypeCheck.NativeBool value -> JBool value\r\n        | TypeCheck.Null _ -> JNull\r\n        | TypeCheck.NativeArray arr -> JArray (List.ofArray (Array.map parseNative' arr))\r\n        | TypeCheck.NativeObject object ->\r\n            [ for key in JS.Constructors.Object.keys object -> key, parseNative' (get<obj> key object)  ]\r\n            |> Map.ofList\r\n            |> JObject\r\n        | _ -> JNull\r\n\r\n    /// Parses and converts the input string to Json using Javascript's native parsing capabilities\r\n    let parseNative (input: string) =\r\n        let parsed = JS.JSON.parse input\r\n        parseNative' parsed\r\n\r\n    let tryParseNative (input: string) =\r\n        try Some (parseNative input)\r\n        with | ex -> None\r\n\r\n    /// Tries to convert an object literal to the Json by calling JSON.stringify on the object first\r\n    let fromObjectLiteral (x: 'a) =\r\n        try Some (parseNative' x)\r\n        with | _ -> None\r\n\r\n    /// Transforms all keys of the objects within the Json structure\r\n    let rec mapKeys f = function\r\n        | JObject dictionary ->\r\n            dictionary\r\n            |> Map.toList\r\n            |> List.map (fun (key, value) -> f key, mapKeys f value)\r\n            |> Map.ofList\r\n            |> JObject\r\n        | JArray values ->\r\n            values\r\n            |> List.map (mapKeys f)\r\n            |> JArray\r\n        | otherJsonValue -> otherJsonValue\r\n\r\n    /// Transforms object values recursively using function `f` that takes the key and value of the object and returns a new value\r\n    let rec mapbyKey f = function\r\n        | JObject dictionary ->\r\n            dictionary\r\n            |> Map.toList\r\n            |> List.map (fun (key, value) -> key, f key value)\r\n            |> Map.ofList\r\n            |> JObject\r\n        | JArray values ->\r\n            values\r\n            |> List.map (mapbyKey f)\r\n            |> JArray\r\n        | otherJsonValue -> otherJsonValue\r\n\r\n    /// Transforms keys of object selectively by path segments\r\n    let mapKeysByPath f json =\r\n        let rec mapKey xs = function\r\n            | JObject dictionary ->\r\n                dictionary\r\n                |> Map.toList\r\n                |> List.map (fun (key, value) ->\r\n                    let keyPath = List.concat [xs; [key]]\r\n                    match f keyPath with\r\n                    | Some nextKey -> nextKey, mapKey keyPath value\r\n                    | None -> key, mapKey keyPath value)\r\n                |> Map.ofList\r\n                |> JObject\r\n            | JArray values ->\r\n                values\r\n                |> List.map (mapKey xs)\r\n                |> JArray\r\n            | otherJsonValue -> otherJsonValue\r\n        mapKey [] json\r\n\r\n    let rec readPath (keys: string list) (input: Json) =\r\n        match keys, input with\r\n        | [ ], _ -> None\r\n        | [ key ], JObject dict -> Map.tryFind key dict\r\n        | firstKey :: rest, JObject dict ->\r\n            match Map.tryFind firstKey dict with\r\n            | Some (JObject nextDict) -> readPath rest (JObject nextDict)\r\n            | _ -> None\r\n        | _ -> None","namespace Fable.SimpleJson\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\nmodule TypeCheck =\r\n\r\n    [<Emit(\"typeof ($0) === 'string'\")>]\r\n    let typeofString (x: obj) : bool = jsNative\r\n\r\n    [<Emit(\"typeof ($0) === 'boolean'\")>]\r\n    let typeofBool (x: obj) : bool = jsNative\r\n\r\n    [<Emit(\"typeof ($0) === 'number'\")>]\r\n    let typeofNumber (x: obj) : bool = jsNative\r\n    [<Emit(\"typeof ($0) === 'object'\")>]\r\n    let typeofObject (x: obj) : bool = jsNative\r\n\r\n    let (|NativeString|_|) (x: obj) =\r\n        if typeofString x\r\n        then Some (unbox<string> x)\r\n        else None\r\n\r\n    let (|NativeBool|_|) (x: obj) =\r\n        if typeofBool x\r\n        then Some (unbox<bool> x)\r\n        else None\r\n\r\n    let (|NativeNumber|_|) (x: obj) =\r\n        if typeofNumber x\r\n        then Some (unbox<float> x)\r\n        else None\r\n\r\n    let (|NativeObject|_|) (x: obj) =\r\n        if typeofObject x\r\n        then Some x\r\n        else None\r\n\r\n    let (|Null|_|) (x: obj) =\r\n        if isNull x\r\n        then Some x\r\n        else None\r\n\r\n    let (|NativeArray|_|) (x: obj) =\r\n        if (JS.Constructors.Array.isArray x)\r\n        then Some (unbox<obj[]> x)\r\n        else None","import { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { some } from \"./Option.js\";\nexport const MutableSet$00601 = declare(function Fable_Collections_MutableSet(items, comparer) {\n  const $this$$1 = this;\n  const this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1.hashMap = new Map([]);\n  $this$$1[\"init@21-2\"] = 1;\n  iterate(function (item) {\n    const value = MutableSet$00601$$Add$$2B595(this$.contents, item);\n    void value;\n  }, items);\n  void null;\n});\nexport function MutableSet$00601$reflection($gen$$4) {\n  return class_type(\"Fable.Collections.MutableSet`1\", [$gen$$4], MutableSet$00601);\n}\nexport function MutableSet$00601$$$$002Ector$$Z6150332D(items, comparer) {\n  return this instanceof MutableSet$00601 ? MutableSet$00601.call(this, items, comparer) : new MutableSet$00601(items, comparer);\n}\n\nfunction MutableSet$00601$$TryFindIndex$$2B595(this$$$1, k) {\n  const h = this$$$1.comparer.GetHashCode(k) | 0;\n  const matchValue = tryGetValue(this$$$1.hashMap, h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (v) {\n      return this$$$1.comparer.Equals(k, v);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nfunction MutableSet$00601$$TryFind$$2B595(this$$$2, k$$1) {\n  const matchValue$$1 = MutableSet$00601$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$9;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$9 = 0;\n    } else {\n      $target$$9 = 1;\n    }\n  } else {\n    $target$$9 = 1;\n  }\n\n  switch ($target$$9) {\n    case 0:\n      {\n        return some(getItemFromDict(this$$$2.hashMap, matchValue$$1[1])[matchValue$$1[2]]);\n      }\n\n    case 1:\n      {\n        return undefined;\n      }\n  }\n}\n\nexport function MutableSet$00601$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableSet$00601$$Clear(this$$$4) {\n  this$$$4.hashMap.clear();\n}\nexport function MutableSet$00601$$get_Count(this$$$5) {\n  const source = this$$$5.hashMap.values();\n  return sumBy(function projection(pairs) {\n    return pairs.length;\n  }, source, {\n    GetZero() {\n      return 0;\n    },\n\n    Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n\n  }) | 0;\n}\nexport function MutableSet$00601$$Add$$2B595(this$$$6, k$$2) {\n  const matchValue$$2 = MutableSet$00601$$TryFindIndex$$2B595(this$$$6, k$$2);\n  var $target$$16;\n\n  if (matchValue$$2[0]) {\n    if (matchValue$$2[2] > -1) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return false;\n      }\n\n    case 1:\n      {\n        if (matchValue$$2[0]) {\n          const value$$1 = void getItemFromDict(this$$$6.hashMap, matchValue$$2[1]).push(k$$2);\n          void null;\n          return true;\n        } else {\n          this$$$6.hashMap.set(matchValue$$2[1], [k$$2]);\n          return true;\n        }\n      }\n  }\n}\nexport function MutableSet$00601$$Contains$$2B595(this$$$7, k$$3) {\n  const matchValue$$3 = MutableSet$00601$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$19;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$19 = 0;\n    } else {\n      $target$$19 = 1;\n    }\n  } else {\n    $target$$19 = 1;\n  }\n\n  switch ($target$$19) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableSet$00601$$Remove$$2B595(this$$$8, k$$4) {\n  const matchValue$$4 = MutableSet$00601$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$22;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$22 = 0;\n    } else {\n      $target$$22 = 1;\n    }\n  } else {\n    $target$$22 = 1;\n  }\n\n  switch ($target$$22) {\n    case 0:\n      {\n        getItemFromDict(this$$$8.hashMap, matchValue$$4[1]).splice(matchValue$$4[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableSet$00601.prototype[Symbol.iterator] = function () {\n  var elems;\n  const this$$$9 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (values$$1) {\n      return map(function (value$$2) {\n        return value$$2;\n      }, values$$1);\n    }, this$$$9.hashMap.values());\n  }), getEnumerator(elems)));\n};\n\nMutableSet$00601.prototype.Add = function (item$$1) {\n  const this$$$10 = this;\n  const value$$3 = MutableSet$00601$$Add$$2B595(this$$$10, item$$1);\n  void value$$3;\n};\n\nMutableSet$00601.prototype.Clear = function () {\n  const this$$$11 = this;\n  MutableSet$00601$$Clear(this$$$11);\n};\n\nMutableSet$00601.prototype.Contains = function (item$$2) {\n  const this$$$12 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$12, item$$2);\n};\n\nMutableSet$00601.prototype.CopyTo = function (array, arrayIndex) {\n  const this$$$13 = this;\n  iterateIndexed(function action(i$$8, e) {\n    array[arrayIndex + i$$8] = e;\n  }, this$$$13);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"Count\", {\n  \"get\": function () {\n    const this$$$14 = this;\n    return MutableSet$00601$$get_Count(this$$$14) | 0;\n  }\n});\nObject.defineProperty(MutableSet$00601.prototype, \"IsReadOnly\", {\n  \"get\": function () {\n    return false;\n  }\n});\n\nMutableSet$00601.prototype.Remove = function (item$$3) {\n  const this$$$16 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$16, item$$3);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$17 = this;\n    return MutableSet$00601$$get_Count(this$$$17) | 0;\n  }\n});\n\nMutableSet$00601.prototype.add = function (k$$5) {\n  const this$$$18 = this;\n  const value$$4 = MutableSet$00601$$Add$$2B595(this$$$18, k$$5);\n  void value$$4;\n  return this$$$18;\n};\n\nMutableSet$00601.prototype.add_ = function (k$$6) {\n  const this$$$19 = this;\n  return MutableSet$00601$$Add$$2B595(this$$$19, k$$6);\n};\n\nMutableSet$00601.prototype.clear = function () {\n  const this$$$20 = this;\n  MutableSet$00601$$Clear(this$$$20);\n};\n\nMutableSet$00601.prototype.delete = function (k$$7) {\n  const this$$$21 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableSet$00601.prototype.has = function (k$$8) {\n  const this$$$22 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$22, k$$8);\n};\n\nMutableSet$00601.prototype.keys = function () {\n  const this$$$23 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$23);\n};\n\nMutableSet$00601.prototype.values = function () {\n  const this$$$24 = this;\n  return map(function mapping$$1(x$$1) {\n    return x$$1;\n  }, this$$$24);\n};\n\nMutableSet$00601.prototype.entries = function () {\n  const this$$$25 = this;\n  return map(function mapping$$2(v$$1) {\n    return [v$$1, v$$1];\n  }, this$$$25);\n};","import { List, Record, declare, Union } from \"./Types.js\";\nimport { class_type, record_type, bool_type, list_type, union_type, int32_type } from \"./Reflection.js\";\nimport { value as value$$2, some, Choice } from \"./Option.js\";\nimport { iterate as iterate$$1, delay, collect, singleton as singleton$$1, empty as empty$$1, fold as fold$$1, toIterator, map as map$$1, reduce, getEnumerator, unfold } from \"./Seq.js\";\nimport { structuralHash, isDisposable } from \"./Util.js\";\nimport { join } from \"./String.js\";\nimport { MutableSet$00601$$Add$$2B595 as MutableSet$002400601$0024$0024Add$0024$00242B595, MutableSet$00601$$$$002Ector$$Z6150332D as MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D } from \"./MutableSet\";\nexport const SetTree$00601 = declare(function Set_SetTree(tag, name, ...fields) {\n  this.tag = tag | 0;\n  this.name = name;\n  this.fields = fields;\n}, Union);\nexport function SetTree$00601$reflection($gen$$3) {\n  return union_type(\"Set.SetTree`1\", [$gen$$3], SetTree$00601, () => [\"SetEmpty\", [\"SetNode\", [[\"Item1\", $gen$$3], [\"Item2\", SetTree$00601$reflection($gen$$3)], [\"Item3\", SetTree$00601$reflection($gen$$3)], [\"Item4\", int32_type]]], [\"SetOne\", [[\"Item\", $gen$$3]]]]);\n}\nexport function SetTreeModule$$$countAux($s$$4, $acc$$5) {\n  SetTreeModule$$$countAux: while (true) {\n    const s = $s$$4,\n          acc = $acc$$5;\n\n    switch (s.tag) {\n      case 2:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 0:\n        {\n          return acc | 0;\n        }\n\n      default:\n        {\n          $s$$4 = s.fields[1];\n          $acc$$5 = SetTreeModule$$$countAux(s.fields[2], acc + 1);\n          continue SetTreeModule$$$countAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$count(s$$1) {\n  return SetTreeModule$$$countAux(s$$1, 0);\n}\nexport function SetTreeModule$$$SetOne(n) {\n  return new SetTree$00601(2, \"SetOne\", n);\n}\nexport function SetTreeModule$$$SetNode(x, l$$1, r$$1, h) {\n  return new SetTree$00601(1, \"SetNode\", x, l$$1, r$$1, h);\n}\nexport function SetTreeModule$$$height(t) {\n  switch (t.tag) {\n    case 2:\n      {\n        return 1;\n      }\n\n    case 1:\n      {\n        return t.fields[3] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport const SetTreeModule$$$tolerance = 2;\nexport function SetTreeModule$$$mk(l$$2, k, r$$2) {\n  var $target$$16;\n\n  if (l$$2.tag === 0) {\n    if (r$$2.tag === 0) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k);\n      }\n\n    case 1:\n      {\n        const hl = SetTreeModule$$$height(l$$2) | 0;\n        const hr = SetTreeModule$$$height(r$$2) | 0;\n        const m = (hl < hr ? hr : hl) | 0;\n        return SetTreeModule$$$SetNode(k, l$$2, r$$2, m + 1);\n      }\n  }\n}\nexport function SetTreeModule$$$rebalance(t1, k$$1, t2) {\n  const t1h = SetTreeModule$$$height(t1) | 0;\n  const t2h = SetTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + SetTreeModule$$$tolerance) {\n    if (t2.tag === 1) {\n      if (SetTreeModule$$$height(t2.fields[1]) > t1h + 1) {\n        if (t2.fields[1].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1].fields[1]), t2.fields[1].fields[0], SetTreeModule$$$mk(t2.fields[1].fields[2], t2.fields[0], t2.fields[2]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1]), t2.fields[0], t2.fields[2]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + SetTreeModule$$$tolerance) {\n    if (t1.tag === 1) {\n      if (SetTreeModule$$$height(t1.fields[2]) > t2h + 1) {\n        if (t1.fields[2].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1.fields[1], t1.fields[0], t1.fields[2].fields[1]), t1.fields[2].fields[0], SetTreeModule$$$mk(t1.fields[2].fields[2], k$$1, t2));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(t1.fields[1], t1.fields[0], SetTreeModule$$$mk(t1.fields[2], k$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return SetTreeModule$$$mk(t1, k$$1, t2);\n  }\n}\nexport function SetTreeModule$$$add(comparer, k$$2, t$$1) {\n  switch (t$$1.tag) {\n    case 2:\n      {\n        const c$$1 = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return SetTreeModule$$$SetNode(k$$2, new SetTree$00601(0, \"SetEmpty\"), t$$1, 2);\n        } else if (c$$1 === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$SetNode(k$$2, t$$1, new SetTree$00601(0, \"SetEmpty\"), 2);\n        }\n      }\n\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k$$2);\n      }\n\n    default:\n      {\n        const c = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$add(comparer, k$$2, t$$1.fields[1]), t$$1.fields[0], t$$1.fields[2]);\n        } else if (c === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$rebalance(t$$1.fields[1], t$$1.fields[0], SetTreeModule$$$add(comparer, k$$2, t$$1.fields[2]));\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t2$$1) {\n  var $target$$27, t2$$2, t1$$2, k1, t2$$3, k2$$2, t1$$3, h1, h2, k1$$1, k2$$3, t11, t12, t21, t22;\n\n  if (t1$$1.tag === 2) {\n    if (t2$$1.tag === 0) {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    } else if (t2$$1.tag === 2) {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    } else {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    }\n  } else if (t1$$1.tag === 1) {\n    if (t2$$1.tag === 2) {\n      $target$$27 = 3;\n      k2$$2 = t2$$1.fields[0];\n      t1$$3 = t1$$1;\n    } else if (t2$$1.tag === 1) {\n      $target$$27 = 4;\n      h1 = t1$$1.fields[3];\n      h2 = t2$$1.fields[3];\n      k1$$1 = t1$$1.fields[0];\n      k2$$3 = t2$$1.fields[0];\n      t11 = t1$$1.fields[1];\n      t12 = t1$$1.fields[2];\n      t21 = t2$$1.fields[1];\n      t22 = t2$$1.fields[2];\n    } else {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    }\n  } else {\n    $target$$27 = 0;\n    t2$$2 = t2$$1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t2$$2);\n      }\n\n    case 1:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t1$$2);\n      }\n\n    case 2:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k1, t2$$3));\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k2$$2, t1$$3));\n      }\n\n    case 4:\n      {\n        if (h1 + SetTreeModule$$$tolerance < h2) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t21), k2$$3, t22);\n        } else if (h2 + SetTreeModule$$$tolerance < h1) {\n          return SetTreeModule$$$rebalance(t11, k1$$1, SetTreeModule$$$balance(comparer$$1, t12, k$$3, t2$$1));\n        } else {\n          return SetTreeModule$$$mk(t1$$1, k$$3, t2$$1);\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$split(comparer$$2, pivot, t$$2) {\n  switch (t$$2.tag) {\n    case 2:\n      {\n        const c$$3 = comparer$$2.Compare(t$$2.fields[0], pivot) | 0;\n\n        if (c$$3 < 0) {\n          return [t$$2, false, new SetTree$00601(0, \"SetEmpty\")];\n        } else if (c$$3 === 0) {\n          return [new SetTree$00601(0, \"SetEmpty\"), true, new SetTree$00601(0, \"SetEmpty\")];\n        } else {\n          return [new SetTree$00601(0, \"SetEmpty\"), false, t$$2];\n        }\n      }\n\n    case 0:\n      {\n        return [new SetTree$00601(0, \"SetEmpty\"), false, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    default:\n      {\n        const c$$2 = comparer$$2.Compare(pivot, t$$2.fields[0]) | 0;\n\n        if (c$$2 < 0) {\n          const patternInput = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[1]);\n          return [patternInput[0], patternInput[1], SetTreeModule$$$balance(comparer$$2, patternInput[2], t$$2.fields[0], t$$2.fields[2])];\n        } else if (c$$2 === 0) {\n          return [t$$2.fields[1], true, t$$2.fields[2]];\n        } else {\n          const patternInput$$1 = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[2]);\n          return [SetTreeModule$$$balance(comparer$$2, t$$2.fields[1], t$$2.fields[0], patternInput$$1[0]), patternInput$$1[1], patternInput$$1[2]];\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$spliceOutSuccessor(t$$3) {\n  switch (t$$3.tag) {\n    case 2:\n      {\n        return [t$$3.fields[0], new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    case 1:\n      {\n        if (t$$3.fields[1].tag === 0) {\n          return [t$$3.fields[0], t$$3.fields[2]];\n        } else {\n          const patternInput$$2 = SetTreeModule$$$spliceOutSuccessor(t$$3.fields[1]);\n          return [patternInput$$2[0], SetTreeModule$$$mk(patternInput$$2[1], t$$3.fields[0], t$$3.fields[2])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Set.spliceOutSuccessor\");\n      }\n  }\n}\nexport function SetTreeModule$$$remove(comparer$$3, k$$4, t$$4) {\n  switch (t$$4.tag) {\n    case 2:\n      {\n        const c$$4 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$4 === 0) {\n          return new SetTree$00601(0, \"SetEmpty\");\n        } else {\n          return t$$4;\n        }\n      }\n\n    case 1:\n      {\n        const c$$5 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$5 < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[1]), t$$4.fields[0], t$$4.fields[2]);\n        } else if (c$$5 === 0) {\n          if (t$$4.fields[1].tag === 0) {\n            return t$$4.fields[2];\n          } else if (t$$4.fields[2].tag === 0) {\n            return t$$4.fields[1];\n          } else {\n            const patternInput$$3 = SetTreeModule$$$spliceOutSuccessor(t$$4.fields[2]);\n            return SetTreeModule$$$mk(t$$4.fields[1], patternInput$$3[0], patternInput$$3[1]);\n          }\n        } else {\n          return SetTreeModule$$$rebalance(t$$4.fields[1], t$$4.fields[0], SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[2]));\n        }\n      }\n\n    default:\n      {\n        return t$$4;\n      }\n  }\n}\nexport function SetTreeModule$$$mem($comparer$$4$$35, $k$$5$$36, $t$$5$$37) {\n  SetTreeModule$$$mem: while (true) {\n    const comparer$$4 = $comparer$$4$$35,\n          k$$5 = $k$$5$$36,\n          t$$5 = $t$$5$$37;\n\n    switch (t$$5.tag) {\n      case 2:\n        {\n          return comparer$$4.Compare(k$$5, t$$5.fields[0]) === 0;\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const c$$6 = comparer$$4.Compare(k$$5, t$$5.fields[0]) | 0;\n\n          if (c$$6 < 0) {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[1];\n            continue SetTreeModule$$$mem;\n          } else if (c$$6 === 0) {\n            return true;\n          } else {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[2];\n            continue SetTreeModule$$$mem;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$iter($f$$38, $t$$6$$39) {\n  SetTreeModule$$$iter: while (true) {\n    const f = $f$$38,\n          t$$6 = $t$$6$$39;\n\n    switch (t$$6.tag) {\n      case 2:\n        {\n          f(t$$6.fields[0]);\n          break;\n        }\n\n      case 0:\n        {\n          void null;\n          break;\n        }\n\n      default:\n        {\n          SetTreeModule$$$iter(f, t$$6.fields[1]);\n          f(t$$6.fields[0]);\n          $f$$38 = f;\n          $t$$6$$39 = t$$6.fields[2];\n          continue SetTreeModule$$$iter;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$foldBack($f$$1$$40, $m$$1$$41, $x$$1$$42) {\n  SetTreeModule$$$foldBack: while (true) {\n    const f$$1 = $f$$1$$40,\n          m$$1 = $m$$1$$41,\n          x$$1 = $x$$1$$42;\n\n    switch (m$$1.tag) {\n      case 2:\n        {\n          return f$$1(m$$1.fields[0], x$$1);\n        }\n\n      case 0:\n        {\n          return x$$1;\n        }\n\n      default:\n        {\n          $f$$1$$40 = f$$1;\n          $m$$1$$41 = m$$1.fields[1];\n          $x$$1$$42 = f$$1(m$$1.fields[0], SetTreeModule$$$foldBack(f$$1, m$$1.fields[2], x$$1));\n          continue SetTreeModule$$$foldBack;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$fold($f$$2$$43, $x$$2$$44, $m$$2$$45) {\n  SetTreeModule$$$fold: while (true) {\n    const f$$2 = $f$$2$$43,\n          x$$2 = $x$$2$$44,\n          m$$2 = $m$$2$$45;\n\n    switch (m$$2.tag) {\n      case 2:\n        {\n          return f$$2(x$$2, m$$2.fields[0]);\n        }\n\n      case 0:\n        {\n          return x$$2;\n        }\n\n      default:\n        {\n          const x$$3 = SetTreeModule$$$fold(f$$2, x$$2, m$$2.fields[1]);\n          const x$$4 = f$$2(x$$3, m$$2.fields[0]);\n          $f$$2$$43 = f$$2;\n          $x$$2$$44 = x$$4;\n          $m$$2$$45 = m$$2.fields[2];\n          continue SetTreeModule$$$fold;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$forall($f$$3$$46, $m$$3$$47) {\n  SetTreeModule$$$forall: while (true) {\n    const f$$3 = $f$$3$$46,\n          m$$3 = $m$$3$$47;\n\n    switch (m$$3.tag) {\n      case 2:\n        {\n          return f$$3(m$$3.fields[0]);\n        }\n\n      case 0:\n        {\n          return true;\n        }\n\n      default:\n        {\n          if (f$$3(m$$3.fields[0]) ? SetTreeModule$$$forall(f$$3, m$$3.fields[1]) : false) {\n            $f$$3$$46 = f$$3;\n            $m$$3$$47 = m$$3.fields[2];\n            continue SetTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$exists($f$$4$$48, $m$$4$$49) {\n  SetTreeModule$$$exists: while (true) {\n    const f$$4 = $f$$4$$48,\n          m$$4 = $m$$4$$49;\n\n    switch (m$$4.tag) {\n      case 2:\n        {\n          return f$$4(m$$4.fields[0]);\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          if (f$$4(m$$4.fields[0]) ? true : SetTreeModule$$$exists(f$$4, m$$4.fields[1])) {\n            return true;\n          } else {\n            $f$$4$$48 = f$$4;\n            $m$$4$$49 = m$$4.fields[2];\n            continue SetTreeModule$$$exists;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$isEmpty(m$$5) {\n  if (m$$5.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$subset(comparer$$5, a, b) {\n  return SetTreeModule$$$forall(function (x$$5) {\n    return SetTreeModule$$$mem(comparer$$5, x$$5, b);\n  }, a);\n}\nexport function SetTreeModule$$$psubset(comparer$$6, a$$1, b$$1) {\n  if (SetTreeModule$$$forall(function (x$$6) {\n    return SetTreeModule$$$mem(comparer$$6, x$$6, b$$1);\n  }, a$$1)) {\n    return SetTreeModule$$$exists(function (x$$7) {\n      return !SetTreeModule$$$mem(comparer$$6, x$$7, a$$1);\n    }, b$$1);\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$filterAux($comparer$$7$$57, $f$$5$$58, $s$$2$$59, $acc$$1$$60) {\n  SetTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $comparer$$7$$57,\n          f$$5 = $f$$5$$58,\n          s$$2 = $s$$2$$59,\n          acc$$1 = $acc$$1$$60;\n\n    switch (s$$2.tag) {\n      case 2:\n        {\n          if (f$$5(s$$2.fields[0])) {\n            return SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1);\n          } else {\n            return acc$$1;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$1;\n        }\n\n      default:\n        {\n          const acc$$2 = f$$5(s$$2.fields[0]) ? SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1) : acc$$1;\n          $comparer$$7$$57 = comparer$$7;\n          $f$$5$$58 = f$$5;\n          $s$$2$$59 = s$$2.fields[1];\n          $acc$$1$$60 = SetTreeModule$$$filterAux(comparer$$7, f$$5, s$$2.fields[2], acc$$2);\n          continue SetTreeModule$$$filterAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$filter(comparer$$8, f$$6, s$$3) {\n  return SetTreeModule$$$filterAux(comparer$$8, f$$6, s$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$diffAux($comparer$$9$$64, $m$$6$$65, $acc$$3$$66) {\n  SetTreeModule$$$diffAux: while (true) {\n    const comparer$$9 = $comparer$$9$$64,\n          m$$6 = $m$$6$$65,\n          acc$$3 = $acc$$3$$66;\n\n    switch (m$$6.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3);\n        }\n\n      case 0:\n        {\n          return acc$$3;\n        }\n\n      default:\n        {\n          $comparer$$9$$64 = comparer$$9;\n          $m$$6$$65 = m$$6.fields[1];\n          $acc$$3$$66 = SetTreeModule$$$diffAux(comparer$$9, m$$6.fields[2], SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3));\n          continue SetTreeModule$$$diffAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$diff(comparer$$10, a$$2, b$$2) {\n  return SetTreeModule$$$diffAux(comparer$$10, b$$2, a$$2);\n}\nexport function SetTreeModule$$$union(comparer$$11, t1$$4, t2$$4) {\n  var $target$$73, h1$$1, h2$$1, k1$$4, k2$$16, t11$$2, t12$$2, t21$$1, t22$$1, t$$7, t$$8, k1$$5, t2$$5, k2$$17, t1$$5;\n\n  if (t1$$4.tag === 0) {\n    $target$$73 = 1;\n    t$$7 = t2$$4;\n  } else if (t1$$4.tag === 2) {\n    if (t2$$4.tag === 0) {\n      $target$$73 = 2;\n      t$$8 = t1$$4;\n    } else if (t2$$4.tag === 2) {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    } else {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    }\n  } else if (t2$$4.tag === 0) {\n    $target$$73 = 2;\n    t$$8 = t1$$4;\n  } else if (t2$$4.tag === 2) {\n    $target$$73 = 4;\n    k2$$17 = t2$$4.fields[0];\n    t1$$5 = t1$$4;\n  } else {\n    $target$$73 = 0;\n    h1$$1 = t1$$4.fields[3];\n    h2$$1 = t2$$4.fields[3];\n    k1$$4 = t1$$4.fields[0];\n    k2$$16 = t2$$4.fields[0];\n    t11$$2 = t1$$4.fields[1];\n    t12$$2 = t1$$4.fields[2];\n    t21$$1 = t2$$4.fields[1];\n    t22$$1 = t2$$4.fields[2];\n  }\n\n  switch ($target$$73) {\n    case 0:\n      {\n        if (h1$$1 > h2$$1) {\n          const patternInput$$4 = SetTreeModule$$$split(comparer$$11, k1$$4, t2$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t11$$2, patternInput$$4[0]), k1$$4, SetTreeModule$$$union(comparer$$11, t12$$2, patternInput$$4[2]));\n        } else {\n          const patternInput$$5 = SetTreeModule$$$split(comparer$$11, k2$$16, t1$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t21$$1, patternInput$$5[0]), k2$$16, SetTreeModule$$$union(comparer$$11, t22$$1, patternInput$$5[2]));\n        }\n      }\n\n    case 1:\n      {\n        return t$$7;\n      }\n\n    case 2:\n      {\n        return t$$8;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$11, k1$$5, t2$$5);\n      }\n\n    case 4:\n      {\n        return SetTreeModule$$$add(comparer$$11, k2$$17, t1$$5);\n      }\n  }\n}\nexport function SetTreeModule$$$intersectionAux($comparer$$12$$74, $b$$3$$75, $m$$7$$76, $acc$$4$$77) {\n  SetTreeModule$$$intersectionAux: while (true) {\n    const comparer$$12 = $comparer$$12$$74,\n          b$$3 = $b$$3$$75,\n          m$$7 = $m$$7$$76,\n          acc$$4 = $acc$$4$$77;\n\n    switch (m$$7.tag) {\n      case 2:\n        {\n          if (SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3)) {\n            return SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$4);\n          } else {\n            return acc$$4;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$4;\n        }\n\n      default:\n        {\n          const acc$$5 = SetTreeModule$$$intersectionAux(comparer$$12, b$$3, m$$7.fields[2], acc$$4);\n          const acc$$6 = SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3) ? SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$5) : acc$$5;\n          $comparer$$12$$74 = comparer$$12;\n          $b$$3$$75 = b$$3;\n          $m$$7$$76 = m$$7.fields[1];\n          $acc$$4$$77 = acc$$6;\n          continue SetTreeModule$$$intersectionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$intersection(comparer$$13, a$$3, b$$4) {\n  return SetTreeModule$$$intersectionAux(comparer$$13, b$$4, a$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$partition1(comparer$$14, f$$7, k$$16, acc1, acc2) {\n  if (f$$7(k$$16)) {\n    return [SetTreeModule$$$add(comparer$$14, k$$16, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule$$$add(comparer$$14, k$$16, acc2)];\n  }\n}\nexport function SetTreeModule$$$partitionAux($comparer$$15$$86, $f$$8$$87, $s$$4$$88, $acc_0$$89, $acc_1$$90) {\n  SetTreeModule$$$partitionAux: while (true) {\n    const comparer$$15 = $comparer$$15$$86,\n          f$$8 = $f$$8$$87,\n          s$$4 = $s$$4$$88,\n          acc_0 = $acc_0$$89,\n          acc_1 = $acc_1$$90;\n\n    switch (s$$4.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc_0, acc_1);\n        }\n\n      case 0:\n        {\n          return [acc_0, acc_1];\n        }\n\n      default:\n        {\n          const acc$$8 = SetTreeModule$$$partitionAux(comparer$$15, f$$8, s$$4.fields[2], acc_0, acc_1);\n          const acc$$9 = SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc$$8[0], acc$$8[1]);\n          $comparer$$15$$86 = comparer$$15;\n          $f$$8$$87 = f$$8;\n          $s$$4$$88 = s$$4.fields[1];\n          $acc_0$$89 = acc$$9[0];\n          $acc_1$$90 = acc$$9[1];\n          continue SetTreeModule$$$partitionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$partition(comparer$$16, f$$9, s$$5) {\n  const seed = [new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")];\n  return SetTreeModule$$$partitionAux(comparer$$16, f$$9, s$$5, seed[0], seed[1]);\n}\nexport function SetTreeModule$$$$007CMatchSetNode$007CMatchSetEmpty$007C(s$$6) {\n  switch (s$$6.tag) {\n    case 2:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")]);\n      }\n\n    case 0:\n      {\n        return new Choice(1, \"Choice2Of2\", void null);\n      }\n\n    default:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], s$$6.fields[1], s$$6.fields[2]]);\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElementAux($s$$7$$95, $n$$1$$96) {\n  SetTreeModule$$$minimumElementAux: while (true) {\n    const s$$7 = $s$$7$$95,\n          n$$1 = $n$$1$$96;\n\n    switch (s$$7.tag) {\n      case 2:\n        {\n          return s$$7.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$1;\n        }\n\n      default:\n        {\n          $s$$7$$95 = s$$7.fields[1];\n          $n$$1$$96 = s$$7.fields[0];\n          continue SetTreeModule$$$minimumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$minimumElementOpt(s$$8) {\n  switch (s$$8.tag) {\n    case 2:\n      {\n        return some(s$$8.fields[0]);\n      }\n\n    case 0:\n      {\n        return undefined;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$minimumElementAux(s$$8.fields[1], s$$8.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$maximumElementAux($s$$9$$98, $n$$2$$99) {\n  SetTreeModule$$$maximumElementAux: while (true) {\n    const s$$9 = $s$$9$$98,\n          n$$2 = $n$$2$$99;\n\n    switch (s$$9.tag) {\n      case 2:\n        {\n          return s$$9.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$2;\n        }\n\n      default:\n        {\n          $s$$9$$98 = s$$9.fields[2];\n          $n$$2$$99 = s$$9.fields[0];\n          continue SetTreeModule$$$maximumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$maximumElementOpt(s$$10) {\n  switch (s$$10.tag) {\n    case 2:\n      {\n        return some(s$$10.fields[0]);\n      }\n\n    case 0:\n      {\n        return undefined;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$maximumElementAux(s$$10.fields[2], s$$10.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElement(s$$11) {\n  const matchValue$$4 = SetTreeModule$$$minimumElementOpt(s$$11);\n\n  if (matchValue$$4 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$27 = value$$2(matchValue$$4);\n    return k$$27;\n  }\n}\nexport function SetTreeModule$$$maximumElement(s$$12) {\n  const matchValue$$5 = SetTreeModule$$$maximumElementOpt(s$$12);\n\n  if (matchValue$$5 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$28 = value$$2(matchValue$$5);\n    return k$$28;\n  }\n}\nexport const SetTreeModule$002ESetIterator$00601 = declare(function Set_SetTreeModule_SetIterator(stack, started) {\n  this.stack = stack;\n  this.started = started;\n}, Record);\nexport function SetTreeModule$002ESetIterator$00601$reflection($gen$$103) {\n  return record_type(\"Set.SetTreeModule.SetIterator`1\", [$gen$$103], SetTreeModule$002ESetIterator$00601, () => [[\"stack\", list_type(SetTree$00601$reflection($gen$$103))], [\"started\", bool_type]]);\n}\nexport function SetTreeModule$$$collapseLHS($stack$$104) {\n  SetTreeModule$$$collapseLHS: while (true) {\n    const stack = $stack$$104;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 2) {\n        return stack;\n      } else if (stack.head.tag === 1) {\n        $stack$$104 = new List(stack.head.fields[1], new List(SetTreeModule$$$SetOne(stack.head.fields[0]), new List(stack.head.fields[2], stack.tail)));\n        continue SetTreeModule$$$collapseLHS;\n      } else {\n        $stack$$104 = stack.tail;\n        continue SetTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$mkIterator(s$$13) {\n  return new SetTreeModule$002ESetIterator$00601(SetTreeModule$$$collapseLHS(new List(s$$13, new List())), false);\n}\nexport function SetTreeModule$$$notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nexport function SetTreeModule$$$alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nexport function SetTreeModule$$$current(i) {\n  if (i.started) {\n    const matchValue$$6 = i.stack;\n\n    if (matchValue$$6.tail == null) {\n      return SetTreeModule$$$alreadyFinished();\n    } else if (matchValue$$6.head.tag === 2) {\n      return matchValue$$6.head.fields[0];\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule$$$notStarted();\n  }\n}\nexport function SetTreeModule$$$moveNext(i$$1) {\n  if (i$$1.started) {\n    const matchValue$$7 = i$$1.stack;\n\n    if (matchValue$$7.tail == null) {\n      return false;\n    } else if (matchValue$$7.head.tag === 2) {\n      i$$1.stack = SetTreeModule$$$collapseLHS(matchValue$$7.tail);\n      return !(i$$1.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$1.started = true;\n    return !(i$$1.stack.tail == null);\n  }\n}\nexport const SetTreeModule$002EmkIEnumerator$00601 = declare(function Set_SetTreeModule_mkIEnumerator(s$$14) {\n  const $this$$1 = this;\n  $this$$1.s = s$$14;\n  $this$$1.i = SetTreeModule$$$mkIterator($this$$1.s);\n  void null;\n});\nexport function SetTreeModule$002EmkIEnumerator$00601$reflection($gen$$108) {\n  return class_type(\"Set.SetTreeModule.mkIEnumerator`1\", [$gen$$108], SetTreeModule$002EmkIEnumerator$00601);\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$14) {\n  return this instanceof SetTreeModule$002EmkIEnumerator$00601 ? SetTreeModule$002EmkIEnumerator$00601.call(this, s$$14) : new SetTreeModule$002EmkIEnumerator$00601(s$$14);\n}\nObject.defineProperty(SetTreeModule$002EmkIEnumerator$00601.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return SetTreeModule$$$current(__.i);\n  }\n});\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return SetTreeModule$$$moveNext(__$$1.i);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = SetTreeModule$$$mkIterator(__$$2.s);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Dispose = function () {\n  void null;\n};\n\nexport function SetTreeModule$$$mkIEnumerator(s$$15) {\n  return SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$15);\n}\nexport function SetTreeModule$$$toSeq(s$$16) {\n  const en = SetTreeModule$$$mkIEnumerator(s$$16);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return undefined;\n    }\n  }, en);\n}\nexport function SetTreeModule$$$compareStacks($comparer$$17$$112, $l1$$113, $l2$$114) {\n  SetTreeModule$$$compareStacks: while (true) {\n    const comparer$$17 = $comparer$$17$$112,\n          l1 = $l1$$113,\n          l2 = $l2$$114;\n    var $target$$115, t1$$6, t2$$6, n1k, n2k, t1$$7, t2$$7, n1k$$1, n2k$$1, n2r, t1$$8, t2$$8, emp, n1k$$2, n1r, n2k$$2, t1$$9, t2$$9, n1k$$3, n1r$$1, n2k$$3, n2r$$1, t1$$10, t2$$10, n1k$$4, t1$$11, n1k$$5, n1l, n1r$$2, t1$$12, n2k$$4, t2$$11, n2k$$5, n2l, n2r$$2, t2$$12;\n\n    if (l1.tail != null) {\n      if (l2.tail != null) {\n        if (l2.head.tag === 2) {\n          if (l1.head.tag === 2) {\n            $target$$115 = 4;\n            n1k = l1.head.fields[0];\n            n2k = l2.head.fields[0];\n            t1$$7 = l1.tail;\n            t2$$7 = l2.tail;\n          } else if (l1.head.tag === 1) {\n            if (l1.head.fields[1].tag === 0) {\n              $target$$115 = 6;\n              emp = l1.head.fields[1];\n              n1k$$2 = l1.head.fields[0];\n              n1r = l1.head.fields[2];\n              n2k$$2 = l2.head.fields[0];\n              t1$$9 = l1.tail;\n              t2$$9 = l2.tail;\n            } else {\n              $target$$115 = 9;\n              n1k$$5 = l1.head.fields[0];\n              n1l = l1.head.fields[1];\n              n1r$$2 = l1.head.fields[2];\n              t1$$12 = l1.tail;\n            }\n          } else {\n            $target$$115 = 10;\n            n2k$$4 = l2.head.fields[0];\n            t2$$11 = l2.tail;\n          }\n        } else if (l2.head.tag === 1) {\n          if (l2.head.fields[1].tag === 0) {\n            if (l1.head.tag === 2) {\n              $target$$115 = 5;\n              n1k$$1 = l1.head.fields[0];\n              n2k$$1 = l2.head.fields[0];\n              n2r = l2.head.fields[2];\n              t1$$8 = l1.tail;\n              t2$$8 = l2.tail;\n            } else if (l1.head.tag === 1) {\n              if (l1.head.fields[1].tag === 0) {\n                $target$$115 = 7;\n                n1k$$3 = l1.head.fields[0];\n                n1r$$1 = l1.head.fields[2];\n                n2k$$3 = l2.head.fields[0];\n                n2r$$1 = l2.head.fields[2];\n                t1$$10 = l1.tail;\n                t2$$10 = l2.tail;\n              } else {\n                $target$$115 = 9;\n                n1k$$5 = l1.head.fields[0];\n                n1l = l1.head.fields[1];\n                n1r$$2 = l1.head.fields[2];\n                t1$$12 = l1.tail;\n              }\n            } else {\n              $target$$115 = 11;\n              n2k$$5 = l2.head.fields[0];\n              n2l = l2.head.fields[1];\n              n2r$$2 = l2.head.fields[2];\n              t2$$12 = l2.tail;\n            }\n          } else if (l1.head.tag === 2) {\n            $target$$115 = 8;\n            n1k$$4 = l1.head.fields[0];\n            t1$$11 = l1.tail;\n          } else if (l1.head.tag === 1) {\n            $target$$115 = 9;\n            n1k$$5 = l1.head.fields[0];\n            n1l = l1.head.fields[1];\n            n1r$$2 = l1.head.fields[2];\n            t1$$12 = l1.tail;\n          } else {\n            $target$$115 = 11;\n            n2k$$5 = l2.head.fields[0];\n            n2l = l2.head.fields[1];\n            n2r$$2 = l2.head.fields[2];\n            t2$$12 = l2.tail;\n          }\n        } else if (l1.head.tag === 2) {\n          $target$$115 = 8;\n          n1k$$4 = l1.head.fields[0];\n          t1$$11 = l1.tail;\n        } else if (l1.head.tag === 1) {\n          $target$$115 = 9;\n          n1k$$5 = l1.head.fields[0];\n          n1l = l1.head.fields[1];\n          n1r$$2 = l1.head.fields[2];\n          t1$$12 = l1.tail;\n        } else {\n          $target$$115 = 3;\n          t1$$6 = l1.tail;\n          t2$$6 = l2.tail;\n        }\n      } else {\n        $target$$115 = 2;\n      }\n    } else if (l2.tail != null) {\n      $target$$115 = 1;\n    } else {\n      $target$$115 = 0;\n    }\n\n    switch ($target$$115) {\n      case 0:\n        {\n          return 0;\n        }\n\n      case 1:\n        {\n          return -1 | 0;\n        }\n\n      case 2:\n        {\n          return 1;\n        }\n\n      case 3:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = t1$$6;\n          $l2$$114 = t2$$6;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 4:\n        {\n          const c$$7 = comparer$$17.Compare(n1k, n2k) | 0;\n\n          if (c$$7 !== 0) {\n            return c$$7 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = t1$$7;\n            $l2$$114 = t2$$7;\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 5:\n        {\n          const c$$8 = comparer$$17.Compare(n1k$$1, n2k$$1) | 0;\n\n          if (c$$8 !== 0) {\n            return c$$8 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), t1$$8);\n            $l2$$114 = new List(n2r, t2$$8);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 6:\n        {\n          const c$$9 = comparer$$17.Compare(n1k$$2, n2k$$2) | 0;\n\n          if (c$$9 !== 0) {\n            return c$$9 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r, t1$$9);\n            $l2$$114 = new List(emp, t2$$9);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 7:\n        {\n          const c$$10 = comparer$$17.Compare(n1k$$3, n2k$$3) | 0;\n\n          if (c$$10 !== 0) {\n            return c$$10 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r$$1, t1$$10);\n            $l2$$114 = new List(n2r$$1, t2$$10);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 8:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n1k$$4), t1$$11));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 9:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(n1l, new List(SetTreeModule$$$SetNode(n1k$$5, new SetTree$00601(0, \"SetEmpty\"), n1r$$2, 0), t1$$12));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 10:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n2k$$4), t2$$11));\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 11:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(n2l, new List(SetTreeModule$$$SetNode(n2k$$5, new SetTree$00601(0, \"SetEmpty\"), n2r$$2, 0), t2$$12));\n          continue SetTreeModule$$$compareStacks;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$compare(comparer$$18, s1, s2) {\n  if (s1.tag === 0) {\n    if (s2.tag === 0) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (s2.tag === 0) {\n    return 1;\n  } else {\n    return SetTreeModule$$$compareStacks(comparer$$18, new List(s1, new List()), new List(s2, new List())) | 0;\n  }\n}\nexport function SetTreeModule$$$choose(s$$17) {\n  return SetTreeModule$$$minimumElement(s$$17);\n}\nexport function SetTreeModule$$$loop($m$$8$$120, $acc$$10$$121) {\n  SetTreeModule$$$loop: while (true) {\n    const m$$8 = $m$$8$$120,\n          acc$$10 = $acc$$10$$121;\n\n    switch (m$$8.tag) {\n      case 2:\n        {\n          return new List(m$$8.fields[0], acc$$10);\n        }\n\n      case 0:\n        {\n          return acc$$10;\n        }\n\n      default:\n        {\n          $m$$8$$120 = m$$8.fields[1];\n          $acc$$10$$121 = new List(m$$8.fields[0], SetTreeModule$$$loop(m$$8.fields[2], acc$$10));\n          continue SetTreeModule$$$loop;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$toList(s$$18) {\n  return SetTreeModule$$$loop(s$$18, new List());\n}\nexport function SetTreeModule$$$copyToArray(s$$19, arr, i$$2) {\n  let j = i$$2 | 0;\n  SetTreeModule$$$iter(function (x$$8) {\n    arr[j] = x$$8;\n    j = j + 1;\n  }, s$$19);\n}\nexport function SetTreeModule$$$mkFromEnumerator($comparer$$19$$126, $acc$$11$$127, $e$$128) {\n  SetTreeModule$$$mkFromEnumerator: while (true) {\n    const comparer$$19 = $comparer$$19$$126,\n          acc$$11 = $acc$$11$$127,\n          e = $e$$128;\n\n    if (e.MoveNext()) {\n      $comparer$$19$$126 = comparer$$19;\n      $acc$$11$$127 = SetTreeModule$$$add(comparer$$19, e.Current, acc$$11);\n      $e$$128 = e;\n      continue SetTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$11;\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$ofSeq(comparer$$20, c$$11) {\n  const ie = getEnumerator(c$$11);\n\n  try {\n    return SetTreeModule$$$mkFromEnumerator(comparer$$20, new SetTree$00601(0, \"SetEmpty\"), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    } else {\n      void null;\n    }\n  }\n}\nexport function SetTreeModule$$$ofArray(comparer$$21, arr$$1) {\n  let acc$$12 = new SetTree$00601(0, \"SetEmpty\");\n\n  for (let i$$3 = 0; i$$3 <= arr$$1.length - 1; i$$3++) {\n    acc$$12 = SetTreeModule$$$add(comparer$$21, arr$$1[i$$3], acc$$12);\n  }\n\n  return acc$$12;\n}\nexport const FSharpSet = declare(function Set_Set(comparer$$22, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$22;\n  $this$$2.tree = tree;\n  void null;\n});\nexport function FSharpSet$reflection($gen$$133) {\n  return class_type(\"Set.FSharpSet\", [$gen$$133], FSharpSet);\n}\nexport function FSharpSet$$$$002Ector$$2528C5CB(comparer$$22, tree) {\n  return this instanceof FSharpSet ? FSharpSet.call(this, comparer$$22, tree) : new FSharpSet(comparer$$22, tree);\n}\nexport function FSharpSet$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpSet$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpSet$$Add$$2B595(s$$20, x$$9) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$20), SetTreeModule$$$add(FSharpSet$$get_Comparer(s$$20), x$$9, FSharpSet$$get_Tree(s$$20)));\n}\nexport function FSharpSet$$Remove$$2B595(s$$21, x$$10) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$21), SetTreeModule$$$remove(FSharpSet$$get_Comparer(s$$21), x$$10, FSharpSet$$get_Tree(s$$21)));\n}\nexport function FSharpSet$$get_Count(s$$22) {\n  return SetTreeModule$$$count(FSharpSet$$get_Tree(s$$22));\n}\nexport function FSharpSet$$Contains$$2B595(s$$23, x$$11) {\n  return SetTreeModule$$$mem(FSharpSet$$get_Comparer(s$$23), x$$11, FSharpSet$$get_Tree(s$$23));\n}\nexport function FSharpSet$$Iterate$$5028453F(s$$24, x$$12) {\n  SetTreeModule$$$iter(x$$12, FSharpSet$$get_Tree(s$$24));\n}\nexport function FSharpSet$$Fold(s$$25, f$$10, z) {\n  return SetTreeModule$$$fold(function (x$$13, z$$1) {\n    return f$$10(z$$1, x$$13);\n  }, z, FSharpSet$$get_Tree(s$$25));\n}\nexport function FSharpSet$$get_IsEmpty(s$$26) {\n  return SetTreeModule$$$isEmpty(FSharpSet$$get_Tree(s$$26));\n}\nexport function FSharpSet$$Partition$$Z1D55A0D7(s$$27, f$$11) {\n  const matchValue$$10 = FSharpSet$$get_Tree(s$$27);\n\n  if (matchValue$$10.tag === 0) {\n    return [s$$27, s$$27];\n  } else {\n    const patternInput$$6 = SetTreeModule$$$partition(FSharpSet$$get_Comparer(s$$27), f$$11, FSharpSet$$get_Tree(s$$27));\n    return [FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[0]), FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[1])];\n  }\n}\nexport function FSharpSet$$Filter$$Z1D55A0D7(s$$28, f$$12) {\n  const matchValue$$11 = FSharpSet$$get_Tree(s$$28);\n\n  if (matchValue$$11.tag === 0) {\n    return s$$28;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$28), SetTreeModule$$$filter(FSharpSet$$get_Comparer(s$$28), f$$12, FSharpSet$$get_Tree(s$$28)));\n  }\n}\nexport function FSharpSet$$Map$$7597B8F7(s$$29, f$$13, comparer$$23) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$23, SetTreeModule$$$fold(function (acc$$13, k$$33) {\n    return SetTreeModule$$$add(comparer$$23, f$$13(k$$33), acc$$13);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$29)));\n}\nexport function FSharpSet$$Exists$$Z1D55A0D7(s$$30, f$$14) {\n  return SetTreeModule$$$exists(f$$14, FSharpSet$$get_Tree(s$$30));\n}\nexport function FSharpSet$$ForAll$$Z1D55A0D7(s$$31, f$$15) {\n  return SetTreeModule$$$forall(f$$15, FSharpSet$$get_Tree(s$$31));\n}\nexport function FSharpSet$$$op_Subtraction(a$$4, b$$5) {\n  const matchValue$$12 = FSharpSet$$get_Tree(a$$4);\n\n  if (matchValue$$12.tag === 0) {\n    return a$$4;\n  } else {\n    const matchValue$$13 = FSharpSet$$get_Tree(b$$5);\n\n    if (matchValue$$13.tag === 0) {\n      return a$$4;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$4), SetTreeModule$$$diff(FSharpSet$$get_Comparer(a$$4), FSharpSet$$get_Tree(a$$4), FSharpSet$$get_Tree(b$$5)));\n    }\n  }\n}\nexport function FSharpSet$$$op_Addition(a$$5, b$$6) {\n  const matchValue$$14 = FSharpSet$$get_Tree(b$$6);\n\n  if (matchValue$$14.tag === 0) {\n    return a$$5;\n  } else {\n    const matchValue$$15 = FSharpSet$$get_Tree(a$$5);\n\n    if (matchValue$$15.tag === 0) {\n      return b$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$5), SetTreeModule$$$union(FSharpSet$$get_Comparer(a$$5), FSharpSet$$get_Tree(a$$5), FSharpSet$$get_Tree(b$$6)));\n    }\n  }\n}\nexport function FSharpSet$$$Intersection$$Z3BE9BFE0(a$$6, b$$7) {\n  const matchValue$$16 = FSharpSet$$get_Tree(b$$7);\n\n  if (matchValue$$16.tag === 0) {\n    return b$$7;\n  } else {\n    const matchValue$$17 = FSharpSet$$get_Tree(a$$6);\n\n    if (matchValue$$17.tag === 0) {\n      return a$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$6), SetTreeModule$$$intersection(FSharpSet$$get_Comparer(a$$6), FSharpSet$$get_Tree(a$$6), FSharpSet$$get_Tree(b$$7)));\n    }\n  }\n}\nexport function FSharpSet$$$IntersectionMany$$Z15B59630(sets) {\n  return reduce(FSharpSet$$$Intersection$$Z3BE9BFE0, sets);\n}\nexport function FSharpSet$$$Equality$$Z3BE9BFE0(a$$7, b$$8) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$7), FSharpSet$$get_Tree(a$$7), FSharpSet$$get_Tree(b$$8)) === 0;\n}\nexport function FSharpSet$$$Compare$$Z3BE9BFE0(a$$8, b$$9) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$8), FSharpSet$$get_Tree(a$$8), FSharpSet$$get_Tree(b$$9));\n}\nexport function FSharpSet$$get_Choose(x$$14) {\n  return SetTreeModule$$$choose(FSharpSet$$get_Tree(x$$14));\n}\nexport function FSharpSet$$get_MinimumElement(x$$15) {\n  return SetTreeModule$$$minimumElement(FSharpSet$$get_Tree(x$$15));\n}\nexport function FSharpSet$$get_MaximumElement(x$$16) {\n  return SetTreeModule$$$maximumElement(FSharpSet$$get_Tree(x$$16));\n}\nexport function FSharpSet$$IsSubsetOf$$6A20B1FF(x$$17, y) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$17), FSharpSet$$get_Tree(x$$17), FSharpSet$$get_Tree(y));\n}\nexport function FSharpSet$$IsSupersetOf$$6A20B1FF(x$$18, y$$1) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$18), FSharpSet$$get_Tree(y$$1), FSharpSet$$get_Tree(x$$18));\n}\nexport function FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$19, y$$2) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$19), FSharpSet$$get_Tree(x$$19), FSharpSet$$get_Tree(y$$2));\n}\nexport function FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$20, y$$3) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$20), FSharpSet$$get_Tree(y$$3), FSharpSet$$get_Tree(x$$20));\n}\n\nFSharpSet.prototype.toString = function () {\n  var strings;\n  const this$ = this;\n  return \"set [\" + (strings = map$$1(function (x$$21) {\n    let copyOfStruct = x$$21;\n    return String(copyOfStruct);\n  }, this$), (join(\"; \", strings))) + \"]\";\n};\n\nFSharpSet.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n  let res = 0;\n  const e$$1 = SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const x$$22 = res | 0;\n    const y$$4 = structuralHash(e$$1.Current) | 0;\n    res = (x$$22 << 1) + y$$4 + 631;\n  }\n\n  return Math.abs(res) | 0;\n};\n\nFSharpSet.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$2), FSharpSet$$get_Tree(this$$$2), FSharpSet$$get_Tree(that)) === 0;\n};\n\nFSharpSet.prototype.CompareTo = function (that$$1) {\n  const this$$$3 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$3), FSharpSet$$get_Tree(this$$$3), FSharpSet$$get_Tree(that$$1)) | 0;\n};\n\nFSharpSet.prototype[Symbol.iterator] = function () {\n  const s$$32 = this;\n  return toIterator(SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(s$$32)));\n};\n\nexport function isEmpty(s$$33) {\n  return FSharpSet$$get_IsEmpty(s$$33);\n}\nexport function contains(x$$23, s$$34) {\n  return FSharpSet$$Contains$$2B595(s$$34, x$$23);\n}\nexport function add(x$$24, s$$35) {\n  return FSharpSet$$Add$$2B595(s$$35, x$$24);\n}\nexport function singleton(x$$25, comparer$$24) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$24, new SetTree$00601(2, \"SetOne\", x$$25));\n}\nexport function remove(x$$26, s$$36) {\n  return FSharpSet$$Remove$$2B595(s$$36, x$$26);\n}\nexport function union(s1$$2, s2$$2) {\n  return FSharpSet$$$op_Addition(s1$$2, s2$$2);\n}\nexport function unionMany(sets$$1, comparer$$25) {\n  return fold$$1(FSharpSet$$$op_Addition, FSharpSet$$$$002Ector$$2528C5CB(comparer$$25, new SetTree$00601(0, \"SetEmpty\")), sets$$1);\n}\nexport function intersect(s1$$3, s2$$3) {\n  return FSharpSet$$$Intersection$$Z3BE9BFE0(s1$$3, s2$$3);\n}\nexport function intersectMany(sets$$2) {\n  return FSharpSet$$$IntersectionMany$$Z15B59630(sets$$2);\n}\nexport function iterate(f$$16, s$$37) {\n  FSharpSet$$Iterate$$5028453F(s$$37, f$$16);\n}\nexport function empty(comparer$$26) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$26, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function forAll(f$$17, s$$38) {\n  return FSharpSet$$ForAll$$Z1D55A0D7(s$$38, f$$17);\n}\nexport function exists(f$$18, s$$39) {\n  return FSharpSet$$Exists$$Z1D55A0D7(s$$39, f$$18);\n}\nexport function filter(f$$19, s$$40) {\n  return FSharpSet$$Filter$$Z1D55A0D7(s$$40, f$$19);\n}\nexport function partition(f$$20, s$$41) {\n  return FSharpSet$$Partition$$Z1D55A0D7(s$$41, f$$20);\n}\nexport function fold(f$$21, z$$2, s$$42) {\n  return SetTreeModule$$$fold(f$$21, z$$2, FSharpSet$$get_Tree(s$$42));\n}\nexport function foldBack(f$$22, s$$43, z$$3) {\n  return SetTreeModule$$$foldBack(f$$22, FSharpSet$$get_Tree(s$$43), z$$3);\n}\nexport function map(f$$23, s$$44, comparer$$27) {\n  return FSharpSet$$Map$$7597B8F7(s$$44, f$$23, comparer$$27);\n}\nexport function count(s$$45) {\n  return FSharpSet$$get_Count(s$$45);\n}\nexport function minimumElement(s$$46) {\n  return FSharpSet$$get_MinimumElement(s$$46);\n}\nexport function maximumElement(s$$47) {\n  return FSharpSet$$get_MaximumElement(s$$47);\n}\nexport function ofList(li, comparer$$28) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$28, SetTreeModule$$$ofSeq(comparer$$28, li));\n}\nexport function ofArray(arr$$2, comparer$$29) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$29, SetTreeModule$$$ofArray(comparer$$29, arr$$2));\n}\nexport function toList(s$$48) {\n  return SetTreeModule$$$toList(FSharpSet$$get_Tree(s$$48));\n}\nexport function toArray(s$$49, cons) {\n  const n$$3 = count(s$$49) | 0;\n  const res$$1 = new cons(n$$3);\n  SetTreeModule$$$copyToArray(FSharpSet$$get_Tree(s$$49), res$$1, 0);\n  return res$$1;\n}\nexport function toSeq(s$$50) {\n  return SetTreeModule$$$toSeq(FSharpSet$$get_Tree(s$$50));\n}\nexport function ofSeq(elements, comparer$$30) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$30, SetTreeModule$$$ofSeq(comparer$$30, elements));\n}\nexport function difference(x$$28, y$$6) {\n  return FSharpSet$$$op_Subtraction(x$$28, y$$6);\n}\nexport function isSubset(x$$29, y$$7) {\n  return FSharpSet$$IsSubsetOf$$6A20B1FF(x$$29, y$$7);\n}\nexport function isSuperset(x$$30, y$$8) {\n  return FSharpSet$$IsSupersetOf$$6A20B1FF(x$$30, y$$8);\n}\nexport function isProperSubset(x$$31, y$$9) {\n  return FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$31, y$$9);\n}\nexport function isProperSuperset(x$$32, y$$10) {\n  return FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$32, y$$10);\n}\nexport function minElement(s$$51) {\n  return FSharpSet$$get_MinimumElement(s$$51);\n}\nexport function maxElement(s$$52) {\n  return FSharpSet$$get_MaximumElement(s$$52);\n}\n\nfunction createMutablePrivate(comparer$$31, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return SetTreeModule$$$count(tree$$1);\n    },\n\n    add(x$$33) {\n      const this$$$4 = this;\n      tree$$1 = SetTreeModule$$$add(comparer$$31, x$$33, tree$$1);\n      return this$$$4;\n    },\n\n    add_(x$$34) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$34, tree$$1)) {\n        return false;\n      } else {\n        tree$$1 = SetTreeModule$$$add(comparer$$31, x$$34, tree$$1);\n        return true;\n      }\n    },\n\n    clear() {\n      tree$$1 = new SetTree$00601(0, \"SetEmpty\");\n    },\n\n    delete(x$$35) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$35, tree$$1)) {\n        tree$$1 = SetTreeModule$$$remove(comparer$$31, x$$35, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    has(x$$36) {\n      return SetTreeModule$$$mem(comparer$$31, x$$36, tree$$1);\n    },\n\n    keys() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n\n    values() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n\n    entries() {\n      const source = SetTreeModule$$$toSeq(tree$$1);\n      return map$$1(function mapping(v) {\n        return [v, v];\n      }, source);\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(SetTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return SetTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source$$1, comparer$$32) {\n  const set = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(source$$1, comparer$$32);\n  return set;\n}\nexport function distinct(xs, comparer$$33) {\n  return delay(function () {\n    const set$$1 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$33);\n    return collect(function (x$$37) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$1, x$$37) ? singleton$$1(x$$37) : empty$$1();\n    }, xs);\n  });\n}\nexport function distinctBy(projection, xs$$1, comparer$$34) {\n  return delay(function () {\n    const set$$2 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$34);\n    return collect(function (x$$38) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$2, projection(x$$38)) ? singleton$$1(x$$38) : empty$$1();\n    }, xs$$1);\n  });\n}\nexport function unionWith(s1$$4, s2$$4) {\n  return fold$$1(function folder(acc$$14, x$$39) {\n    return acc$$14.add(x$$39);\n  }, s1$$4, s2$$4);\n}\nexport function intersectWith(s1$$5, s2$$5, comparer$$35) {\n  const s2$$6 = ofSeq(s2$$5, comparer$$35);\n  iterate$$1(function (x$$40) {\n    if (!FSharpSet$$Contains$$2B595(s2$$6, x$$40)) {\n      const value = s1$$5.delete(x$$40);\n      void value;\n    } else {\n      void null;\n    }\n  }, s1$$5);\n}\nexport function exceptWith(s1$$6, s2$$7) {\n  iterate$$1(function (x$$41) {\n    const value$$1 = s1$$6.delete(x$$41);\n    void value$$1;\n  }, s2$$7);\n}\nexport function isSubsetOf(s1$$7, s2$$8, comparer$$36) {\n  return isSubset(ofSeq(s1$$7, comparer$$36), ofSeq(s2$$8, comparer$$36));\n}\nexport function isSupersetOf(s1$$8, s2$$9, comparer$$37) {\n  return isSuperset(ofSeq(s1$$8, comparer$$37), ofSeq(s2$$9, comparer$$37));\n}\nexport function isProperSubsetOf(s1$$9, s2$$10, comparer$$38) {\n  return isProperSubset(ofSeq(s1$$9, comparer$$38), ofSeq(s2$$10, comparer$$38));\n}\nexport function isProperSupersetOf(s1$$10, s2$$11, comparer$$39) {\n  return isProperSuperset(ofSeq(s1$$10, comparer$$39), ofSeq(s2$$11, comparer$$39));\n}","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            for (let i = 0; i < len - 2; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[len - 2];\n            match.input = arguments[len - 1];\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        // $0 doesn't work with JS regex, see #1155\n        replacement = replacement.replace(/\\$0/g, (_s) => \"$&\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n//# sourceMappingURL=RegExp.js.map","import { toString as dateToString } from \"./Date\";\nimport Decimal from \"./Decimal\";\nimport Long, * as _Long from \"./Long\";\nimport { escape } from \"./RegExp\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\n// These are used for formatting and only take longs and decimals into account (no bigint)\nfunction isNumeric(x) {\n    return typeof x === \"number\" || x instanceof Long || x instanceof Decimal;\n}\nfunction isLessThan(x, y) {\n    if (x instanceof Long) {\n        return _Long.compare(x, y) < 0;\n    }\n    else if (x instanceof Decimal) {\n        return x.cmp(y) < 0;\n    }\n    else {\n        return x < y;\n    }\n}\nfunction multiply(x, y) {\n    if (x instanceof Long) {\n        return _Long.op_Multiply(x, y);\n    }\n    else if (x instanceof Decimal) {\n        return x.mul(y);\n    }\n    else {\n        return x * y;\n    }\n}\nfunction toFixed(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toFixed(dp).substr(1);\n    }\n    else {\n        return x.toFixed(dp);\n    }\n}\nfunction toPrecision(x, sd) {\n    if (x instanceof Long) {\n        return String(x) + (0).toPrecision(sd).substr(1);\n    }\n    else {\n        return x.toPrecision(sd);\n    }\n}\nfunction toExponential(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toExponential(dp).substr(1);\n    }\n    else {\n        return x.toExponential(dp);\n    }\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return _Long.toString(x.unsigned ? x : _Long.fromBytes(_Long.toBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return arg.cont((x) => { console.log(x); });\n}\nexport function toConsoleError(arg) {\n    return arg.cont((x) => { console.error(x); });\n}\nexport function toText(arg) {\n    return arg.cont((x) => x);\n}\nexport function toFail(arg) {\n    return arg.cont((x) => { throw new Error(x); });\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, padLength, precision, format) => {\n        let sign = \"\";\n        if (isNumeric(rep)) {\n            if (format.toLowerCase() !== \"x\") {\n                if (isLessThan(rep, 0)) {\n                    rep = multiply(rep, -1);\n                    sign = \"-\";\n                }\n                else {\n                    if (flags.indexOf(\" \") >= 0) {\n                        sign = \" \";\n                    }\n                    else if (flags.indexOf(\"+\") >= 0) {\n                        sign = \"+\";\n                    }\n                }\n            }\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 6;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"x\":\n                    rep = toHex(rep);\n                    break;\n                case \"X\":\n                    rep = toHex(rep).toUpperCase();\n                    break;\n                default: // AOid\n                    rep = String(rep);\n                    break;\n            }\n        }\n        padLength = parseInt(padLength, 10);\n        if (!isNaN(padLength)) {\n            const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n            const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n            const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n            if (ch === \"0\") {\n                rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n                rep = sign + rep;\n            }\n            else {\n                rep = padLeft(sign + rep, padLength, ch, minusFlag);\n            }\n        }\n        else {\n            rep = sign + rep;\n        }\n        const once = prefix + rep;\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). Trims braces. */\nexport function validateGuid(str, doNotThrow) {\n    const trimmedAndLowered = trim(str, \"{\", \"}\").toLowerCase();\n    if (guidRegex.test(trimmedAndLowered)) {\n        return doNotThrow ? [true, trimmedAndLowered] : trimmedAndLowered;\n    }\n    else if (doNotThrow) {\n        return [false, \"00000000-0000-0000-0000-000000000000\"];\n    }\n    throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n//# sourceMappingURL=String.js.map","﻿namespace Feliz.Recoil\n\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen System.ComponentModel\n\n[<EditorBrowsable(EditorBrowsableState.Never)>]\n[<StringEnum(CaseRules.None);RequireQualifiedAccess>]\ntype RecoilValueTag =\n    | Writeable\n    | Readonly\n\n/// Marker interface to designate read only RecoilValues.\ntype ReadOnly = interface end\n\n/// Marker interface to designate mutable RecoilValues.\ntype ReadWrite = interface end\n\n[<Erase>]\ntype RecoilValue<'T,'ReadPerm> =\n    [<Emit(\"$0.key\")>]\n    member _.key : string = jsNative\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.tag\")>]\n    member _.tag : RecoilValueTag = jsNative\n\n[<EditorBrowsable(EditorBrowsableState.Never)>]\ntype DefaultValue = interface end\n\n/// Methods provided in selectors for reading RecoilValues.\n[<Erase>]\ntype SelectorGetter =\n    /// Gets the value of a RecoilValue.\n    [<Emit(\"$0.get($1)\")>]\n    member _.get (recoilValue: RecoilValue<'T,ReadOnly>) : 'T = jsNative\n    /// Gets the value of a RecoilValue.\n    [<Emit(\"$0.get($1)\")>]\n    member _.get (recoilValue: RecoilValue<'T,ReadWrite>) : 'T = jsNative\n\n[<AutoOpen>]\nmodule SelectorGetterMagic =\n    type SelectorGetter with\n        [<Emit(\"$0.get($1)\")>]\n        member _.get (recoilValue: RecoilValue<'T,'Mode>) : 'T = jsNative\n\n/// Methods provided in selectors for composing new RecoilValues.\n[<Erase>]\ntype SelectorMethods =\n    /// Gets the value of a RecoilValue.\n    [<Emit(\"$0.get($1)\")>]\n    member _.get (recoilValue: RecoilValue<'T,ReadOnly>) : 'T = jsNative\n    /// Gets the value of a RecoilValue.\n    [<Emit(\"$0.get($1)\")>]\n    member _.get (recoilValue: RecoilValue<'T,ReadWrite>) : 'T = jsNative\n\n    /// Sets the value of a RecoilValue.\n    [<Emit(\"$0.set($1, $2)\")>]\n    member _.set (recoilValue: RecoilValue<'T,ReadWrite>, newValue: DefaultValue) : unit = jsNative\n    /// Sets the value of a RecoilValue.\n    [<Emit(\"$0.set($1, $2)\")>]\n    member _.set (recoilValue: RecoilValue<'T,ReadWrite>, newValue: 'T -> 'T) : unit = jsNative\n    /// Sets the value of a RecoilValue.\n    [<Emit(\"$0.set($1, $2)\")>]\n    member _.set (recoilValue: RecoilValue<'T,ReadWrite>, newValue: 'T -> DefaultValue) : unit = jsNative\n\n    /// Sets the value of a RecoilValue back to the default value.\n    [<Emit(\"$0.reset($1)\")>]\n    member _.reset (recoilValue: RecoilValue<'T,ReadWrite>) : unit = jsNative\n\n[<AutoOpen;Erase>]\nmodule SelectorMagic =\n    type SelectorMethods with\n        /// Sets the value of a RecoilValue.\n        [<Emit(\"$0.set($1, $2)\")>]\n        member _.set (recoilValue: RecoilValue<'T,ReadWrite>, newValue: 'T) : unit = jsNative\n\n[<EditorBrowsable(EditorBrowsableState.Never)>]\n[<StringEnum;RequireQualifiedAccess>]\ntype LoadableStateStr =\n    | HasValue\n    | HasError\n    | Loading\n\n/// Represents the current possible state of a Loadable.\ntype LoadableState<'T> =\n    | HasValue of 'T\n    | HasError of exn\n    | Loading of JS.Promise<'T>\n\n[<EditorBrowsable(EditorBrowsableState.Never)>]\ntype ResolvedLoadablePromiseInfo<'T> =\n    abstract value: 'T\n\n/// A RecoilValue that may not yet be resolved to a value.\n[<Erase>]\ntype Loadable<'T> =\n    /// Tries to get the async operation of a Loadable.\n    member inline this.asyncMaybe () =\n        this.promiseMaybe() |> Option.map Async.AwaitPromise\n    /// Gets the async operation of a Loadable or throws.\n    member inline this.asyncOrThrow () =\n        this.promiseOrThrow() |> Async.AwaitPromise\n\n    /// Tries to get the exception of a Loadable.\n    [<Emit(\"$0.errorMaybe()\")>]\n    member _.errorMaybe () : exn option = jsNative\n\n    /// Gets the exception of a Loadable or throws.\n    [<Emit(\"$0.errorOrThrow()\")>]\n    member _.errorOrThrow () : exn = jsNative\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.getValue()\")>]\n    member _.getValue' () : 'T = jsNative\n    /// Gets the result of a Loadable.\n    member inline this.getValue () = \n        try this.getValue'() |> Ok\n        with e -> Error e\n\n    /// Maps the value of a Loadable.\n    [<Emit(\"$0.map($1)\")>]\n    member _.map (mapping: 'T -> JS.Promise<'U>) : Loadable<'U> = jsNative\n    /// Maps the value of a Loadable.\n    member inline this.map (mapping: 'T -> Async<'U>) =\n        let test = fun o -> o |> mapping |> Async.StartAsPromise\n        this.map(test)\n    \n    /// Tries to get the promise of a Loadable.\n    [<Emit(\"$0.promiseMaybe()\")>]\n    member _.promiseMaybe () : JS.Promise<'T> option = jsNative\n\n    /// Gets the promise of a Loadable or throws.\n    [<Emit(\"$0.promiseOrThrow()\")>]\n    member _.promiseOrThrow () : JS.Promise<'T> = jsNative\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.state\")>]\n    member _.state' : LoadableStateStr = jsNative\n    /// Gets the current state and corresponding value of a Loadable.\n    member inline this.state () =\n        match this.state' with\n        | LoadableStateStr.Loading ->\n            unbox<JS.Promise<ResolvedLoadablePromiseInfo<'T>>> this.contents\n            |> Promise.map (fun o -> o.value)\n            |> LoadableState.Loading \n        | LoadableStateStr.HasError ->\n            LoadableState.HasError (unbox<exn> this.contents)\n        | LoadableStateStr.HasValue ->\n            LoadableState.HasValue (unbox<'T> this.contents)\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.contents\")>]\n    member _.contents : U3<'T,exn,JS.Promise<ResolvedLoadablePromiseInfo<'T>>> = jsNative\n\n    /// Converts the Loadable to an async operation.\n    member inline this.toAsync () =\n        this.toPromise'() \n        |> Promise.map(fun o -> o?value)\n        |> Async.AwaitPromise\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.toPromise()\")>]\n    member _.toPromise' () : JS.Promise<obj> = jsNative\n\n    /// Converts the Loadable to a promise.\n    member inline this.toPromise () =\n        this.toPromise'()\n        |> Promise.map(fun o -> o?value)\n\n    /// Tries to get the value of a Loadable.\n    [<Emit(\"$0.valueMaybe()\")>]\n    member _.valueMaybe () : 'T option = jsNative\n\n    /// Gets the value of a Loadable or throws.\n    [<Emit(\"$0.valueOrThrow()\")>]\n    member _.valueOrThrow () : 'T = jsNative\n\n[<AutoOpen;Erase>]\nmodule LoadableMagic =\n    type Loadable<'T> with\n        /// Maps the value of a Loadable.\n        [<Emit(\"$0.map($1)\")>]\n        member _.map (mapping: 'T -> 'U) : Loadable<'U> = jsNative\n\n[<Erase>]\ntype RootInitializer =\n    /// Sets the initial value of a single atom to the provided value.\n    [<Emit(\"$0.set($1, $2\")>]\n    member _.set (recoilValue: RecoilValue<'T,ReadWrite>, currentValue: 'T) : unit = jsNative\n    \n    /// Sets the initial value for any number of atoms whose keys are the\n    /// keys in the provided map. \n    ///\n    /// As with useSetUnvalidatedAtomValues, the validator for each atom will be \n    /// called when it is next read, and setting an atom without a configured \n    /// validator will result in an exception.\n    [<Emit(\"$0.setUnvalidatedAtomValues($1\")>]\n    member _.setUnvalidatedAtomValues (atomValues: Map<string,'T>) : unit = jsNative\n    /// Sets the initial value for any number of atoms whose keys are the\n    /// keys in the provided key-value list. \n    ///\n    /// As with useSetUnvalidatedAtomValues, the validator for each atom will be \n    /// called when it is next read, and setting an atom without a configured \n    /// validator will result in an exception.\n    member inline this.setUnvalidatedAtomValues (atomValues: (string * 'T) list) =\n        this.setUnvalidatedAtomValues(Map.ofList atomValues)\n\n[<Erase>]\ntype CallbackMethods =\n    /// Gets the async operation of a RecoilValue.\n    member inline this.getAsync (recoilValue: RecoilValue<'T,_>) = \n        this.getPromise(recoilValue) |> Async.AwaitPromise\n\n    /// Gets the Loadable of a RecoilValue.\n    [<Emit(\"$0.getLoadable($1)\")>]\n    member _.getLoadable (recoilValue: RecoilValue<'T,_>) : Loadable<'T> = jsNative\n\n    /// Gets the promise of a RecoilValue.\n    [<Emit(\"$0.getPromise($1)\")>]\n    member _.getPromise (recoilValue: RecoilValue<'T,_>) : JS.Promise<'T> = jsNative\n\n    /// Sets a RecoilValue to the default value.\n    [<Emit(\"$0.reset($1)\")>]\n    member _.reset (recoilValue: RecoilValue<'T,ReadWrite>) : unit = jsNative\n\n    /// Sets a RecoilValue using the updater function.\n    [<Emit(\"$0.set($1, $2)\")>]\n    member _.set (recoilValue: RecoilValue<'T,ReadWrite>, updater: 'T -> 'T) : unit = jsNative\n\n[<AutoOpen;Erase>]\nmodule CallbackMagic =\n    type CallbackMethods with\n        /// Sets a RecoilValue to the given value.\n        [<Emit(\"$0.set($1, $2)\")>]\n        member _.set (recoilValue: RecoilValue<'T,ReadWrite>, newValue: 'T) : unit = jsNative\n\n[<EditorBrowsable(EditorBrowsableState.Never)>]\n[<StringEnum;RequireQualifiedAccess>]\ntype PersistenceTypeWithNone =\n    | Log\n    | None\n    | Url\n\n[<StringEnum;RequireQualifiedAccess>]\ntype PersistenceType =\n    | Log\n    | Url\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    static member inline fromTypeWIthNone (pType: PersistenceTypeWithNone) =\n        match pType with\n        | PersistenceTypeWithNone.None -> None\n        | PersistenceTypeWithNone.Log -> Some PersistenceType.Log\n        | PersistenceTypeWithNone.Url -> Some PersistenceType.Url\n\n[<Erase>]\ntype PersistenceInfo =\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.type\")>]\n    member _.typeInner : PersistenceTypeWithNone = jsNative\n    \n    member inline this.type' =\n        PersistenceType.fromTypeWIthNone(this.typeInner)\n\n    [<Emit(\"$0.backButton\")>]\n    member _.backButton : bool = jsNative\n\n[<NoComparison;NoEquality>]\ntype PersistenceSettings<'T,'U> =\n    { Type: PersistenceType\n      Backbutton: bool option \n      Validator: ('U -> 'T option) }\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    static member inline CreateObj (settings: PersistenceSettings<'T,'U>) =\n        [ \"type\" ==> settings.Type\n          if settings.Backbutton.IsSome then\n              \"backbutton\" ==> settings.Backbutton.Value\n          \"validator\" ==> \n              (fun (v: 'U, def: DefaultValue) ->\n                  match settings.Validator(v) with\n                  | Some res -> box res\n                  | None -> box def) ]\n        |> createObj\n\n[<Erase>]\ntype AtomInfo =\n    [<Emit(\"$0.persistence_UNSTABLE\")>]\n    member _.persistence : PersistenceInfo = jsNative\n\n[<Erase>]\ntype TransactionObservation<'Values,'Metadata> =\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.atomValues\")>]\n    member _.atomValues' : JS.Map<string,'Values> = jsNative\n    /// The current value of every atom that is both persistable (persistence\n    /// type not set to 'none') and whose value is available (not in an\n    /// error or loading state).\n    member inline this.atomValues = \n        this.atomValues'.entries() |> Map.ofSeq\n        \n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.previousAtomValues\")>]\n    member _.previousAtomValues' : JS.Map<string,'Values> = jsNative\n    /// The value of every persistable and available atom before\n    /// the transaction began.\n    member inline this.previousAtomValues = \n        this.previousAtomValues'.entries() |> Map.ofSeq\n    \n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.atomInfo\")>]\n    member _.atomInfo' : JS.Map<string,AtomInfo> = jsNative\n    /// A map containing the persistence settings for each atom. Every key\n    /// that exists in atomValues will also exist in atomInfo.\n    member inline this.atomInfo = \n        this.atomInfo'.entries() |> Map.ofSeq\n    \n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.modifiedAtoms\")>]\n    member _.modifiedAtoms' : JS.Set<string> = jsNative\n    /// The set of atoms that were written to during the transaction.\n    member inline this.modifiedAtoms = \n        this.modifiedAtoms'.entries() |> Set.ofSeq\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"Object.entries($0.transactionMetadata)\")>]\n    member _.transactionMetadata' : ResizeArray<string * 'Metadata> = jsNative\n    /// Arbitrary information that was added via the\n    /// useSetUnvalidatedAtomValues hook. Useful for ignoring the useSetUnvalidatedAtomValues\n    /// transaction, to avoid loops.\n    member inline this.getTransactionMetadata () =\n        this.transactionMetadata'\n        |> Map.ofSeq\n\ntype StoreSubscriber =\n    [<Emit(\"$0.release()\")>]\n    member _.release () : unit = jsNative\n\n[<StringEnum;RequireQualifiedAccess>]\ntype FireNodeWhen =\n    | Enqueue\n    | Now\n\n[<Erase>]\ntype TreeState<'T> =\n    // Information about the TreeState itself:\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.isSnapshot\")>]\n    member _.isSnapshot : bool = jsNative\n    \n    [<Emit(\"$0.transactionMetadata\")>]\n    member _.transactionMetadata : 'T = jsNative\n    \n    // ATOMS\n    \n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.dirtyAtoms\")>]\n    member _.dirtyAtoms' : JS.Set<string> = jsNative\n    member inline this.dirtyAtoms = \n        this.dirtyAtoms'.entries() |> Set.ofSeq\n    \n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.atomValues\")>]\n    member _.atomValues' : JS.Map<string, Loadable<_>> = jsNative\n    member inline this.atomValues = \n        this.atomValues'.entries() |> Map.ofSeq\n    \n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.nonValidatedAtoms\")>]\n    member _.nonValidatedAtoms' : JS.Map<string, obj> = jsNative\n    member inline this.nonValidatedAtoms = \n        this.nonValidatedAtoms'.entries() |> Map.ofSeq\n    \n    // NODE GRAPH -- will soon move to StoreState\n    \n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.nodeDeps\")>]\n    member _.nodeDeps' : JS.Map<string, Set<string>> = jsNative\n    /// Upstream Node dependencies\n    member inline this.nodeDeps = \n        this.nodeDeps'.entries() |> Map.ofSeq\n    \n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.nodeToNodeSubscriptions\")>]\n    member _.nodeToNodeSubscriptions' : JS.Map<string, Set<string>> = jsNative\n    /// Downstream Node subscriptions.\n    member inline this.nodeToNodeSubscriptions = \n        this.nodeToNodeSubscriptions'.entries() |> Map.ofSeq\n    \n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.nodeToComponentSubscriptions\")>]\n    member _.nodeToComponentSubscriptions' : JS.Map<string, Map<int, string * (TreeState<'T> -> unit)>> = jsNative\n    member inline this.nodeToComponentSubscriptions = \n        this.nodeToComponentSubscriptions'.entries() |> Map.ofSeq\n\n/// StoreState represents the state of a Recoil context. \n///\n/// It is global and mutable.\n///\n/// It is updated only during effects, except that the nextTree property is updated\n/// when atom values change and async requests resolve, and suspendedComponentResolvers\n/// is updated when components are suspended.\n[<Erase>]\ntype StoreState<'T> =\n    /// The \"current\" TreeState being either directly read from (legacy) or passed\n    /// to useMutableSource (when in use). It is replaced with nextTree when\n    /// a transaction is completed or async request finishes.\n    [<Emit(\"$0.currentTree\")>]\n    member _.currentTree : TreeState<'T> = jsNative\n\n    /// The TreeState that is written to when during the course of a transaction\n    /// (generally equal to a React batch) when atom values are updated.\n    [<Emit(\"$0.nextTree\")>]\n    member _.nextTree : TreeState<'T> option = jsNative\n\n    /// For observing transactions.\n    [<Emit(\"$0.transactionSubscriptions\")>]\n    member _.transactionSubscriptions' : JS.Map<int, Store<'T> * TreeState<'T> -> unit> = jsNative\n    member inline this.transactionSubscriptions = \n        this.transactionSubscriptions'.entries() |> Map.ofSeq\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    [<Emit(\"$0.queuedComponentCallback\")>]\n    member _.queuedComponentCallback' : ResizeArray<TreeState<'T> -> unit> = jsNative\n    /// Callbacks to render external components that are subscribed to nodes,\n    /// these are executed at the end of the transaction or asynchronously.\n    member inline this.queuedComponentCallback =\n        this.queuedComponentCallback' |> List.ofSeq\n\n    /// Promise resolvers to wake any components we suspended with React Suspense.\n    [<Emit(\"$0.suspendedComponentResolvers\")>]\n    member _.suspendedComponentResolvers : JS.Set<unit -> unit> = jsNative\n\nand Store<'T> =\n    [<Emit(\"$0.getState()\")>]\n    member _.getState () : StoreState<'T> = jsNative\n\n    [<Emit(\"$0.replaceState($1)\")>]\n    member _.replaceState (map: TreeState<'T> -> TreeState<'T>) : unit = jsNative\n    \n    [<Emit(\"$0.subscribeToTransactions($1)\")>]\n    member _.subscribeToTransactions (subscriber: (Store<'T> * TreeState<'T>) -> unit) : StoreSubscriber = jsNative\n    \n    [<Emit(\"$0.addTransactionMetadata($1)\")>]\n    member _.addTransactionMetadata (metadata: 'T) : unit = jsNative\n    \n    [<Emit(\"$0.fireNodeSubscriptions($1, $2)\")>]\n    member _.fireNodeSubscriptions (updatedNodes: Set<string>, when': FireNodeWhen) : unit = jsNative\n\ntype CacheImplementation<'T,'U> =\n    abstract get: 'U -> 'T option\n    abstract set: 'U -> 'T -> CacheImplementation<'T,'U>\n\ntype NoCache<'T,'U> () =\n    interface CacheImplementation<'T,'U> with\n        member _.get _ = None\n        member this.set _ _ = this :> CacheImplementation<'T,'U>\n","﻿namespace Feliz.Recoil\r\n\r\nopen Fable.Core\r\nopen System.ComponentModel\r\n\r\n[<AutoOpen>]\r\nmodule AtomCE =\r\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\r\n    [<RequireQualifiedAccess>]\r\n    module AtomState =\r\n        type Empty = interface end\r\n\r\n        type Key = | Value of string\r\n\r\n        [<NoEquality;NoComparison>]\r\n        type ReadWrite<'T,'U,'V> = \r\n            { Key: string\r\n              Def: 'T\r\n              Persist: PersistenceSettings<'U,'V> option\r\n              DangerouslyAllowMutability: bool option }\r\n    \r\n    type AtomBuilder [<EditorBrowsable(EditorBrowsableState.Never)>] () =\r\n        member _.Yield (_) =\r\n            unbox<AtomState.Empty>()\r\n\r\n        [<CustomOperation(\"key\")>]\r\n        member _.Key (state: AtomState.Empty, value: string) = \r\n            AtomState.Key.Value value\r\n            \r\n        [<CustomOperation(\"def\")>]\r\n        member _.Default (AtomState.Key.Value state, v: 'T) : AtomState.ReadWrite<'T,_,_> = \r\n            { Key = state\r\n              Def = v\r\n              Persist = None\r\n              DangerouslyAllowMutability = None }\r\n\r\n        [<CustomOperation(\"log\")>]\r\n        member _.Log (state: AtomState.ReadWrite<'T,_,_>) : AtomState.ReadWrite<'T,'U,'V> = \r\n            { Key = state.Key\r\n              Def = state.Def\r\n              Persist = \r\n                { Type = PersistenceType.Log\r\n                  Backbutton = None\r\n                  Validator = (fun _ -> None) }\r\n                |> Some\r\n              DangerouslyAllowMutability = state.DangerouslyAllowMutability }\r\n\r\n        [<CustomOperation(\"persist\")>]\r\n        member _.Persist (state: AtomState.ReadWrite<'T,_,_>, settings: PersistenceSettings<'U,'V>) : AtomState.ReadWrite<'T,'U,'V> = \r\n            { Key = state.Key\r\n              Def = state.Def\r\n              Persist = Some settings\r\n              DangerouslyAllowMutability = state.DangerouslyAllowMutability }\r\n\r\n        [<CustomOperation(\"dangerouslyAllowMutability\")>]\r\n        member _.DangerouslyAllowMutability (state: AtomState.ReadWrite<'T,'U,'V>, value: bool) : AtomState.ReadWrite<'T,'U,'V> = \r\n            { Key = state.Key\r\n              Def = state.Def\r\n              Persist = state.Persist\r\n              DangerouslyAllowMutability = Some value }\r\n\r\n        member inline _.Run (atom: AtomState.ReadWrite<JS.Promise<'T>,'T,'V>) =\r\n            Recoil.atom (\r\n                atom.Key,\r\n                atom.Def,\r\n                ?persistence = atom.Persist, \r\n                ?dangerouslyAllowMutability = atom.DangerouslyAllowMutability\r\n            )\r\n\r\n        member inline _.Run (atom: AtomState.ReadWrite<Async<'T>,'T,'V>) =\r\n            Recoil.atom (\r\n                atom.Key, \r\n                atom.Def, \r\n                ?persistence = atom.Persist, \r\n                ?dangerouslyAllowMutability = atom.DangerouslyAllowMutability\r\n            )\r\n\r\n        member inline _.Run (atom: AtomState.ReadWrite<RecoilValue<'T,'Mode>,'T,'V>) : RecoilValue<'T,ReadWrite> =\r\n            Recoil.atom (\r\n                atom.Key, \r\n                atom.Def, \r\n                ?persistence = atom.Persist, \r\n                ?dangerouslyAllowMutability = atom.DangerouslyAllowMutability\r\n            )\r\n\r\n    [<AutoOpen>]\r\n    module AtomBuilderMagic =\r\n        type AtomBuilder with\r\n            member inline _.Run<'T,'V> (atom: AtomState.ReadWrite<'T,'T,'V>) =\r\n                Recoil.atom (\r\n                    atom.Key, \r\n                    atom.Def, \r\n                    ?persistence = atom.Persist, \r\n                    ?dangerouslyAllowMutability = atom.DangerouslyAllowMutability\r\n                )\r\n\r\n    let atom = AtomBuilder()\r\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n//# sourceMappingURL=AsyncBuilder.js.map","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder\";\nimport { CancellationToken } from \"./AsyncBuilder\";\nimport { protectedCont } from \"./AsyncBuilder\";\nimport { protectedBind } from \"./AsyncBuilder\";\nimport { protectedReturn } from \"./AsyncBuilder\";\nimport { choice1, choice2 } from \"./Option\";\nimport { map } from \"./Seq\";\n// Implemented just for type references\nexport default class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(choice1(x)),\n            onError: (ex) => ctx.onSuccess(choice2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\n//# sourceMappingURL=Async.js.map","import { tryValueIfChoice1, tryValueIfChoice2, value } from \"./Option\";\nexport class Observer {\n    constructor(onNext, onError, onCompleted) {\n        this.OnNext = onNext;\n        this.OnError = onError || ((_e) => { return; });\n        this.OnCompleted = onCompleted || (() => { return; });\n    }\n}\nclass Observable {\n    constructor(subscribe) {\n        this.Subscribe = subscribe;\n    }\n}\nexport function protect(f, succeed, fail) {\n    try {\n        return succeed(f());\n    }\n    catch (e) {\n        fail(e);\n    }\n}\nexport function add(callback, source) {\n    source.Subscribe(new Observer(callback));\n}\nexport function choose(chooser, source) {\n    return new Observable((observer) => source.Subscribe(new Observer((t) => protect(() => chooser(t), (u) => { if (u != null) {\n        observer.OnNext(value(u));\n    } }, observer.OnError), observer.OnError, observer.OnCompleted)));\n}\nexport function filter(predicate, source) {\n    return choose((x) => predicate(x) ? x : null, source);\n}\nexport function map(mapping, source) {\n    return new Observable((observer) => source.Subscribe(new Observer((t) => {\n        protect(() => mapping(t), observer.OnNext, observer.OnError);\n    }, observer.OnError, observer.OnCompleted)));\n}\nexport function merge(source1, source2) {\n    return new Observable((observer) => {\n        let stopped = false;\n        let completed1 = false;\n        let completed2 = false;\n        const h1 = source1.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed1 = true;\n                if (completed2) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        const h2 = source2.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed2 = true;\n                if (completed1) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        return {\n            Dispose() {\n                h1.Dispose();\n                h2.Dispose();\n            },\n        };\n    });\n}\nexport function pairwise(source) {\n    return new Observable((observer) => {\n        let last;\n        return source.Subscribe(new Observer((next) => {\n            if (last != null) {\n                observer.OnNext([last, next]);\n            }\n            last = next;\n        }, observer.OnError, observer.OnCompleted));\n    });\n}\nexport function partition(predicate, source) {\n    return [filter(predicate, source), filter((x) => !predicate(x), source)];\n}\nexport function scan(collector, state, source) {\n    return new Observable((observer) => {\n        return source.Subscribe(new Observer((t) => {\n            protect(() => collector(state, t), (u) => { state = u; observer.OnNext(u); }, observer.OnError);\n        }, observer.OnError, observer.OnCompleted));\n    });\n}\nexport function split(splitter, source) {\n    return [choose((v) => tryValueIfChoice1(splitter(v)), source), choose((v) => tryValueIfChoice2(splitter(v)), source)];\n}\nexport function subscribe(callback, source) {\n    return source.Subscribe(new Observer(callback));\n}\n//# sourceMappingURL=Observable.js.map","import { Observer, protect } from \"./Observable\";\nimport { some, tryValueIfChoice1, tryValueIfChoice2, value } from \"./Option\";\nimport { iterate as seqIterate } from \"./Seq\";\nexport default class Event {\n    constructor(_subscriber, delegates) {\n        this._subscriber = _subscriber;\n        this.delegates = delegates || new Array();\n    }\n    Add(f) {\n        this._addHandler(f);\n    }\n    // IEvent<T> methods\n    get Publish() {\n        return this;\n    }\n    Trigger(value) {\n        seqIterate((f) => f(value), this.delegates);\n    }\n    // IDelegateEvent<T> methods\n    AddHandler(handler) {\n        if (this._dotnetDelegates == null) {\n            this._dotnetDelegates = new Map();\n        }\n        const f = (x) => handler(null, x);\n        this._dotnetDelegates.set(handler, f);\n        this._addHandler(f);\n    }\n    RemoveHandler(handler) {\n        if (this._dotnetDelegates != null) {\n            const f = this._dotnetDelegates.get(handler);\n            if (f != null) {\n                this._dotnetDelegates.delete(handler);\n                this._removeHandler(f);\n            }\n        }\n    }\n    // IObservable<T> methods\n    Subscribe(arg) {\n        return typeof arg === \"function\"\n            ? this._subscribeFromCallback(arg)\n            : this._subscribeFromObserver(arg);\n    }\n    _addHandler(f) {\n        this.delegates.push(f);\n    }\n    _removeHandler(f) {\n        const index = this.delegates.indexOf(f);\n        if (index > -1) {\n            this.delegates.splice(index, 1);\n        }\n    }\n    _subscribeFromObserver(observer) {\n        if (this._subscriber) {\n            return this._subscriber(observer);\n        }\n        const callback = observer.OnNext;\n        this._addHandler(callback);\n        return { Dispose: () => { this._removeHandler(callback); } };\n    }\n    _subscribeFromCallback(callback) {\n        this._addHandler(callback);\n        return { Dispose: () => { this._removeHandler(callback); } };\n    }\n}\nexport function add(callback, sourceEvent) {\n    sourceEvent.Subscribe(new Observer(callback));\n}\nexport function choose(chooser, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => source.Subscribe(new Observer((t) => protect(() => chooser(t), (u) => { if (u != null) {\n        observer.OnNext(value(u));\n    } }, observer.OnError), observer.OnError, observer.OnCompleted)), source.delegates);\n}\nexport function filter(predicate, sourceEvent) {\n    return choose((x) => predicate(x) ? some(x) : undefined, sourceEvent);\n}\nexport function map(mapping, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => source.Subscribe(new Observer((t) => protect(() => mapping(t), observer.OnNext, observer.OnError), observer.OnError, observer.OnCompleted)), source.delegates);\n}\nexport function merge(event1, event2) {\n    const source1 = event1;\n    const source2 = event2;\n    return new Event((observer) => {\n        let stopped = false;\n        let completed1 = false;\n        let completed2 = false;\n        const h1 = source1.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed1 = true;\n                if (completed2) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        const h2 = source2.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed2 = true;\n                if (completed1) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        return {\n            Dispose() {\n                h1.Dispose();\n                h2.Dispose();\n            },\n        };\n    }, source1.delegates.concat(source2.delegates));\n}\nexport function pairwise(sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => {\n        let last;\n        return source.Subscribe(new Observer((next) => {\n            if (last != null) {\n                observer.OnNext([last, next]);\n            }\n            last = next;\n        }, observer.OnError, observer.OnCompleted));\n    }, source.delegates);\n}\nexport function partition(predicate, sourceEvent) {\n    return [filter(predicate, sourceEvent), filter((x) => !predicate(x), sourceEvent)];\n}\nexport function scan(collector, state, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => {\n        return source.Subscribe(new Observer((t) => {\n            protect(() => collector(state, t), (u) => { state = u; observer.OnNext(u); }, observer.OnError);\n        }, observer.OnError, observer.OnCompleted));\n    }, source.delegates);\n}\nexport function split(splitter, sourceEvent) {\n    return [\n        choose((v) => tryValueIfChoice1(splitter(v)), sourceEvent),\n        choose((v) => tryValueIfChoice2(splitter(v)), sourceEvent),\n    ];\n}\n//# sourceMappingURL=Event.js.map","import Event from \"./Event\";\nexport default class Timer {\n    constructor(interval) {\n        this._enabled = false;\n        this._isDisposed = false;\n        this._intervalId = 0;\n        this._timeoutId = 0;\n        this.Interval = interval && interval > 0 ? interval : 100;\n        this.AutoReset = true;\n        this._elapsed = new Event();\n    }\n    get Elapsed() {\n        return this._elapsed;\n    }\n    get Enabled() {\n        return this._enabled;\n    }\n    set Enabled(x) {\n        if (!this._isDisposed && this._enabled !== x) {\n            this._enabled = x;\n            if (this._enabled) {\n                if (this.AutoReset) {\n                    this._intervalId = setInterval(() => {\n                        if (!this.AutoReset) {\n                            this.Enabled = false;\n                        }\n                        this._elapsed.Trigger(new Date());\n                    }, this.Interval);\n                }\n                else {\n                    this._timeoutId = setTimeout(() => {\n                        this.Enabled = false;\n                        this._timeoutId = 0;\n                        if (this.AutoReset) {\n                            this.Enabled = true;\n                        }\n                        this._elapsed.Trigger(new Date());\n                    }, this.Interval);\n                }\n            }\n            else {\n                if (this._timeoutId) {\n                    clearTimeout(this._timeoutId);\n                    this._timeoutId = 0;\n                }\n                if (this._intervalId) {\n                    clearInterval(this._intervalId);\n                    this._intervalId = 0;\n                }\n            }\n        }\n    }\n    Dispose() {\n        this.Enabled = false;\n        this._isDisposed = true;\n    }\n    Close() {\n        this.Dispose();\n    }\n    Start() {\n        this.Enabled = true;\n    }\n    Stop() {\n        this.Enabled = false;\n    }\n}\n//# sourceMappingURL=Timer.js.map","namespace Elmish\n\n(**\nLog\n---------\nBasic cross-platform logging API.\n\n*)\nmodule internal Log =\n\n#if FABLE_COMPILER\n    open Fable.Core.JS\n\n    let onError (text: string, ex: exn) = console.error (text,ex)\n    let toConsole(text: string, o: #obj) = console.log(text,o)\n\n#else\n#if NETSTANDARD2_0\n    let onError (text: string, ex: exn) = System.Diagnostics.Trace.TraceError(\"{0}: {1}\", text, ex)\n    let toConsole(text: string, o: #obj) = printfn \"%s: %A\" text o\n#else\n    let onError (text: string, ex: exn) = System.Console.Error.WriteLine(\"{0}: {1}\", text, ex)\n    let toConsole(text: string, o: #obj) = printfn \"%s: %A\" text o\n#endif\n#endif\n\n#if FABLE_COMPILER\nmodule internal Timer =\n    open System.Timers\n    let delay interval callback =\n        let t = new Timer(float interval, AutoReset = false)\n        t.Elapsed.Add callback\n        t.Enabled <- true\n        t.Start()\n#endif\n","(**\nCmd\n---------\nCore abstractions for dispatching messages in Elmish.\n\n*)\n\nnamespace Elmish\n\nopen System\n\n/// Dispatch - feed new message into the processing loop\ntype Dispatch<'msg> = 'msg -> unit\n\n/// Subscription - return immediately, but may schedule dispatch of a message at any time\ntype Sub<'msg> = Dispatch<'msg> -> unit\n\n/// Cmd - container for subscriptions that may produce messages\ntype Cmd<'msg> = Sub<'msg> list\n\n/// Cmd module for creating and manipulating commands\n[<RequireQualifiedAccess>]\nmodule Cmd =\n    /// Execute the commands using the supplied dispatcher\n    let internal exec (dispatch:Dispatch<'msg>) (cmd:Cmd<'msg>) =\n        cmd |> List.iter (fun sub -> sub dispatch)\n\n    /// None - no commands, also known as `[]`\n    let none : Cmd<'msg> =\n        []\n\n    /// When emitting the message, map to another type\n    let map (f: 'a -> 'msg) (cmd: Cmd<'a>) : Cmd<'msg> =\n        cmd |> List.map (fun g -> (fun dispatch -> f >> dispatch) >> g)\n\n    /// Aggregate multiple commands\n    let batch (cmds: #seq<Cmd<'msg>>) : Cmd<'msg> =\n        cmds |> List.concat\n\n    /// Command to call the subscriber\n    let ofSub (sub: Sub<'msg>) : Cmd<'msg> =\n        [sub]\n\n    module OfFunc =\n        /// Command to evaluate a simple function and map the result\n        /// into success or error (of exception)\n        let either (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to evaluate a simple function and map the success to a message\n        /// discarding any possible error\n        let perform (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    ()\n            [bind]\n\n        /// Command to evaluate a simple function and map the error (in case of exception)\n        let attempt (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to issue a specific message\n        let result (msg:'msg) : Cmd<'msg> =\n            [fun dispatch -> dispatch msg]\n\n    module OfAsyncWith =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let either (start: Async<unit> -> unit) \n                   (task: 'a -> Async<_>)\n                   (arg: 'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    dispatch (match r with\n                             | Choice1Of2 x -> ofSuccess x\n                             | Choice2Of2 x -> ofError x)\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the success\n        let perform (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch (ofSuccess x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let attempt (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice2Of2 x -> dispatch (ofError x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block to the message\n        let result (start: Async<unit> -> unit) \n                   (task: Async<'msg>) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch x\n                    | _ -> ()\n                }\n            [bind >> start]\n\n    module OfAsync =\n#if FABLE_COMPILER\n        let start x = Timer.delay 0 (fun _ -> Async.StartImmediate x)\n#else\n        let inline start x = Async.Start x\n#endif    \n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either start task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform start task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt start task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result start task\n\n    module OfAsyncImmediate =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either Async.StartImmediate task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform Async.StartImmediate task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt Async.StartImmediate task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result Async.StartImmediate task\n\n#if FABLE_COMPILER\n    module OfPromise =\n        /// Command to call `promise` block and map the results\n        let either (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the success\n        let perform (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg) =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the error\n        let attempt (task: 'a -> Fable.Core.JS.Promise<_>)\n                    (arg:'a)\n                    (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to dispatch the `promise` result\n        let result (task: Fable.Core.JS.Promise<'msg>) =\n            let bind dispatch =\n                task.``then`` dispatch\n                |> ignore\n            [bind]\n\n    [<Obsolete(\"Use `OfPromise.either` instead\")>]\n    let inline ofPromise (task: 'a -> Fable.Core.JS.Promise<_>)\n                         (arg:'a)\n                         (ofSuccess: _ -> 'msg)\n                         (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfPromise.either task arg ofSuccess ofError                     \n#else\n    open System.Threading.Tasks\n    module OfTask =\n        /// Command to call a task and map the results\n        let inline either (task: 'a -> Task<_>)\n                          (arg:'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.either (task >> Async.AwaitTask) arg ofSuccess ofError\n\n        /// Command to call a task and map the success\n        let inline perform (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.perform (task >> Async.AwaitTask) arg ofSuccess\n\n        /// Command to call a task and map the error\n        let inline attempt (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.attempt (task >> Async.AwaitTask) arg ofError\n\n        /// Command and map the task success\n        let inline result (task: Task<'msg>) : Cmd<'msg> =\n            OfAsync.result (task |> Async.AwaitTask)\n\n    [<Obsolete(\"Use OfTask.either instead\")>]\n    let inline ofTask (task: 'a -> Task<_>)\n                      (arg:'a)\n                      (ofSuccess: _ -> 'msg)\n                      (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfTask.either task arg ofSuccess ofError\n#endif\n\n    // Synonymous with `OfFunc.result`, may be removed in the future\n    let inline ofMsg (msg:'msg) : Cmd<'msg> =\n        OfFunc.result msg\n\n    [<Obsolete(\"Use `Cmd.OfAsync.either` instead\")>]\n    let inline ofAsync (task: 'a -> Async<_>)\n                       (arg: 'a)\n                       (ofSuccess: _ -> 'msg)\n                       (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfAsync.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.either` instead\")>]\n    let inline ofFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.perform` instead\")>]\n    let inline performFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.perform task arg ofSuccess\n\n    [<Obsolete(\"Use `Cmd.OfFunc.attempt` instead\")>]\n    let attemptFunc (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.attempt task arg ofError\n\n","namespace Feliz.Router\r\n\r\nopen System\r\nopen Browser.Dom\r\nopen Fable.React\r\nopen Elmish\r\nopen Fable.Core\r\n\r\ntype IUrlSearchParamters =\r\n    abstract entries : unit -> seq<string array>\r\n\r\n/// Determines whether the router will push a new entry to the history of modify the current one.\r\n[<RequireQualifiedAccess>]\r\ntype HistoryMode =\r\n    /// A new history will be added to the entries such that if the user clicks the back button,\r\n    /// the previous page will be shown, this is the default bahavior of the router.\r\n    | PushState = 1\r\n    /// Only modifies the current history entry and does not add a new one to the history stack. Clicking the back button will *not* have the effect of retuning to the previous page.\r\n    | ReplaceState = 2\r\n\r\n/// Determines whether the router will use path or hash based routes\r\n[<RequireQualifiedAccess>]\r\ntype RouteMode =\r\n    | Hash = 1\r\n    | Path = 2\r\n\r\n[<RequireQualifiedAccess>]\r\nmodule internal Router =\r\n    let mutable routeMode = RouteMode.Hash\r\n\r\n    let customNavigationEvent = \"CUSTOM_NAVIGATION_EVENT\"\r\n    let hashPrefix = sprintf \"#/%s\"\r\n    let combine xs = String.concat \"/\" xs\r\n\r\n    [<Emit(\"encodeURIComponent($0)\")>]\r\n    let encodeURIComponent (value: string) : string = jsNative\r\n    [<Emit(\"decodeURIComponent($0)\")>]\r\n    let decodeURIComponent (value: string) : string = jsNative\r\n\r\n    let encodeQueryString queryStringPairs =\r\n        queryStringPairs\r\n        |> List.map (fun (key, value) -> encodeURIComponent key, encodeURIComponent value)\r\n        |> List.map (fun (key, value) -> String.concat \"=\" [ key; value ])\r\n        |> String.concat \"&\"\r\n        |> function\r\n            | \"\" -> \"\"\r\n            | pairs -> sprintf \"?%s\" pairs\r\n\r\n    let encodeQueryStringInts queryStringIntPairs =\r\n        queryStringIntPairs\r\n        |> List.map (fun (key, value: int) -> encodeURIComponent key, (string value))\r\n        |> List.map (fun (key, value) -> String.concat \"=\" [ key; value ])\r\n        |> String.concat \"&\"\r\n        |> function\r\n            | \"\" -> \"\"\r\n            | pairs -> sprintf \"?%s\" pairs\r\n\r\n    let encodeParts xs =\r\n        let normalizeRoute : (string -> string) =\r\n            if routeMode = RouteMode.Hash then\r\n                function\r\n                | path when path.StartsWith \"/\" -> sprintf \"#%s\" path\r\n                | path when path.StartsWith \"#/\" -> path\r\n                | path when path.StartsWith \"#\" -> \"#/\" + path.Substring(1, path.Length - 1)\r\n                | path -> sprintf \"#/%s\" path\r\n            else\r\n                (fun path -> if path.StartsWith \"/\" then path else sprintf \"/%s\" path)\r\n\r\n        xs\r\n        |> List.map (fun (part: string) ->\r\n            if part.Contains \"?\" || part.StartsWith \"#\" || part.StartsWith \"/\"\r\n            then part\r\n            else encodeURIComponent part)\r\n        |> combine\r\n        |> normalizeRoute\r\n\r\n    let nav xs (mode: HistoryMode) : Elmish.Cmd<_> =\r\n        Cmd.ofSub (fun _ ->\r\n            if mode = HistoryMode.PushState\r\n            then history.pushState ((), \"\", encodeParts xs)\r\n            else history.replaceState((), \"\", encodeParts xs)\r\n            let ev = document.createEvent(\"CustomEvent\")\r\n            ev.initEvent (customNavigationEvent, true, true)\r\n            window.dispatchEvent ev |> ignore\r\n        )\r\n\r\n    /// Parses the URL into multiple path segments\r\n    let urlSegmentsWithRouteMode (path: string) (mode: RouteMode) =\r\n        if path.StartsWith \"#\"\r\n        // remove the hash sign\r\n        then path.Substring(1, path.Length - 1)\r\n        elif mode = RouteMode.Hash && (path.EndsWith \"#\" || path.EndsWith \"#/\")\r\n        then \"\"\r\n        // return as is\r\n        else path\r\n        |> fun p -> p.Split '/' // split the url segments\r\n        |> List.ofArray\r\n        |> List.filter (String.IsNullOrWhiteSpace >> not)\r\n        |> List.map (fun segment -> segment.TrimEnd '#')\r\n        |> List.collect (fun segment ->\r\n            if segment = \"?\"\r\n            then [ ]\r\n            elif segment.StartsWith \"?\"\r\n            then [ segment ]\r\n            else\r\n            match segment.Split [| '?' |] with\r\n            | [| value |] -> [decodeURIComponent value]\r\n            | [| value; \"\" |] -> [decodeURIComponent value]\r\n            | [| value; query |] -> [ decodeURIComponent value; \"?\" + query ]\r\n            | _ -> [])\r\n\r\n    /// Parses the URL into multiple path segments\r\n    let urlSegments (path: string) = urlSegmentsWithRouteMode path routeMode\r\n\r\n    [<Emit(\"new URLSearchParams($0)\")>]\r\n    let createUrlSearchParams (queryString: string) : IUrlSearchParamters = jsNative\r\n\r\n    [<Emit(\"window.navigator.userAgent\")>]\r\n    let navigatorUserAgent : string = jsNative\r\n\r\ntype RouterProperties = {\r\n    urlChanged: string list -> unit\r\n    application: ReactElement\r\n    routeMode: RouteMode\r\n}\r\n\r\ntype RouterComponent(props: RouterProperties)  =\r\n    inherit Fable.React.PureStatelessComponent<RouterProperties>(props)\r\n\r\n    override this.render() =\r\n        this.props.application\r\n\r\n    override this.componentDidUpdate(nextProps, nextState) =\r\n        // register global route mode\r\n        Router.routeMode <- props.routeMode\r\n\r\n    override this.componentDidMount() =\r\n        let onChange (ev: _) =\r\n            match window.location.hash with\r\n            | \"\" when Router.routeMode = RouteMode.Path -> window.location.pathname + window.location.search\r\n            | _ -> window.location.hash\r\n            |> Router.urlSegments\r\n            |> this.props.urlChanged\r\n\r\n        // register global route mode\r\n        Router.routeMode <- props.routeMode\r\n\r\n        // listen to path changes\r\n        if Router.navigatorUserAgent.Contains \"Trident\" ||\r\n           Router.navigatorUserAgent.Contains \"MSIE\" then\r\n            window.addEventListener(\"hashchange\", unbox onChange)\r\n        else\r\n            window.addEventListener(\"popstate\", unbox onChange)\r\n\r\n\r\n        // listen to custom navigation events published by `Router.navigate()`\r\n        window.addEventListener(Router.customNavigationEvent, unbox onChange)\r\n\r\n    override this.componentWillUnmount() =\r\n        // clean up when the router isn't in view anymore\r\n        window.removeEventListener(\"popstate\", unbox null)\r\n        window.removeEventListener(\"hashchange\", unbox null)\r\n        window.removeEventListener(Router.customNavigationEvent, unbox null)\r\n\r\n/// Defines a property for the `router` element\r\ntype IRouterProperty = interface end\r\n\r\ntype Router =\r\n    /// An event that is triggered when the URL in the address bar changes, whether by hand or programmatically using `Router.navigate(...)`.\r\n    /// The event arguments are the parts of the URL, segmented into strings:\r\n    ///\r\n    /// `segment \"#/\" => [ ]`\r\n    ///\r\n    /// `segment \"#/home\" => [ \"home\" ]`\r\n    ///\r\n    /// `segment \"#/home/settings\" => [ \"home\"; \"settings\" ]`\r\n    ///\r\n    /// `segment \"#/users/1\" => [ \"users\"; \"1\" ]`\r\n    ///\r\n    /// `segment \"#/users/1/details\" => [ \"users\"; \"1\"; \"details\" ]`\r\n    ///\r\n    /// with query string parameters\r\n    ///\r\n    /// `segment \"#/users?id=1\" => [ \"users\"; \"?id=1\" ]`\r\n    ///\r\n    /// `segment \"#/home/users?id=1\" => [ \"home\"; \"users\"; \"?id=1\" ]`\r\n    ///\r\n    /// `segment \"#/users?id=1&format=json\" => [ \"users\"; \"?id=1&format=json\" ]`\r\n    static member onUrlChanged (eventHandler: string list -> unit) : IRouterProperty = unbox (\"onUrlChanged\", eventHandler)\r\n\r\n    /// The element that is rendered inside where the `router` is placed. Usually this contains the root application but it could also be part of another root element.\r\n    ///\r\n    /// It will keep listening for URL changes as long as the `router` is rendered on screen somewhere.\r\n    static member application (app: ReactElement) : IRouterProperty = unbox (\"application\", app)\r\n\r\n    /// The content that is rendered inside where the `router` is placed. Usually this contains the root application but it could also be part of another root element.\r\n    ///\r\n    /// It will keep listening for URL changes as long as the `router` is rendered on screen somewhere.\r\n    static member application (app: ReactElement list) : IRouterProperty = unbox (\"application\", Fable.React.Helpers.fragment [ ] app)\r\n\r\n    /// Use # based routes (default)\r\n    static member hashMode : IRouterProperty = unbox (\"routeMode\", RouteMode.Hash)\r\n\r\n    /// Use full (HTML 5) based routes instead of # based.\r\n    /// You have to be careful about which requests you want forwarded to the server and which ones should be handled locally.\r\n    /// To keep the request local, you have to use the 'Router.navigate' function for all the URL transitions.\r\n    static member pathMode : IRouterProperty = unbox (\"routeMode\", RouteMode.Path)\r\n\r\n    /// Parses the current URL of the page and returns the cleaned URL segments.\r\n    static member currentUrl() =\r\n        match window.location.hash with\r\n        | \"\" when Router.routeMode = RouteMode.Path -> window.location.pathname + window.location.search\r\n        | _ -> window.location.hash\r\n        |> Router.urlSegments\r\n\r\n    /// Initializes the router as an element of the page to starts listening to URL changes.\r\n    static member router (properties: IRouterProperty list) : ReactElement =\r\n        let defaultProperties : RouterProperties =\r\n            { urlChanged = fun _ -> ignore()\r\n              application = nothing\r\n              routeMode = RouteMode.Hash }\r\n\r\n        let modifiedProperties =\r\n            (defaultProperties, properties)\r\n            ||> List.fold (fun state prop ->\r\n                let (key, value) = unbox<string * obj> prop\r\n                match key with\r\n                | \"onUrlChanged\" -> { state with urlChanged  = unbox value  }\r\n                | \"application\"  -> { state with application = unbox value  }\r\n                | \"routeMode\"    -> { state with routeMode   = unbox value  }\r\n                | _ -> state)\r\n\r\n        ofType<RouterComponent, _, _>(modifiedProperties) [| |]\r\n\r\n    static member navigate([<ParamArray>] xs: string array) =\r\n        Router.nav (List.ofArray xs) HistoryMode.PushState\r\n    static member navigate(segment: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; string segment3 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2;string  segment3 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; string segment3 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; string segment3 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(fullPath: string) : Cmd<_> =\r\n        Router.nav [ fullPath ] HistoryMode.PushState\r\n    static member navigate(fullPath: string, mode) : Cmd<_> =\r\n        Router.nav [ fullPath ] mode\r\n    static member navigate(segment: string, value: int) : Cmd<_> =\r\n        Router.nav [segment; string value ] HistoryMode.PushState\r\n    static member navigate(segment: string, value: int, mode) : Cmd<_> =\r\n        Router.nav [segment; string value ] mode\r\n    static member navigate(segment1: string, value1: int, value2: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, value2: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2 ] mode\r\n    static member navigate(segment1: string, segment2: string, value1: int) : Cmd<_> =\r\n        Router.nav [segment1; segment2; string value1 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, value1: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; segment2; string value1 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, segment4: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; segment4 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, segment4: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; segment4 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, value3: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; string value3 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, value3: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; string value3 ] mode\r\n    static member navigate(segment1: string, value1: int, value2: int, value3: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; string value3 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, value2: int, value3: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; string value3 ] mode\r\n    static member navigate(segment1: string, value1: int, value2: int, segment2: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; segment2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, value2: int, segment2: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; segment2 ] mode\r\n\r\n    static member format([<ParamArray>] xs: string array) =\r\n        Router.encodeParts (List.ofArray xs)\r\n    static member format(segment: string, queryString) : string =\r\n        Router.encodeParts [ segment + Router.encodeQueryString queryString ]\r\n    static member format(segment: string, queryString) : string =\r\n        Router.encodeParts [ segment + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: string, queryString) : string =\r\n        Router.encodeParts [ segment1; segment2 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: string, queryString) : string =\r\n        Router.encodeParts [ segment1; segment2 + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: string, segment3:int, queryString) : string =\r\n        Router.encodeParts [ segment1; segment2; string segment3 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: string, segment3:int, queryString) : string =\r\n        Router.encodeParts [ segment1; segment2; string segment3 + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: string, segment3:string, queryString) : string =\r\n        Router.encodeParts [ segment1; segment2; segment3 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: string, segment3:string, queryString) : string =\r\n        Router.encodeParts [ segment1; segment2; segment3 + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:string, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; segment3 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:string, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; segment3 + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: string, segment3:string, segment4: string, queryString) : string =\r\n        Router.encodeParts [ segment1; segment2; segment3; segment4 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: string, segment3:string, segment4: string, queryString) : string =\r\n        Router.encodeParts [ segment1; segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString) : string =\r\n        Router.encodeParts [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString) : string =\r\n        Router.encodeParts [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:string, segment4: string, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; segment3; segment4 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:string, segment4: string, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:int, segment4: string, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:int, segment4: string, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ]\r\n    static member format(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString) : string =\r\n        Router.encodeParts [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ]\r\n    static member format(fullPath: string) : string =\r\n        Router.encodeParts [ fullPath ]\r\n    static member format(segment: string, value: int) : string =\r\n        Router.encodeParts [segment; string value ]\r\n    static member format(segment1: string, value1: int, value2: int) : string =\r\n        Router.encodeParts [segment1; string value1; string value2 ]\r\n    static member format(segment1: string, segment2: string, value1: int) : string =\r\n        Router.encodeParts [segment1; segment2; string value1 ]\r\n    static member format(segment1: string, value1: int, segment2: string) : string =\r\n        Router.encodeParts [segment1; string value1; segment2 ]\r\n    static member format(segment1: string, value1: int, segment2: string, value2: int) : string =\r\n        Router.encodeParts [segment1; string value1; segment2; string value2 ]\r\n    static member format(segment1: string, value1: int, segment2: string, value2: int, segment3: string) : string =\r\n        Router.encodeParts [segment1; string value1; segment2; string value2; segment3 ]\r\n    static member format(segment1: string, value1: int, segment2: string, value2: int, segment3: string, segment4: string) : string =\r\n        Router.encodeParts [segment1; string value1; segment2; string value2; segment3; segment4 ]\r\n    static member format(segment1: string, value1: int, segment2: string, value2: int, segment3: string, value3: int) : string =\r\n        Router.encodeParts [segment1; string value1; segment2; string value2; segment3; string value3 ]\r\n    static member format(segment1: string, value1: int, value2: int, value3: int) : string =\r\n        Router.encodeParts [segment1; string value1; string value2; string value3 ]\r\n    static member format(segment1: string, value1: int, value2: int, segment2: string) : string =\r\n        Router.encodeParts [segment1; string value1; string value2; segment2 ]\r\n\r\nmodule Route =\r\n    let (|Int|_|) (input: string) =\r\n        match Int32.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Int64|_|) (input: string) =\r\n        match Int64.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Guid|_|) (input: string) =\r\n        match Guid.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Number|_|) (input: string) =\r\n        match Double.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Decimal|_|) (input: string) =\r\n        match Decimal.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Bool|_|) (input: string) =\r\n        match input.ToLower() with\r\n        | (\"1\"|\"true\")  -> Some true\r\n        | (\"0\"|\"false\") -> Some false\r\n        | \"\" -> Some true\r\n        | _ -> None\r\n\r\n    /// Used to parse the query string parameter of the route.\r\n    ///\r\n    /// For example to match against\r\n    ///\r\n    /// `/users?id={value}`\r\n    ///\r\n    /// You can pattern match:\r\n    ///\r\n    /// `[ \"users\"; Route.Query [ \"id\", value ] ] -> value`\r\n    ///\r\n    /// When `{value}` is an integer then you can pattern match:\r\n    ///\r\n    /// `[ \"users\"; Route.Query [ \"id\", Route.Int userId ] ] -> userId`\r\n    let (|Query|_|) (input: string) =\r\n        try\r\n            let urlParams = Router.createUrlSearchParams input\r\n            Some [ for entry in urlParams.entries() -> entry.[0], entry.[1] ]\r\n        with | _ -> None\r\n","﻿namespace Feliz.Recoil\r\n\r\nopen Fable.Core\r\nopen System.ComponentModel\r\n\r\n[<AutoOpen>]\r\nmodule SelectorCE =\r\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\r\n    [<RequireQualifiedAccess>]\r\n    module SelectorState =\r\n        type Empty = interface end\r\n\r\n        type Key = | Value of string\r\n\r\n        type IOptionImplementer<'T,'U,'V> =\r\n            abstract member SetCache : CacheImplementation<'T,Loadable<'T>> -> 'V\r\n            abstract member SetMutability : unit -> 'V\r\n\r\n        [<NoEquality;NoComparison>]\r\n        type ReadOnly<'T,'U> = \r\n            { Key: string\r\n              Get: (SelectorGetter -> 'U)\r\n              Cache: CacheImplementation<'T,Loadable<'T>> option\r\n              DangerouslyAllowMutability: bool option }\r\n\r\n            interface IOptionImplementer<'T,Loadable<'T>,ReadOnly<'T,'U>> with\r\n                member this.SetCache cache =\r\n                    { Key = this.Key\r\n                      Get = this.Get\r\n                      Cache = Some cache\r\n                      DangerouslyAllowMutability = this.DangerouslyAllowMutability }\r\n\r\n                member this.SetMutability () =\r\n                    { Key = this.Key\r\n                      Get = this.Get\r\n                      Cache = this.Cache\r\n                      DangerouslyAllowMutability = Some true }\r\n\r\n        [<NoEquality;NoComparison>]\r\n        type ReadWrite<'T,'U> =\r\n            { Key: string\r\n              Get: SelectorGetter -> 'U\r\n              Set: SelectorMethods -> 'T -> unit\r\n              Cache: CacheImplementation<'T,Loadable<'T>> option\r\n              DangerouslyAllowMutability: bool option }\r\n\r\n            interface IOptionImplementer<'T,Loadable<'T>,ReadWrite<'T,'U>> with\r\n                member this.SetCache (cache: CacheImplementation<'T,Loadable<'T>>) =\r\n                    { this with Cache = Some cache }\r\n\r\n                member this.SetMutability () =\r\n                    { this with DangerouslyAllowMutability = Some true }\r\n\r\n    type SelectorBuilder [<EditorBrowsable(EditorBrowsableState.Never)>] () =\r\n        member _.Yield (_) =\r\n            unbox<SelectorState.Empty>()\r\n\r\n        [<CustomOperation(\"key\")>]\r\n        member _.Key (state: SelectorState.Empty, value: string) = \r\n            SelectorState.Key.Value value\r\n\r\n        [<CustomOperation(\"get\")>]\r\n        member inline _.Get (SelectorState.Key.Value state, f: SelectorGetter -> 'U) : SelectorState.ReadOnly<'T,'U> = \r\n            { Key = state\r\n              Get = f\r\n              Cache = None\r\n              DangerouslyAllowMutability = None }\r\n\r\n        [<CustomOperation(\"set\")>]\r\n        member inline _.Set (state: SelectorState.ReadOnly<'T,'U>, f: SelectorMethods -> 'T -> unit) : SelectorState.ReadWrite<'T,'U> =\r\n            { Key = state.Key\r\n              Get = state.Get\r\n              Set = f \r\n              Cache = state.Cache\r\n              DangerouslyAllowMutability = None }\r\n\r\n        [<CustomOperation(\"cache\")>]\r\n        member inline _.Cache (state: SelectorState.IOptionImplementer<'T,Loadable<'T>,_>, cacheImplementation: CacheImplementation<'T,Loadable<'T>>) = \r\n            state.SetCache(cacheImplementation)\r\n\r\n        [<CustomOperation(\"no_cache\")>]\r\n        member inline _.NoCache (state: SelectorState.IOptionImplementer<'T,'U,_>) = \r\n            state.SetCache(NoCache())\r\n\r\n        [<CustomOperation(\"dangerouslyAllowMutability\")>]\r\n        member inline _.DangerouslyAllowMutability (state: SelectorState.IOptionImplementer<'T,'U,_>) = \r\n            state.SetMutability()\r\n\r\n        member inline _.Run (selector: SelectorState.ReadOnly<'T,JS.Promise<'T>>) =\r\n            Recoil.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n        \r\n        member inline _.Run (selector: SelectorState.ReadWrite<'T,JS.Promise<'T>>) =\r\n            Recoil.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                selector.Set, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n        \r\n        member inline _.Run (selector: SelectorState.ReadOnly<'T,Async<'T>>) =\r\n            Recoil.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n        \r\n        member inline _.Run (selector: SelectorState.ReadWrite<'T,Async<'T>>) =\r\n            Recoil.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                selector.Set, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n        \r\n        member inline _.Run (selector: SelectorState.ReadOnly<'T,RecoilValue<'T,'Mode>>) =\r\n            Recoil.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n        \r\n        member inline _.Run (selector: SelectorState.ReadWrite<'T,RecoilValue<'T,'Mode>>) =\r\n            Recoil.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                selector.Set, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n\r\n    [<AutoOpen>]\r\n    module SelectorBuilderMagic =\r\n        type SelectorBuilder with\r\n            member inline _.Run (selector: SelectorState.ReadOnly<'T,'T>) =\r\n                Recoil.selector (\r\n                    selector.Key, \r\n                    selector.Get, \r\n                    ?cacheImplementation = selector.Cache,\r\n                    ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n                )\r\n\r\n            member inline _.Run (selector: SelectorState.ReadWrite<'T,'T>) =\r\n                Recoil.selector (\r\n                    selector.Key, \r\n                    selector.Get, \r\n                    selector.Set, \r\n                    ?cacheImplementation = selector.Cache,\r\n                    ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n                )\r\n\r\n    let selector = SelectorBuilder()\r\n","namespace Feliz\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.React\r\nopen Feliz.ReactApi\r\n\r\n[<RequireQualifiedAccess>]\r\nmodule Interop =\r\n    let reactApi : IReactApi = importDefault \"react\"\r\n    let reactElement (name: string) (props: 'a) : ReactElement = import \"createElement\" \"react\"\r\n    let mkAttr (key: string) (value: obj) : IReactProperty = unbox (key, value)\r\n    let mkStyle (key: string) (value: obj) : IStyleAttribute = unbox (key, value)\r\n    let inline reactElementWithChild (name: string) (child: 'a) =\r\n        reactElement name (createObj [ \"children\" ==> [| child |] ])\r\n    let inline reactElementWithChildren (name: string) (children: #seq<ReactElement>) = \r\n        reactElement name (createObj [ \"children\" ==> reactApi.Children.toArray (unbox<ReactElement list> children) ])\r\n    let inline createElement name (properties: IReactProperty list) : ReactElement =\r\n        reactElement name (createObj !!properties)\r\n","import {\r\n    useEffect as useEffectReact,\r\n    useLayoutEffect as useLayoutEffectReact,\r\n    useDebugValue as useDebugValueReact } from 'react'\r\n\r\nexport const useEffect = getDisposable => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEffectWithDeps = (getDisposable, deps) => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useLayoutEffect = getDisposable => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","namespace Feliz\r\n\r\nopen System\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Browser.Types\r\n\r\nmodule internal ReactInterop =\r\n    let useDebugValueWithFormatter<'t>(value: 't, formatter: 't -> string) : unit = import \"useDebugValue\" \"./ReactInterop.js\"\r\n    let useEffect (effect: obj) : unit =  import \"useEffect\" \"./ReactInterop.js\"\r\n    let useEffectWithDeps (effect:  obj) (deps: obj) : unit = import \"useEffectWithDeps\" \"./ReactInterop.js\"\r\n    let useLayoutEffect (effect: obj) : unit =  import \"useLayoutEffect\" \"./ReactInterop.js\"\r\n    let useLayoutEffectWithDeps (effect:  obj) (deps: obj) : unit = import \"useLayoutEffectWithDeps\" \"./ReactInterop.js\"\r\n\r\ntype internal Internal() =\r\n    static let propsWithKey (withKey: ('props -> string) option) props =\r\n        match withKey with\r\n        | Some f ->\r\n            props?key <- f props\r\n            props\r\n        | None -> props\r\n    static member\r\n        functionComponent\r\n        (\r\n            renderElement: 'props -> ReactElement,\r\n            ?name: string,\r\n            ?withKey: 'props -> string\r\n        )\r\n        : 'props -> Fable.React.ReactElement =\r\n            name |> Option.iter (fun name -> renderElement?displayName <- name)\r\n            fun props ->\r\n                let props = props |> propsWithKey withKey\r\n                Interop.reactApi.createElement(renderElement, props)\r\n    static member\r\n        memo\r\n        (\r\n            renderElement: 'props -> ReactElement,\r\n            ?name: string,\r\n            ?areEqual: 'props -> 'props -> bool,\r\n            ?withKey: 'props -> string\r\n        )\r\n        : 'props -> Fable.React.ReactElement =\r\n            let memoElementType = Interop.reactApi.memo(renderElement, (defaultArg areEqual (unbox null)))\r\n            name |> Option.iter (fun name -> renderElement?displayName <- name)\r\n            fun props ->\r\n                let props = props |> propsWithKey withKey\r\n                Interop.reactApi.createElement(memoElementType, props)\r\n\r\ntype React =\r\n    /// The `React.fragment` component lets you return multiple elements in your `render()` method without creating an additional DOM element.\r\n    static member inline fragment xs = Fable.React.Helpers.fragment [] xs\r\n    /// The `React.fragment` component lets you return multiple elements in your `render()` method without creating an additional DOM element.\r\n    static member inline keyedFragment(key: int, xs) = Fable.React.Helpers.fragment [ !!(\"key\", key) ] xs\r\n    /// The `React.fragment` component lets you return multiple elements in your `render()` method without creating an additional DOM element.\r\n    static member inline keyedFragment(key: string, xs) = Fable.React.Helpers.fragment [ !!(\"key\", key) ] xs\r\n    /// The `React.fragment` component lets you return multiple elements in your `render()` method without creating an additional DOM element.\r\n    static member inline keyedFragment(key: System.Guid, xs) = Fable.React.Helpers.fragment [ !!(\"key\", string key) ] xs\r\n    /// The `useState` hook that create a state variable for React function components from a initialization function.\r\n    static member useState<'t>(initializer: unit -> 't) = Interop.reactApi.useState<unit -> 't,'t>(initializer)\r\n    static member useReducer(update, initialState) = Interop.reactApi.useReducer update initialState\r\n    /// The `useEffect` hook that creates a disposable effect for React function components\r\n    /// This effect has no dependencies which means the effect is re-executed on every re-render.\r\n    /// To make the effect run once (for example you subscribe once to web sockets) then provide an empty array\r\n    /// for the dependencies: `React.useEffect(disposableEffect, [| |])`.\r\n    static member useEffect(effect: unit -> IDisposable) : unit = ReactInterop.useEffect(effect)\r\n    /// The `useEffect` hook that creates a disposable effect for React function components.\r\n    /// This effect takes a array of *dependencies*.\r\n    /// Whenever any of these dependencies change, the effect is re-executed. To execute the effect only once,\r\n    /// you have to explicitly provide an empty array for the dependencies: `React.useEffect(effect, [| |])`.\r\n    static member useEffect(effect: unit -> IDisposable, dependencies: obj []) : unit = ReactInterop.useEffectWithDeps effect dependencies\r\n    /// The `useLayoutEffect` hook that creates a disposable effect for React function components\r\n    /// This effect has no dependencies which means the effect is re-executed on every re-render.\r\n    /// To make the effect run once (for example you subscribe once to web sockets) then provide an empty array\r\n    /// for the dependencies: `React.useLayoutEffect(disposableEffect, [| |])`.\r\n    /// The signature is identical to useEffect, but it fires synchronously after all DOM mutations. Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint.\r\n    static member useLayoutEffect(effect: unit -> IDisposable) : unit = ReactInterop.useLayoutEffect(effect)\r\n    /// The `useLayoutEffect` hook that creates a disposable effect for React function components.\r\n    /// This effect takes a array of *dependencies*.\r\n    /// Whenever any of these dependencies change, the effect is re-executed. To execute the effect only once,\r\n    /// you have to explicitly provide an empty array for the dependencies: `React.useLayoutEffect(effect, [| |])`.\r\n    /// The signature is identical to useEffect, but it fires synchronously after all DOM mutations. Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint.\r\n    static member useLayoutEffect(effect: unit -> IDisposable, dependencies: obj []) : unit = ReactInterop.useLayoutEffectWithDeps effect dependencies\r\n    /// The signature is identical to useEffect, but it fires synchronously after all DOM mutations. Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint.\r\n    /// This effect is executed on every (re)render\r\n    static member useLayoutEffect(effect: unit -> unit) = \r\n        ReactInterop.useLayoutEffect\r\n            (fun _ ->\r\n                effect()\r\n                React.createDisposable(ignore))\r\n\r\n    /// The signature is identical to useEffect, but it fires synchronously after all DOM mutations. Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint.\r\n    static member useLayoutEffect(effect: unit -> unit, dependencies: obj []) = \r\n        ReactInterop.useLayoutEffect\r\n            (fun _ ->\r\n                effect()\r\n                React.createDisposable(ignore))\r\n\r\n    static member useLayoutEffectOnce(effect: unit -> unit) = \r\n         React.useLayoutEffect(effect, [| |])\r\n\r\n    static member useLayoutEffectOnce(effect: unit -> IDisposable) = \r\n        React.useLayoutEffect(effect, [| |])\r\n\r\n\r\n    /// Creates a disposable instance by providing the implementation of the dispose member\r\n    static member createDisposable(dispose: unit -> unit) =\r\n        { new IDisposable with member this.Dispose() = dispose() }\r\n\r\n    /// React hook to define and use an effect only once when a function component renders for the first time.\r\n    /// This an alias for `React.useEffect(effect, [| |])` which explicitly provide an empty array for the dependencies of the effect which means the effect will only run once.\r\n    static member useEffectOnce(effect: unit -> unit) =\r\n        React.useEffect(effect, [| |])\r\n\r\n    /// React hook to define and use a disposable effect only once when a function component renders for the first time.\r\n    /// This an alias for `React.useEffect(effect, [| |])` which explicitly provide an empty array for the dependencies of the effect which means the effect will only run once.\r\n    static member useEffectOnce(effect: unit -> IDisposable) =\r\n        React.useEffect(effect, [| |])\r\n    /// The `useEffect` hook that creates an effect for React function components.\r\n    /// This effect is executed *every time* the function component re-renders.\r\n    ///\r\n    /// To make the effect run only once, write: `React.useEffect(effect, [| |])` which explicitly states\r\n    /// that this effect has no dependencies and should only run once on initial render.\r\n    static member useEffect(effect: unit -> unit) : unit =\r\n        ReactInterop.useEffect\r\n            (fun _ ->\r\n                effect()\r\n                React.createDisposable(ignore))\r\n\r\n    /// The `useEffect` hook that creates an effect for React function components. This effect takes a array of *dependencies*.\r\n    /// Whenever any of these dependencies change, the effect is re-executed. To execute the effect only once,\r\n    /// you have to explicitly provide an empty array for the dependencies: `React.useEffect(effect, [| |])`.\r\n    static member useEffect(effect: unit -> unit, dependencies: obj []) : unit =\r\n        ReactInterop.useEffectWithDeps\r\n            (fun _ ->\r\n                effect()\r\n                React.createDisposable(ignore))\r\n            dependencies\r\n\r\n    /// Can be used to display a label for custom hooks in React DevTools.\r\n    static member useDebugValue(value: string) = \r\n        ReactInterop.useDebugValueWithFormatter(value, id)\r\n\r\n    /// Can be used to display a label for custom hooks in React DevTools.\r\n    static member useDebugValue(value: 't, formatter: 't -> string) = \r\n        ReactInterop.useDebugValueWithFormatter(value, formatter)\r\n\r\n    /// <summary>\r\n    /// The `useCallback` hook. Returns a memoized callback. Pass an inline callback and an array of dependencies.\r\n    /// `useCallback` will return a memoized version of the callback that only changes if one of the dependencies has changed.\r\n    /// </summary>\r\n    /// <param name='callbackFunction'>A callback function to be memoized.</param>\r\n    /// <param name='dependencies'>An array of dependencies upon which the callback function depends.\r\n    /// If not provided, defaults to empty array, representing dependencies that never change.</param>\r\n    static member useCallback(callbackFunction: 'a -> 'b, ?dependencies: obj array) =\r\n        Interop.reactApi.useCallback callbackFunction (defaultArg dependencies [||])\r\n\r\n    /// Returns a mutable ref object whose .current property is initialized to the passed argument (initialValue). The returned object will persist for the full lifetime of the component.\r\n    ///\r\n    /// Essentially, useRef is like a container that can hold a mutable value in its .current property.\r\n    static member useRef(initialValue) = Interop.reactApi.useRef(initialValue)\r\n\r\n    /// A specialized version of React.useRef() that creates a reference to an input element.\r\n    ///\r\n    /// Useful for controlling the internal properties and methods that element, for example to enable focus().\r\n    static member useInputRef() : IRefValue<HTMLInputElement option> = React.useRef(None)\r\n\r\n    /// A specialized version of React.useRef() that creates a reference to a button element.\r\n    static member useButtonRef() : IRefValue<HTMLButtonElement option> = React.useRef(None)\r\n\r\n    /// A specialized version of React.useRef() that creates a reference to a generic HTML element.\r\n    ///\r\n    /// Useful for controlling the internal properties and methods that element, for integration with third-party libraries that require a Html element.\r\n    static member useElementRef() : IRefValue<HTMLElement option> = React.useRef(None)\r\n\r\n    /// <summary>\r\n    /// The `useMemo` hook. Returns a memoized value. Pass a \"create\" function and an array of dependencies.\r\n    /// `useMemo` will only recompute the memoized value when one of the dependencies has changed.\r\n    /// </summary>\r\n    /// <param name='createFunction'>A create function returning a value to be memoized.</param>\r\n    /// <param name='dependencies'>An array of dependencies upon which the create function depends.\r\n    /// If not provided, defaults to empty array, representing dependencies that never change.</param>\r\n    static member useMemo(createFunction: unit -> 'a, ?dependencies: obj array) =\r\n        Interop.reactApi.useMemo createFunction (defaultArg dependencies [||])\r\n\r\n    //\r\n    // React.functionComponent\r\n    //\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='render'>A render function that returns an element.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    static member functionComponent(render: 'props -> ReactElement, ?withKey: 'props -> string) =\r\n        Internal.functionComponent(render, ?withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='render'>A render function that returns an element.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    static member functionComponent(name: string, render: 'props -> ReactElement, ?withKey: 'props -> string) =\r\n        Internal.functionComponent(render, name, ?withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    static member functionComponent(render: 'props -> #seq<ReactElement>, ?withKey: 'props -> string) =\r\n        Internal.functionComponent(render >> React.fragment, ?withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    static member functionComponent(name: string, render: 'props -> #seq<ReactElement>, ?withKey: 'props -> string) =\r\n        Internal.functionComponent(render >> React.fragment, name, ?withKey=withKey)\r\n\r\n    //\r\n    // React.memo\r\n    //\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='render'>A render function or a React.functionComponent.</param>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    static member memo(render: 'props -> ReactElement, ?withKey: 'props -> string, ?areEqual: 'props -> 'props -> bool) =\r\n        Internal.memo(render, ?areEqual=areEqual, ?withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='render'>A render function or a React.functionComponent.</param>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    static member memo(name: string, render: 'props -> ReactElement, ?withKey: 'props -> string, ?areEqual: 'props -> 'props -> bool) =\r\n        Internal.memo(render, name, ?areEqual=areEqual, ?withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    static member memo(render: 'props -> #seq<ReactElement>, ?withKey: 'props -> string, ?areEqual: 'props -> 'props -> bool) =\r\n        Internal.memo(render >> React.fragment, ?areEqual=areEqual, ?withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    static member memo(name: string, render: 'props -> #seq<ReactElement>, ?withKey: 'props -> string, ?areEqual: 'props -> 'props -> bool) =\r\n        Internal.memo(render >> React.fragment, name, ?areEqual=areEqual, ?withKey=withKey)\r\n\r\n    //\r\n    // React.useContext\r\n    //\r\n\r\n    /// <summary>\r\n    /// Creates a Context object. When React renders a component that subscribes to this Context object\r\n    /// it will read the current context value from the closest matching Provider above it in the tree.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='defaultValue'>A default value that is only used when a component does not have a matching Provider above it in the tree.</param>\r\n    static member createContext<'a>(?name: string, ?defaultValue: 'a) =\r\n        let contextObject = Interop.reactApi.createContext (defaultArg defaultValue Fable.Core.JS.undefined<'a>)\r\n        name |> Option.iter (fun name -> contextObject?displayName <- name)\r\n        contextObject\r\n\r\n    /// <summary>\r\n    /// A Provider component that allows consuming components to subscribe to context changes.\r\n    /// </summary>\r\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\r\n    /// <param name='contextValue'>The context value to be provided to descendant components.</param>\r\n    /// <param name='child'>A child element.</param>\r\n    static member contextProvider(contextObject: Fable.React.IContext<'a>, contextValue: 'a, child: ReactElement) : ReactElement =\r\n        Interop.reactApi.createElement(contextObject?Provider, createObj [\"value\" ==> contextValue], [child])\r\n    /// <summary>\r\n    /// A Provider component that allows consuming components to subscribe to context changes.\r\n    /// </summary>\r\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\r\n    /// <param name='contextValue'>The context value to be provided to descendant components.</param>\r\n    /// <param name='children'>A sequence of child elements.</param>\r\n    static member contextProvider(contextObject: Fable.React.IContext<'a>, contextValue: 'a, children: #seq<ReactElement>) : ReactElement =\r\n        Interop.reactApi.createElement(contextObject?Provider, createObj [\"value\" ==> contextValue], children)\r\n\r\n    /// <summary>\r\n    /// A Consumer component that subscribes to context changes.\r\n    /// </summary>\r\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\r\n    /// <param name='render'>A render function that returns an element.</param>\r\n    static member contextConsumer(contextObject: Fable.React.IContext<'a>, render: 'a -> ReactElement) : ReactElement =\r\n        Interop.reactApi.createElement(contextObject?Consumer, null, [!!render])\r\n    /// <summary>\r\n    /// A Consumer component that subscribes to context changes.\r\n    /// </summary>\r\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\r\n    /// <param name='render'>A render function that returns a sequence of elements.</param>\r\n    static member contextConsumer(contextObject: Fable.React.IContext<'a>, render: 'a -> #seq<ReactElement>) : ReactElement =\r\n        Interop.reactApi.createElement(contextObject?Consumer, null, [!!(render >> React.fragment)])\r\n\r\n    /// <summary>\r\n    /// The `useContext` hook. Accepts a context object (the value returned from React.createContext) and returns the current context value for that context.\r\n    /// The current context value is determined by the value prop of the nearest Provider component above the calling component in the tree.\r\n    /// </summary>\r\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\r\n    static member useContext(contextObject: Fable.React.IContext<'a>) = Interop.reactApi.useContext contextObject\r\n\r\n    /// <summary>\r\n    /// Creates a callback that keeps the same reference during the entire lifecycle of the component while having access to\r\n    /// the current value of the dependencies on every call.\r\n    ///\r\n    /// This hook should only be used for (like a dispatch) functions that are not used to provide information during render.\r\n    ///\r\n    /// This is not a complete replacement for the `useCallback` hook. It returns a callback that does not need explicit \r\n    /// dependency declarations and never causes a re-render.\r\n    /// </summary>\r\n    /// <param name='callback'>The function call.</param>\r\n    static member useCallbackRef(callback: ('a -> 'b)) =\r\n        let lastRenderCallbackRef = React.useRef(callback)\r\n        \r\n        let callbackRef = \r\n            React.useCallback((fun (arg: 'a) ->\r\n                lastRenderCallbackRef.current(arg)\r\n            ), [||])\r\n\r\n        React.useLayoutEffect(fun () ->\r\n            // render is commited - it's safe to update the callback\r\n            lastRenderCallbackRef.current <- callback\r\n        )\r\n\r\n        callbackRef\r\n\r\n    /// <summary>\r\n    /// Forwards a given ref, allowing you to pass it further down to a child.\r\n    /// </summary>\r\n    /// <param name='render'>A render function that returns an element.</param>\r\n    static member forwardRef(render: ('props * IRefValue<'t> -> ReactElement)) : ('props * IRefValue<'t> -> ReactElement) = \r\n        let forwardRefType = Interop.reactApi.forwardRef(Func<'props,IRefValue<'t>,ReactElement> (fun props ref -> render(props,ref)))\r\n        fun (props, ref) ->\r\n            Interop.reactApi.createElement(forwardRefType, {| props = props; ref = ref |} |> JsInterop.toPlainJsObj)\r\n\r\n    /// <summary>\r\n    /// Forwards a given ref, allowing you to pass it further down to a child.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='render'>A render function that returns an element.</param>\r\n    static member forwardRef(name: string, render: ('props * IRefValue<'t> -> ReactElement)) : ('props * IRefValue<'t> -> ReactElement) = \r\n        let forwardRefType = Interop.reactApi.forwardRef(Func<'props,IRefValue<'t>,ReactElement> (fun props ref -> render(props,ref)))\r\n        render?displayName <- name\r\n        fun (props, ref) ->\r\n            Interop.reactApi.createElement(forwardRefType, {| props = props; ref = ref |} |> JsInterop.toPlainJsObj)\r\n\r\n    /// <summary>\r\n    /// Highlights potential problems in an application by enabling additional checks \r\n    /// and warnings for descendants. As well as double rendering function components.\r\n    ///\r\n    /// This *does not do anything* in production mode. You do not need to hide it \r\n    /// with compiler directives.\r\n    /// </summary>\r\n    /// <param name='children'>The elements that will be rendered with additional \r\n    /// checks and warnings.</param>\r\n    static member strictMode(children: ReactElement list) =\r\n        Interop.reactApi.createElement(Interop.reactApi.StrictMode, None, children)\r\n\r\n    /// <summary>\r\n    /// Lets you define a component that is loaded dynamically. Which helps with code\r\n    /// splitting.\r\n    /// </summary>\r\n    /// <param name='dynamicImport'>\r\n    /// The dynamicImport of the component.\r\n    ///\r\n    /// Such as `let asyncComponent : JS.Promise<unit -> ReactElement> = JsInterop.importDynamic \"./CodeSplitting.fs\"`.\r\n    ///\r\n    /// Where you would then pass in `asyncComponent`.\r\n    /// </param>\r\n    /// <param name=\"props\">The props to be passed to the component.</param>\r\n    static member lazy'<'t,'props>(dynamicImport: JS.Promise<'t>, props: 'props) =\r\n        Interop.reactApi.createElement(Interop.reactApi.lazy'(fun () -> dynamicImport),props)\r\n    /// <summary>\r\n    /// Lets you define a component that is loaded dynamically. Which helps with code\r\n    /// splitting.\r\n    /// </summary>\r\n    /// <param name='dynamicImport'>\r\n    /// The dynamicImport of the component.\r\n    ///\r\n    /// Such as `let asyncComponent : JS.Promise<unit -> ReactElement> = JsInterop.importDynamic \"./CodeSplitting.fs\"`.\r\n    ///\r\n    /// Where you would then pass in `fun () -> asyncComponent`.\r\n    /// </param>\r\n    /// <param name=\"props\">The props to be passed to the component.</param>\r\n    static member lazy'<'t,'props>(dynamicImport: unit -> JS.Promise<'t>, props: 'props) =\r\n        Interop.reactApi.createElement(Interop.reactApi.lazy'(dynamicImport),props)\r\n\r\n    /// <summary>\r\n    /// Lets you specify a loading indicator whenever a child element is not yet ready \r\n    /// to render.\r\n    ///\r\n    /// Currently this is only usable with `React.lazy'`.\r\n    /// </summary>\r\n    /// <param name='children'>The elements that will be rendered within the suspense block.</param>\r\n    static member suspense(children: ReactElement list) =\r\n        Interop.reactApi.createElement(Interop.reactApi.Suspense, {| fallback = Html.none |} |> JsInterop.toPlainJsObj, children)\r\n    /// <summary>\r\n    /// Lets you specify a loading indicator whenever a child element is not yet ready \r\n    /// to render.\r\n    ///\r\n    /// Currently this is only usable with `React.lazy'`.\r\n    /// </summary>\r\n    /// <param name='children'>The elements that will be rendered within the suspense block.</param>\r\n    /// <param name='fallback'>The element that will be rendered while the children are loading.</param>\r\n    static member suspense(children: ReactElement list, fallback: ReactElement) =\r\n        Interop.reactApi.createElement(Interop.reactApi.Suspense, {| fallback = fallback |} |> JsInterop.toPlainJsObj, children)\r\n\r\n    /// <summary>\r\n    /// Allows you to override the behavior of a given ref.\r\n    ///\r\n    /// </summary>\r\n    /// <param name='ref'>The ref you want to override.</param>\r\n    /// <param name='createHandle'>A function that returns a new ref with changed behavior.</param>\r\n    static member useImperativeHandle(ref: IRefValue<'t>, createHandle: unit -> 't) =\r\n        Interop.reactApi.useImperativeHandleNoDeps ref createHandle\r\n\r\n    /// <summary>\r\n    /// Lets you specify a loading indicator whenever a child element is not yet ready \r\n    /// to render.\r\n    ///\r\n    /// Currently this is only usable with `React.lazy'`.\r\n    /// </summary>\r\n    /// <param name='ref'>The ref you want to override.</param>\r\n    /// <param name='createHandle'>A function that returns a new ref with changed behavior.</param>\r\n    /// <param name='dependencies'>An array of dependencies upon which the imperative handle function depends.</param>\r\n    static member useImperativeHandle(ref: IRefValue<'t>, createHandle: unit -> 't, dependencies: obj []) =\r\n        Interop.reactApi.useImperativeHandle ref createHandle dependencies\r\n\r\n[<AutoOpen>]\r\nmodule ReactOverloadMagic =\r\n    type React with\r\n        /// The `useState` hook that create a state variable for React function components.\r\n        static member useState<'t>(initial: 't) = Interop.reactApi.useState<'t,'t>(initial)\r\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.Basic\n\nopen Css\nopen Feliz\nopen Feliz.Recoil\nopen Zanaptak.TypedCssClasses\n\nlet textState = Recoil.atom(\"Basic/textState\", \"Hello world!\")\n\nlet inner = React.functionComponent(fun () ->\n    let text,setText = Recoil.useState(textState)\n\n    Html.div [\n        Html.div [\n            prop.text (sprintf \"Atom current value: %s\" text)\n        ]\n        Html.input [\n            prop.classes [ Bulma.Input ]\n            prop.style [ style.maxWidth (length.em 30) ]\n            prop.type'.text\n            prop.onTextChange setText\n        ]\n    ])\n\nlet render = React.functionComponent(fun () ->\n    Recoil.root [\n        inner()\n    ])\n\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.MixAndMatch\n\nopen Css\nopen Feliz\nopen Feliz.Recoil\nopen Zanaptak.TypedCssClasses\n\nlet textState = Recoil.atom(\"MixAndMatch/textState\", \"Hello world!\")\n\nlet vowels = [ 'a'; 'e'; 'i'; 'o'; 'u' ]\n\nlet textStateTransform =\n    Recoil.selector(\"MixAndMatch/textStateTransform\", fun getter ->\n        getter.get(textState)\n        |> String.filter(fun v -> List.contains v vowels)\n    )\n\nlet inner = React.functionComponent(fun () ->\n    let setAtomText = Recoil.useSetState(textState)\n    let text = Recoil.useValue(textStateTransform)\n\n    Html.div [\n        Html.div [\n            prop.text (sprintf \"Transformed value: %s\" text)\n        ]\n        Html.input [\n            prop.classes [ Bulma.Input ]\n            prop.style [ style.maxWidth (length.em 30) ]\n            prop.type'.text\n            prop.onTextChange setAtomText\n        ]\n    ])\n\nlet otherInner = React.functionComponent(fun () ->\n    let textAtom = Recoil.useValue(textState)\n\n    Html.div [\n        prop.text (sprintf \"Atom current value: %s\" textAtom)\n    ]\n)\n\nlet render = React.functionComponent(fun () ->\n    Recoil.root [\n        inner()\n        otherInner()\n    ])\n\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.BidirectionalSelectors\n\nopen Css\nopen Feliz\nopen Feliz.Recoil\nopen Zanaptak.TypedCssClasses\n\nlet textState = Recoil.atom(\"BidirectionalSelectors/textState\", \"Hello world!\")\n\nlet vowels = [ 'a'; 'e'; 'i'; 'o'; 'u' ]\n\nlet textStateTransform =\n    Recoil.selector (\n        key = \"BidirectionalSelectors/textStateTransform\", \n        get = \n            (fun getter ->\n                getter.get(textState)\n                |> String.filter(fun v -> List.contains v vowels)),\n        set =\n            (fun selector newValue ->\n                selector.set(textState, newValue + \"whoa\"))\n    )\n\nlet inner = React.functionComponent(fun () ->\n    let text, setText = Recoil.useState(textStateTransform)\n\n    Html.div [\n        Html.div [\n            prop.text (sprintf \"Transformed value: %s\" text)\n        ]\n        Html.input [\n            prop.classes [ Bulma.Input ]\n            prop.style [ style.maxWidth (length.em 30) ]\n            prop.type'.text\n            prop.onTextChange setText\n        ]\n    ])\n\nlet otherInner = React.functionComponent(fun () ->\n    let textAtom = Recoil.useValue(textState)\n\n    Html.div [\n        prop.text (sprintf \"Atom current value: %s\" textAtom)\n    ]\n)\n\nlet render = React.functionComponent(fun () ->\n    Recoil.root [\n        inner()\n        otherInner()\n    ])\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.Reset\n\nopen Css\nopen Feliz\nopen Feliz.Recoil\nopen Zanaptak.TypedCssClasses\n\nlet textState = Recoil.atom(\"Reset/textState\", \"Hello world!\")\n\nlet inner = React.functionComponent(fun () ->\n    let inputBoxValue = React.useRef \"\"\n    let text,setText = Recoil.useState(textState)\n    let reset = Recoil.useResetState(textState)\n\n    Html.div [\n        Html.div [\n            prop.text (sprintf \"Atom current value: %s\" text)\n        ]\n        Html.input [\n            prop.classes [ Bulma.Input ]\n            prop.style [ style.maxWidth (length.em 30) ]\n            prop.type'.text\n            prop.value inputBoxValue.current\n            prop.onTextChange <| fun s ->\n                inputBoxValue.current <- s\n                setText s\n        ]\n        Html.button [\n            prop.classes [ \n                Bulma.Button\n                Bulma.HasBackgroundPrimary\n                Bulma.HasTextWhite \n            ]\n            prop.text \"Reset\"\n            prop.onClick <| fun _ -> \n                inputBoxValue.current <- \"\"\n                reset()\n        ]\n    ])\n\nlet render = React.functionComponent(fun () ->\n    Recoil.root [\n        inner()\n    ])\n\n","namespace Fable.SimpleHttp\r\n\r\nopen System\r\nopen Browser\r\nopen Browser.Types\r\nopen Fable.Core\r\n\r\n#if !FABLE_COMPILER\r\nopen System.Net.Http\r\n#endif\r\n\r\nmodule Blob =\r\n    /// Creates a Blob from the given input string\r\n    [<Emit(\"new Blob([$0], { 'type':'text/plain' })\")>]\r\n    let fromText (value: string) : Blob = jsNative\r\n\r\n\r\nmodule File =\r\n    /// Creates a File from the given input string and file name\r\n    [<Emit(\"new File([$0], $1, { 'type':'text/plain' })\")>]\r\n    let fromText (value: string) (fileName: string) : File = jsNative\r\n\r\n\r\n/// Utility functions to work with blob and file APIs.\r\nmodule FileReader =\r\n    /// Asynchronously reads the blob data content as string\r\n    let readBlobAsText (blob: Blob) : Async<string> =\r\n        Async.FromContinuations <| fun (resolve, _, _) ->\r\n            let reader = FileReader.Create()\r\n            reader.onload <- fun _ ->\r\n                if reader.readyState = FileReaderState.DONE\r\n                then resolve (unbox reader.result)\r\n\r\n            reader.readAsText(blob)\r\n\r\n    /// Asynchronously reads the blob data content as string\r\n    let readFileAsText (file: File) : Async<string> =\r\n        Async.FromContinuations <| fun (resolve, _, _) ->\r\n            let reader = FileReader.Create()\r\n            reader.onload <- fun _ ->\r\n                if reader.readyState = FileReaderState.DONE\r\n                then resolve (unbox reader.result)\r\n\r\n            reader.readAsText(file)\r\n\r\nmodule FormData =\r\n\r\n    [<Emit(\"new FormData()\")>]\r\n    /// Creates a new FormData object\r\n    let create() : FormData = jsNative\r\n\r\n    /// Appends a key-value pair to the form data\r\n    let append (key:string) (value:string) (form : FormData) : FormData =\r\n        form.append(key, value)\r\n        form\r\n\r\n    /// Appends a file to the form data\r\n    let appendFile (key: string) (file: File) (form: FormData) : FormData =\r\n        form.append (key, file)\r\n        form\r\n\r\n    /// Appends a named file to the form data\r\n    let appendNamedFile (key: string) (fileName: string) (file: File) (form: FormData) : FormData =\r\n        form.append (key, file, fileName)\r\n        form\r\n\r\n    /// Appends a blog to the form data\r\n    let appendBlob (key: string) (blob: Blob) (form: FormData) : FormData =\r\n        form.append (key, blob)\r\n        form\r\n\r\n    /// Appends a blog to the form data\r\n    let appendNamedBlob (key: string) (fileName: string) (blob: Blob) (form: FormData) : FormData =\r\n        form.append (key, blob, fileName)\r\n        form\r\n\r\nmodule Headers =\r\n    let contentType value = Header(\"Content-Type\", value)\r\n    let accept value = Header(\"Accept\", value)\r\n    let acceptCharset value = Header(\"Accept-Charset\", value)\r\n    let acceptEncoding value = Header(\"Accept-Encoding\", value)\r\n    let acceptLanguage value = Header(\"Accept-Language\", value)\r\n    let acceptDateTime value = Header(\"Accept-Datetime\", value)\r\n    let authorization value = Header(\"Authorization\", value)\r\n    let cacheControl value = Header(\"Cache-Control\", value)\r\n    let connection value = Header(\"Connection\", value)\r\n    let cookie value = Header(\"Cookie\", value)\r\n    let contentMD5 value = Header(\"Content-MD5\", value)\r\n    let date value = Header(\"Date\", value)\r\n    let expect value = Header(\"Expect\", value)\r\n    let ifMatch value = Header(\"If-Match\", value)\r\n    let ifModifiedSince value = Header(\"If-Modified-Since\", value)\r\n    let ifNoneMatch value = Header(\"If-None-Match\", value)\r\n    let ifRange value = Header(\"If-Range\", value)\r\n    let IfUnmodifiedSince value = Header(\"If-Unmodified-Since\", value)\r\n    let maxForwards value = Header(\"Max-Forwards\", value)\r\n    let origin value = Header (\"Origin\", value)\r\n    let pragma value = Header(\"Pragma\", value)\r\n    let proxyAuthorization value = Header(\"Proxy-Authorization\", value)\r\n    let range value = Header(\"Range\", value)\r\n    let referer value = Header(\"Referer\", value)\r\n    let userAgent value = Header(\"User-Agent\", value)\r\n    let create key value = Header(key, value)\r\n\r\nmodule Http =\r\n\r\n    let private defaultRequest =\r\n        { url = \"\";\r\n          method = HttpMethod.GET\r\n          headers = []\r\n          withCredentials = false\r\n          overridenMimeType = None\r\n          overridenResponseType = None\r\n          content = BodyContent.Empty }\r\n\r\n    let private emptyResponse =\r\n        { statusCode = 0\r\n          responseText = \"\"\r\n          responseType = \"\"\r\n          responseHeaders = Map.empty\r\n          content = ResponseContent.Text \"\" }\r\n\r\n    let private splitAt (delimiter: string) (input: string) : string [] =\r\n        if String.IsNullOrEmpty input then [| input |]\r\n        else input.Split([| delimiter |], StringSplitOptions.None)\r\n\r\n    let private serializeMethod = function\r\n        | HttpMethod.GET -> \"GET\"\r\n        | HttpMethod.POST -> \"POST\"\r\n        | HttpMethod.PATCH -> \"PATCH\"\r\n        | HttpMethod.PUT -> \"PUT\"\r\n        | HttpMethod.DELETE -> \"DELETE\"\r\n        | HttpMethod.OPTIONS -> \"OPTIONS\"\r\n        | HttpMethod.HEAD -> \"HEAD\"\r\n\r\n    /// Starts the configuration of the request with the specified url\r\n    let request (url: string) : HttpRequest =\r\n        { defaultRequest with url = url }\r\n\r\n    /// Sets the Http method of the request\r\n    let method httpVerb (req: HttpRequest) =\r\n        { req with method = httpVerb }\r\n\r\n    /// Appends a header to the request configuration\r\n    let header (singleHeader: Header) (req: HttpRequest) =\r\n        { req with headers = List.append req.headers [singleHeader] }\r\n\r\n    /// Appends a list of headers to the request configuration\r\n    let headers (values: Header list) (req: HttpRequest)  =\r\n        { req with headers = List.append req.headers values }\r\n\r\n    /// Enables cross-site credentials such as cookies\r\n    let withCredentials (enabled: bool) (req: HttpRequest) =\r\n        { req with withCredentials = enabled }\r\n\r\n    /// Specifies a MIME type other than the one provided by the server to be used instead when interpreting the data being transferred in a request. This may be used, for example, to force a stream to be treated and parsed as \"text/xml\", even if the server does not report it as such.\r\n    let overrideMimeType (value: string) (req: HttpRequest) =\r\n        { req with overridenMimeType = Some value }\r\n\r\n    /// Change the expected response type from the server\r\n    let overrideResponseType (value: ResponseTypes) (req: HttpRequest) =\r\n        { req with overridenResponseType = Some value }\r\n\r\n    /// Sets the body content of the request\r\n    let content (bodyContent: BodyContent) (req: HttpRequest) : HttpRequest =\r\n        { req with content = bodyContent }\r\n\r\n    /// Sends the request to the server, this function does not throw\r\n    let send (req: HttpRequest) : Async<HttpResponse> =\r\n#if FABLE_COMPILER\r\n        Async.FromContinuations <| fun (resolve, reject, _) ->\r\n            let xhr = XMLHttpRequest.Create()\r\n            xhr.``open``(serializeMethod req.method, req.url)\r\n            xhr.onreadystatechange <- fun _ ->\r\n                if xhr.readyState = ReadyState.Done\r\n                then resolve {\r\n                    responseText =\r\n                        match xhr.responseType with\r\n                        | \"\" -> xhr.responseText\r\n                        | \"text\" -> xhr.responseText\r\n                        | _ -> \"\"\r\n\r\n                    statusCode = int xhr.status\r\n                    responseType = xhr.responseType\r\n                    content =\r\n                        match xhr.responseType with\r\n                        | (\"\" | \"text\") -> ResponseContent.Text xhr.responseText\r\n                        | \"arraybuffer\" -> ResponseContent.ArrayBuffer (unbox xhr.response)\r\n                        | \"blob\" -> ResponseContent.Blob (unbox xhr.response)\r\n                        | _ -> ResponseContent.Unknown xhr.response\r\n\r\n                    responseHeaders =\r\n                        xhr.getAllResponseHeaders()\r\n                        |> splitAt \"\\r\\n\"\r\n                        |> Array.choose (fun headerLine ->\r\n                            let parts = splitAt \":\" headerLine\r\n                            match List.ofArray parts with\r\n                            | key :: rest ->  Some (key.ToLower(), (String.concat \":\" rest).Trim())\r\n                            | otherwise -> None)\r\n                        |> Map.ofArray\r\n                }\r\n\r\n            for (Header(key, value)) in req.headers do\r\n                xhr.setRequestHeader(key, value)\r\n\r\n            xhr.withCredentials <- req.withCredentials\r\n\r\n            match req.overridenMimeType with\r\n            | Some mimeType -> xhr.overrideMimeType(mimeType)\r\n            | None -> ()\r\n\r\n            match req.overridenResponseType with\r\n            | Some ResponseTypes.Text -> xhr.responseType <- \"text\"\r\n            | Some ResponseTypes.Blob -> xhr.responseType <- \"blob\"\r\n            | Some ResponseTypes.ArrayBuffer -> xhr.responseType <- \"arraybuffer\"\r\n            | None -> ()\r\n\r\n            match req.method, req.content with\r\n            | GET, _ -> xhr.send(None)\r\n            | _, BodyContent.Empty -> xhr.send(None)\r\n            | _, BodyContent.Text value -> xhr.send(value)\r\n            | _, BodyContent.Form formData -> xhr.send(formData)\r\n            | _, BodyContent.Binary blob -> xhr.send(blob)\r\n            | _, BodyContent.RawFile file -> xhr.send(file)\r\n#else\r\n        async {\r\n            try\r\n                use requestMessage = new HttpRequestMessage()\r\n                requestMessage.RequestUri <- Uri(req.url)\r\n                requestMessage.Method <-\r\n                    match req.method with\r\n                    | HttpMethod.GET     -> HttpMethod.Get\r\n                    | HttpMethod.POST    -> HttpMethod.Post\r\n                    | HttpMethod.PUT     -> HttpMethod.Put\r\n                    | HttpMethod.PATCH   -> HttpMethod \"PATCH\"\r\n                    | HttpMethod.DELETE  -> HttpMethod.Delete\r\n                    | HttpMethod.HEAD    -> HttpMethod.Head\r\n                    | HttpMethod.OPTIONS -> HttpMethod.Options\r\n                req.headers\r\n                |> Seq.iter (fun (Header (key, value)) ->\r\n                    requestMessage.Headers.Add(key, value))\r\n                use content =\r\n                    match req.content with\r\n                    | BodyContent.Text text -> new StringContent(text)\r\n                    | BodyContent.Empty -> null\r\n                    | _ -> failwith \"Only BodyContent.Text is supported in the dotnet implementation\"\r\n                requestMessage.Content <- content\r\n\r\n                use client = new HttpClient()\r\n                let! response = client.SendAsync requestMessage |> Async.AwaitTask\r\n                let! responseBody = response.Content.ReadAsStringAsync() |> Async.AwaitTask\r\n\r\n                let headers =\r\n                    response.Headers\r\n                    |> Seq.choose (fun kv ->\r\n                        kv.Value\r\n                        |> Seq.tryLast\r\n                        |> Option.map (fun value -> kv.Key, value))\r\n                    |> Map.ofSeq\r\n\r\n                return\r\n                    { statusCode = int response.StatusCode\r\n                      responseText = responseBody\r\n                      responseType = \"text\"\r\n                      responseHeaders = headers\r\n                      content = ResponseContent.Text responseBody }\r\n            with\r\n            // We're catching a lot here to mimic the behaviour of the JS\r\n            // implementation, which isn't able to expose the kind of error.\r\n            | :? ArgumentException ->\r\n                return emptyResponse // invalid uri\r\n            | :? HttpRequestException\r\n            | :? AggregateException as aggrEx when (aggrEx.InnerException :? HttpRequestException) ->\r\n                return emptyResponse // connection errors\r\n        }\r\n#endif\r\n\r\n    /// Safely sends a GET request and returns a tuple(status code * response text). This function does not throw.\r\n    let get url : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.GET\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a PUT request and returns a tuple(status code * response text). This function does not throw.\r\n    let put url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.PUT\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a DELETE request and returns a tuple(status code * response text). This function does not throw.\r\n    let delete url : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.DELETE\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a PUT request and returns a tuple(status code * response text). This function does not throw.\r\n    let patch url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.PATCH\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a POST request and returns a tuple(status code * response text). This function does not throw.\r\n    let post url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.POST\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.Async\n\nopen Css\nopen Fable.Core\nopen Fable.SimpleHttp\nopen Feliz\nopen Feliz.Recoil\nopen Zanaptak.TypedCssClasses\n\nlet pokemon = \n    atom {\n        key \"Async/pokemon\"\n        def \"pikachu\"\n    }\n\nlet askIsPokemon = \n    selector {\n        key \"Async/isPokemon\"\n        get (fun getter ->\n            async {\n                let pokemonQuery = getter.get(pokemon)\n                do! Async.Sleep 400\n                if pokemonQuery <> \"\" then\n                    let! (statusCode, _) = \n                        Http.get (sprintf \"https://pokeapi.co/api/v2/pokemon/%s\" pokemonQuery)\n\n                    return (statusCode = 200)\n                else return false\n            })\n    }\n    (*\n        Can also be written as:\n\n        Recoil.selector(\"Async/isPokemon\", fun getter ->\n            async {\n                let pokemonQuery = getter.get(pokemon)\n\n                do! Async.Sleep 400\n                if pokemonQuery <> \"\" then\n                    let! (statusCode, _) = \n                        Http.get (sprintf \"https://pokeapi.co/api/v2/pokemon/%s\" pokemonQuery)\n\n                    return (statusCode = 200)\n                else return false\n            }\n        )\n    *)\n\nlet spinner =\n    Html.div [\n        prop.style [\n        ]\n        prop.children [\n            Html.li [\n                prop.className [\n                    FA.Fa\n                    FA.FaSpinner\n                    FA.FaSpin\n                ]\n            ]\n        ]\n    ]\n\nlet pokemonAsker = React.functionComponent(fun () ->\n    let isPokemon = Recoil.useValue(askIsPokemon)\n    \n    Html.div [\n        prop.text (sprintf \"%b\" isPokemon)\n    ])\n\nlet inner = React.functionComponent(fun () ->\n    let pokeStr, askIsPokemon = Recoil.useState(pokemon)\n    let currentText,setCurrentText = React.useState(pokeStr)\n\n    React.useLayoutEffect((fun () ->\n        let handler = JS.setTimeout (fun () -> askIsPokemon(currentText)) 200\n\n        React.createDisposable(fun () -> JS.clearTimeout(handler))\n    ), [| currentText :> obj |])\n\n    Html.div [\n        Html.div [\n            prop.style [\n                style.display.flex\n            ]\n            prop.children [\n                Html.span \"Is it a pokemon?:\"\n                Html.div [\n                    prop.style [\n                        style.paddingLeft (length.em 0.2)\n                    ]\n                    prop.children [\n                        React.suspense ([\n                            pokemonAsker()  \n                        ], spinner)\n                    ]\n                ]\n            ]\n        ]\n        Html.input [\n            prop.classes [ Bulma.Input ]\n            prop.style [ style.maxWidth (length.em 30) ]\n            prop.type'.text\n            prop.onTextChange <| fun s ->\n                setCurrentText s\n            prop.defaultValue pokeStr\n        ]\n    ])\n\nlet render = React.functionComponent(fun () ->\n    Recoil.root [\n        inner()\n    ])\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Callback\r\n\r\nopen Css\r\nopen Feliz\r\nopen Feliz.Recoil\r\nopen Zanaptak.TypedCssClasses\r\n\r\nlet firstCount = Recoil.atom(\"Callback/firstCount\", 0)\r\nlet secondCount = Recoil.atom(\"Callback/secondCount\", 0)\r\n\r\nlet countOne = React.functionComponent(fun () ->\r\n    let firstCount,setFirstCount = Recoil.useState(firstCount)\r\n\r\n    Html.div [\r\n        Html.div [\r\n            prop.text (sprintf \"First count current value: %i\" firstCount)\r\n        ]\r\n        Html.button [\r\n            prop.classes [ \r\n                Bulma.Button\r\n                Bulma.HasBackgroundPrimary\r\n                Bulma.HasTextWhite \r\n            ]\r\n            prop.text \"Increment\"\r\n            prop.onClick <| fun _ -> setFirstCount (firstCount + 1)\r\n        ]\r\n    ])\r\n\r\nlet countTwo = React.functionComponent(fun () ->\r\n    let secondCount,setSecondCount = Recoil.useState(secondCount)\r\n\r\n    Html.div [\r\n        Html.div [\r\n            prop.text (sprintf \"First count current value: %i\" secondCount)\r\n        ]\r\n        Html.button [\r\n            prop.classes [ \r\n                Bulma.Button\r\n                Bulma.HasBackgroundPrimary\r\n                Bulma.HasTextWhite \r\n            ]\r\n            prop.text \"Increment\"\r\n            prop.onClick <| fun _ -> setSecondCount (secondCount + 1)\r\n        ]\r\n    ])\r\n\r\nlet combine = React.functionComponent(fun () ->\r\n    let sum,setSum = React.useState(0)\r\n\r\n    let setSum = \r\n        Recoil.useCallback(fun caller ->\r\n            async {\r\n                let! one = caller.getAsync(firstCount)\r\n                let! two = caller.getAsync(secondCount)\r\n\r\n                do! Async.Sleep 500\r\n\r\n                do setSum(one + two)\r\n            }\r\n            |> Async.StartImmediate\r\n        )\r\n\r\n    Html.div [\r\n        prop.children [\r\n            Html.div [\r\n                prop.text (sprintf \"Sum: %i\" sum)\r\n            ]\r\n            Html.button [\r\n                prop.classes [ \r\n                    Bulma.Button\r\n                    Bulma.HasBackgroundSuccess\r\n                    Bulma.HasTextWhite \r\n                ]\r\n                prop.text \"Async sum\"\r\n                prop.onClick <| fun _ -> setSum()\r\n            ]\r\n        ]\r\n    ])\r\n\r\nlet render = React.functionComponent(fun () ->\r\n    Recoil.root [\r\n        countOne()\r\n        countTwo()\r\n        combine()\r\n    ])\r\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.Loadable\n\nopen Css\nopen Fable.Core\nopen Fable.SimpleHttp\nopen Feliz\nopen Feliz.Recoil\nopen Zanaptak.TypedCssClasses\n\nlet pokemon = Recoil.atom(\"Loadable/pokemon\", \"pikachu\")\n\nlet askIsPokemon = \n    Recoil.selector(\"Loadable/isPokemon\", fun getter ->\n        let pokemonQuery = getter.get(pokemon)\n        async {\n            do! Async.Sleep 400\n            if pokemonQuery <> \"\" then\n                let! (statusCode, _) = \n                    Http.get (sprintf \"https://pokeapi.co/api/v2/pokemon/%s\" pokemonQuery)\n\n                return (statusCode = 200)\n            else return false\n        }\n    )\n\nlet spinner =\n    Html.div [\n        prop.style [\n        ]\n        prop.children [\n            Html.li [\n                prop.className [\n                    FA.Fa\n                    FA.FaSpinner\n                    FA.FaSpin\n                ]\n            ]\n        ]\n    ]\n\nlet pokemonAsker = React.functionComponent(fun () ->\n    let isPokemon = Recoil.useValueLoadable(askIsPokemon)\n\n    match isPokemon.state() with\n    | LoadableState.HasValue b ->\n        Html.div [\n            prop.text (sprintf \"%b\" b)\n        ]\n    | _ -> spinner)\n\nlet inner = React.functionComponent(fun () ->\n    let pokeStr, askIsPokemon = Recoil.useState(pokemon)\n    let currentText,setCurrentText = React.useState(pokeStr)\n\n    React.useEffect((fun () ->\n        let handler = JS.setTimeout (fun () -> askIsPokemon(currentText)) 200\n\n        React.createDisposable(fun () -> JS.clearTimeout(handler))\n    ), [| currentText :> obj |])\n\n    Html.div [\n        Html.div [\n            prop.style [\n                style.display.flex\n            ]\n            prop.children [\n                Html.span \"Is it a pokemon?:\"\n                Html.div [\n                    prop.style [\n                        style.paddingLeft (length.em 0.2)\n                    ]\n                    prop.children [\n                        pokemonAsker()  \n                    ]\n                ]\n            ]\n        ]\n        Html.input [\n            prop.classes [ Bulma.Input ]\n            prop.style [ style.maxWidth (length.em 30) ]\n            prop.type'.text\n            prop.onTextChange <| fun s ->\n                setCurrentText s\n            prop.defaultValue pokeStr\n        ]\n    ])\n\nlet render = React.functionComponent(fun () ->\n    Recoil.root [\n        inner()\n    ])\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.Previous\n\nopen Css\nopen Feliz\nopen Feliz.Recoil\nopen Zanaptak\n\nlet textState = Recoil.atom(\"Previous/textState\", \"Hello world!\")\nlet prevTextState = Recoil.atom(\"Previous/prevTextState\", \"\")\n\nlet views = React.functionComponent(fun () ->\n    let text = Recoil.useValue(textState)\n    let prevText = Recoil.useValue(prevTextState)\n    \n    React.fragment [\n        Html.div [\n            prop.text (sprintf \"Atom current value: %s\" text)\n        ]\n        Html.div [\n            prop.text (sprintf \"Atom previous value: %s\" prevText)\n        ]\n    ]\n    )\n\nlet input = React.functionComponent(fun () ->\n    let setText = Recoil.useSetStatePrev(textState)\n    let setPrevText = Recoil.useSetState(prevTextState)\n\n    Html.input [\n        prop.classes [ Bulma.Input ]\n        prop.style [ style.maxWidth (length.em 30) ]\n        prop.type'.text\n        prop.onTextChange <| fun s -> \n            setText <| fun current -> \n                setPrevText current\n                s\n    ])\n\nlet render = React.functionComponent(fun () ->\n    Recoil.root [\n        Html.div [\n            views()\n            input()\n        ]\n    ])\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.ComputationExpressions\n\nopen Css\nopen Feliz\nopen Feliz.Recoil\nopen Zanaptak.TypedCssClasses\n\nlet textState = \n    atom {\n        key \"ComputationExpressions/textState\"\n        def \"\"\n    }\n\nlet textStateAddition =\n    selector {\n        key \"ComputationExpressions/textStateSelector\"\n        get (fun getter ->\n            let text = getter.get(textState)\n            text + \" wow\"\n        )\n    }\n\nlet vowels = [ 'a'; 'e'; 'i'; 'o'; 'u' ]\n\nlet textStateTransform =\n    selector {\n        key \"ComputationExpressions/textStateTransform\"\n        get (fun getter ->\n            let addedText = getter.get(textStateAddition)\n            \n            addedText \n            |> String.filter(fun v -> \n                List.contains v vowels)\n        )\n    }\n\nlet transformer = React.functionComponent(fun () ->\n    let setAtomText = Recoil.useSetState(textState)\n    let text = Recoil.useValue(textStateTransform)\n\n    Html.div [\n        Html.div [\n            prop.text (sprintf \"Transformed value: %s\" text)\n        ]\n        Html.input [\n            prop.classes [ Bulma.Input ]\n            prop.style [ style.maxWidth (length.em 30) ]\n            prop.type'.text\n            prop.onTextChange setAtomText\n        ]\n    ])\n\nlet atomDisplay = React.functionComponent(fun () ->\n    let text = Recoil.useValue(textState)\n\n    Html.div [\n        prop.text (sprintf \"Atom current value: %s\" text)\n    ])\n\nlet additionSelectorDisplay = React.functionComponent(fun () ->\n    let text = Recoil.useValue(textStateAddition)\n\n    Html.div [\n        prop.text (sprintf \"textStateAddition selector current value: %s\" text)\n    ])\n\nlet render = React.functionComponent(fun () ->\n    Recoil.root [\n        transformer()\n        atomDisplay()\n        additionSelectorDisplay()\n    ])\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Nesting\r\n\r\nopen Css\r\nopen Feliz\r\nopen Feliz.Recoil\r\nopen Zanaptak.TypedCssClasses\r\n\r\ntype State =\r\n    { Age: int\r\n      FirstName: string\r\n      LastName: string\r\n      FullName: string\r\n      Job: string }\r\n\r\nlet age =\r\n    atom {\r\n        key \"Nesting/age\"\r\n        def 26\r\n    }\r\n\r\nlet firstName =\r\n    atom {\r\n        key \"Nesting/firstName\"\r\n        def \"Cody\"\r\n    }\r\n\r\nlet lastName =\r\n    atom {\r\n        key \"Nesting/lastName\"\r\n        def \"Johnson\"\r\n    }\r\n\r\nlet fullName =\r\n    selector {\r\n        key \"Nesting/fullName\"\r\n        get (fun getter ->\r\n            sprintf \"%s %s\" \r\n                (getter.get(firstName))\r\n                (getter.get(lastName))\r\n        )\r\n    }\r\n\r\nlet job =\r\n    atom {\r\n        key \"Nesting/job\"\r\n        def \"F# Developer\"\r\n    }\r\n\r\nlet state =\r\n    selector {\r\n        key \"Nesting/state\"\r\n        get (fun getter ->\r\n            { Age = getter.get(age)\r\n              FirstName = getter.get(firstName)\r\n              LastName = getter.get(lastName)\r\n              FullName = getter.get(fullName)\r\n              Job = getter.get(job) }\r\n        )\r\n    }\r\n\r\nlet maxWidth = style.maxWidth (length.em 30)\r\n\r\nlet label = React.functionComponent(fun (input: {| name: string |}) ->\r\n    Html.div [\r\n        prop.style [\r\n            style.paddingBottom (length.em 1)\r\n            style.paddingTop (length.em 1)\r\n        ]\r\n        prop.text input.name\r\n    ])\r\n\r\nlet ageComp = React.functionComponent(fun () ->\r\n    let age,setAge = Recoil.useState(age)\r\n\r\n    Html.div [\r\n        Html.input [\r\n            prop.style [ maxWidth ]\r\n            prop.classes [ Bulma.Input ]\r\n            prop.type'.number\r\n            prop.step 1\r\n            prop.onTextChange <| fun s ->\r\n                try (int s |> setAge)\r\n                with _ -> ()\r\n            prop.defaultValue age\r\n        ]\r\n    ])\r\n\r\nlet firstNameComp = React.functionComponent(fun () ->\r\n    let firstName,setFirstName = Recoil.useState(firstName)\r\n\r\n    Html.div [\r\n        Html.input [\r\n            prop.style [ maxWidth ]\r\n            prop.classes [ Bulma.Input ]\r\n            prop.type'.text\r\n            prop.maxLength 40\r\n            prop.onTextChange setFirstName\r\n            prop.defaultValue firstName\r\n        ]\r\n    ])\r\n\r\nlet lastNameComp = React.functionComponent(fun () ->\r\n    let lastName,setLastName = Recoil.useState(lastName)\r\n\r\n    Html.div [\r\n        Html.input [\r\n            prop.style [ maxWidth ]\r\n            prop.classes [ Bulma.Input ]\r\n            prop.type'.text\r\n            prop.maxLength 40\r\n            prop.onTextChange setLastName\r\n            prop.defaultValue lastName\r\n        ]\r\n    ])\r\n\r\nlet jobComp = React.functionComponent(fun () ->\r\n    let job,setJob = Recoil.useState(job)\r\n\r\n    Html.div [\r\n        Html.input [\r\n            prop.style [ maxWidth ]\r\n            prop.classes [ Bulma.Input ]\r\n            prop.type'.text\r\n            prop.maxLength 40\r\n            prop.onTextChange setJob\r\n            prop.defaultValue job\r\n        ]\r\n    ])\r\n\r\nlet detailPanel = React.functionComponent(fun () ->\r\n    let state = Recoil.useValue(state)\r\n\r\n    Html.div [\r\n        prop.style [\r\n            style.marginTop (length.em 1)\r\n            maxWidth\r\n        ]\r\n        prop.classes [ Bulma.Box ]\r\n        prop.children [\r\n            Html.div [\r\n                prop.text (sprintf \"Age: %i\" (state.Age))\r\n            ]\r\n            Html.div [\r\n                prop.text (sprintf \"First Name: %s\" state.FirstName)\r\n            ]\r\n            Html.div [\r\n                prop.text (sprintf \"Last Name: %s\" state.LastName)\r\n            ]\r\n            Html.div [\r\n                prop.text (sprintf \"Full Name: %s\" state.FullName)\r\n            ]\r\n            Html.div [\r\n                prop.text (sprintf \"Job: %s\" state.Job)\r\n            ]\r\n        ]\r\n    ])\r\n\r\nlet render = React.functionComponent(fun () ->\r\n    Recoil.root [\r\n        Html.div [\r\n            prop.classes [ Bulma.Columns ]\r\n\r\n            prop.children [\r\n                Html.div [\r\n                    prop.classes [ Bulma.Column ]\r\n\r\n                    prop.children [\r\n                        label {| name = \"Age:\" |}\r\n                        ageComp()\r\n                        label {| name = \"First Name:\" |}\r\n                        firstNameComp()\r\n                        label {| name = \"Last Name:\" |}\r\n                        lastNameComp()\r\n                        label {| name = \"Job:\" |}\r\n                        jobComp()\r\n                    ]\r\n                ]\r\n                Html.div [\r\n                    prop.classes [ Bulma.Column ]\r\n                    \r\n                    prop.children [ \r\n                        detailPanel() \r\n                    ]\r\n                ]\r\n            ]\r\n            \r\n        ]\r\n    ])\r\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.Logger\n\nopen Css\nopen Feliz\nopen Feliz.Recoil\nopen Zanaptak.TypedCssClasses\n\n// DONT INCLUDE IN DEMO\n// _____________________________________________\n\nopen Fable.Core\n\nlet internal logAction (name: string, atomValue: 'T, prevAtomValue: 'T option) =\n    JS.console.groupCollapsed(\n        sprintf \"[%s]: Atom - %s\" \n            (System.DateTime.Now.ToLongTimeString())\n            name\n    )\n\n    JS.console.group(\"Current\")\n    JS.console.log(atomValue)\n    JS.console.groupEnd()\n\n    JS.console.group(\"Previous\")\n    match prevAtomValue with\n    | Some v -> JS.console.log(v)\n    | None -> JS.console.log(\"No previous value.\")\n    JS.console.groupEnd()\n\n    JS.console.groupEnd()\n\ntype Recoil with\n    static member logger = React.functionComponent(fun () ->\n        Recoil.useTransactionObservation <| fun o ->\n            o.modifiedAtoms \n            |> Set.iter (fun (name, _) ->\n                o.atomInfo.TryFind(name)\n                |> Option.map (fun o -> o.persistence.type')\n                |> Option.bind (fun _ -> o.atomValues.TryFind(name))\n                |> Option.iter(fun value ->\n                    logAction (\n                        name,\n                        value,\n                        o.previousAtomValues.TryFind(name)\n                    ))\n            )\n\n        Html.none)\n\n// DONT INCLUDE IN DEMO\n// _____________________________________________\n\nlet textState = \n    atom {\n        key \"Logger/textState\"\n        def \"Hello world!\"\n        log\n    }\n\n(* This can also be implented like so:\n\nlet textState = \n    Recoil.atom (\n        \"textState\", \n        \"Hello world!\", \n        { Type = PersistenceType.Log\n          Backbutton = None\n          Validator = (fun _ -> None) }\n    )\n*)\n\nlet inner = React.functionComponent(fun () ->\n    let text,setText = Recoil.useState(textState)\n\n    Html.div [\n        Html.div [\n            prop.text (sprintf \"Atom current value: %s\" text)\n        ]\n        Html.input [\n            prop.classes [ Bulma.Input ]\n            prop.style [ style.maxWidth (length.em 30) ]\n            prop.type'.text\n            prop.onTextChange setText\n        ]\n    ])\n\nlet render = React.functionComponent(fun () ->\n    Recoil.root [\n        Recoil.logger()\n        inner()\n    ])\n\n","﻿namespace Feliz.Recoil\r\n\r\nopen Fable.Core\r\nopen System.ComponentModel\r\n\r\n[<AutoOpen>]\r\nmodule SelectorFamilyCE =\r\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\r\n    [<RequireQualifiedAccess>]\r\n    module SelectorFamilyState =\r\n        type Empty = interface end\r\n\r\n        type Key = | Value of string\r\n\r\n        type IOptionImplementer<'T,'U,'P,'Mode,'V> =\r\n            abstract member SetCache : (unit -> CacheImplementation<'T,Loadable<'T>>) -> 'V\r\n            abstract member SetParamCache<'Mode> : (unit -> CacheImplementation<RecoilValue<'T,'Mode>,'P>) -> 'V\r\n            abstract member SetMutability : unit -> 'V\r\n\r\n        [<NoEquality;NoComparison>]\r\n        type ReadOnly<'T,'U,'P> = \r\n            { Key: string\r\n              Get: 'P -> SelectorGetter -> 'U\r\n              Cache: (unit -> CacheImplementation<'T,Loadable<'T>>) option\r\n              ParamCache: (unit -> CacheImplementation<RecoilValue<'T,ReadOnly>,'P>) option\r\n              DangerouslyAllowMutability: bool option }\r\n\r\n            interface IOptionImplementer<'T,'U,'P,ReadOnly,ReadOnly<'T,'U,'P>> with\r\n                member this.SetCache cache =\r\n                    { Key = this.Key\r\n                      Get = this.Get\r\n                      Cache = Some cache\r\n                      ParamCache = this.ParamCache\r\n                      DangerouslyAllowMutability = this.DangerouslyAllowMutability }\r\n\r\n                member this.SetParamCache cache =\r\n                    { Key = this.Key\r\n                      Get = this.Get\r\n                      Cache = this.Cache\r\n                      ParamCache = Some cache\r\n                      DangerouslyAllowMutability = this.DangerouslyAllowMutability }\r\n\r\n                member this.SetMutability () =\r\n                    { Key = this.Key\r\n                      Get = this.Get\r\n                      Cache = this.Cache\r\n                      ParamCache = this.ParamCache\r\n                      DangerouslyAllowMutability = Some true }\r\n\r\n        [<NoEquality;NoComparison>]\r\n        type ReadWrite<'T,'U,'P> =\r\n            { Key: string\r\n              Get: 'P -> SelectorGetter -> 'U\r\n              Set: 'P -> SelectorMethods -> 'T -> unit\r\n              Cache: (unit -> CacheImplementation<'T,Loadable<'T>>) option\r\n              ParamCache: (unit -> CacheImplementation<RecoilValue<'T,ReadWrite>,'P>) option\r\n              DangerouslyAllowMutability: bool option }\r\n\r\n            interface IOptionImplementer<'T,'U,'P,ReadWrite,ReadWrite<'T,'U,'P>> with\r\n                member this.SetCache (cache: unit -> CacheImplementation<'T,Loadable<'T>>) =\r\n                    { this with Cache = Some cache }\r\n\r\n                member this.SetParamCache cache =\r\n                    { this with ParamCache = Some cache }\r\n\r\n                member this.SetMutability () =\r\n                    { this with DangerouslyAllowMutability = Some true }\r\n\r\n    type SelectorFamilyBuilder [<EditorBrowsable(EditorBrowsableState.Never)>] () =\r\n        member _.Yield (_) =\r\n            unbox<SelectorFamilyState.Empty>()\r\n\r\n        [<CustomOperation(\"key\")>]\r\n        member _.Key (state: SelectorFamilyState.Empty, value: string) = \r\n            SelectorFamilyState.Key.Value value\r\n\r\n        [<CustomOperation(\"get\")>]\r\n        member inline _.Get (SelectorFamilyState.Key.Value state, (f: 'P -> SelectorGetter -> 'U)) : SelectorFamilyState.ReadOnly<'T,'U,'P> = \r\n            { Key = state\r\n              Get = f\r\n              Cache = None\r\n              ParamCache = None\r\n              DangerouslyAllowMutability = None }\r\n\r\n        [<CustomOperation(\"set\")>]\r\n        member inline _.Set (state: SelectorFamilyState.ReadOnly<'T,'U,'P>, (f: 'P -> SelectorMethods -> 'T -> unit)) : SelectorFamilyState.ReadWrite<'T,'U,'P> =\r\n            { Key = state.Key\r\n              Get = state.Get\r\n              Set = f \r\n              Cache = state.Cache\r\n              ParamCache = state.ParamCache |> Option.map (unbox<unit -> CacheImplementation<RecoilValue<'T,_>,'P>>)\r\n              DangerouslyAllowMutability = None }\r\n\r\n        [<CustomOperation(\"cache\")>]\r\n        member inline _.Cache (state: SelectorFamilyState.IOptionImplementer<'T,_,_,_,_>, (cacheImplementation: unit -> CacheImplementation<'T,Loadable<'T>>)) = \r\n            state.SetCache(cacheImplementation)\r\n\r\n        [<CustomOperation(\"param_cache\")>]\r\n        member inline _.ParamCache (state: SelectorFamilyState.IOptionImplementer<'T,_,'P,_,_>, (cacheImplementation: unit -> CacheImplementation<RecoilValue<'T,_>,'P>)) = \r\n            state.SetParamCache(cacheImplementation)\r\n\r\n        //[<CustomOperation(\"no_cache\")>]\r\n        //member inline _.NoCache (state: SelectorFamilyState.IOptionImplementer<_,_,_,_,_>) = \r\n        //    state.SetCache(fun () -> NoCache() :> CacheImplementation<'T,Loadable<'T>>)\r\n\r\n        //[<CustomOperation(\"no_param_cache\")>]\r\n        //member inline _.NoParamCache (state: SelectorFamilyState.IOptionImplementer<_,_,_,_,_>) = \r\n        //    state.SetParamCache(fun () -> NoCache() :> CacheImplementation<_,_>)\r\n\r\n        [<CustomOperation(\"dangerouslyAllowMutability\")>]\r\n        member inline _.DangerouslyAllowMutability (state: SelectorFamilyState.IOptionImplementer<_,_,_,_,_>) = \r\n            state.SetMutability()\r\n\r\n        member inline _.Run (selector: SelectorFamilyState.ReadOnly<'T,JS.Promise<'T>,'P>) =\r\n            Recoil.Family.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?paramCacheImplementation = selector.ParamCache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n        \r\n        member inline _.Run (selector: SelectorFamilyState.ReadWrite<'T,JS.Promise<'T>,'P>) =\r\n            Recoil.Family.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                selector.Set, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?paramCacheImplementation = selector.ParamCache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n        \r\n        member inline _.Run (selector: SelectorFamilyState.ReadOnly<'T,Async<'T>,'P>) =\r\n            Recoil.Family.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?paramCacheImplementation = selector.ParamCache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n        \r\n        member inline _.Run (selector: SelectorFamilyState.ReadWrite<'T,Async<'T>,'P>) =\r\n            Recoil.Family.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                selector.Set, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?paramCacheImplementation = selector.ParamCache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n        \r\n        member inline _.Run (selector: SelectorFamilyState.ReadOnly<'T,RecoilValue<'T,'Mode>,'P>) =\r\n            Recoil.Family.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?paramCacheImplementation = selector.ParamCache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n        \r\n        member inline _.Run (selector: SelectorFamilyState.ReadWrite<'T,RecoilValue<'T,'Mode>,'P>) =\r\n            Recoil.Family.selector (\r\n                selector.Key, \r\n                selector.Get, \r\n                selector.Set, \r\n                ?cacheImplementation = selector.Cache,\r\n                ?paramCacheImplementation = selector.ParamCache,\r\n                ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n            )\r\n\r\n    [<AutoOpen>]\r\n    module SelectorFamilyBuilderMagic =\r\n        type SelectorFamilyBuilder with\r\n            member inline _.Run (selector: SelectorFamilyState.ReadOnly<'T,'T,'P>) =\r\n                Recoil.Family.selector (\r\n                    selector.Key, \r\n                    selector.Get, \r\n                    ?cacheImplementation = selector.Cache,\r\n                    ?paramCacheImplementation = selector.ParamCache,\r\n                    ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n                )\r\n\r\n            member inline _.Run (selector: SelectorFamilyState.ReadWrite<'T,'T,'P>) =\r\n                Recoil.Family.selector (\r\n                    selector.Key, \r\n                    selector.Get, \r\n                    selector.Set, \r\n                    ?cacheImplementation = selector.Cache,\r\n                    ?paramCacheImplementation = selector.ParamCache,\r\n                    ?dangerouslyAllowMutability = selector.DangerouslyAllowMutability\r\n                )\r\n\r\n    let selectorFamily = SelectorFamilyBuilder()\r\n","﻿namespace Feliz.Recoil\n\nopen System.ComponentModel\n\n[<EditorBrowsable(EditorBrowsableState.Never)>]\nmodule xxHash =\n    open Fable.Core\n    open Fable.Core.JsInterop\n\n    [<EmitConstructor>]\n    type XXH =\n        [<Emit(\"$0($1, $2).toString(16)\")>]\n        abstract invoke: string * int -> string\n    \n    let xxh : XXH = import \"XXH\" \"./Hash/xxhash\"\n\n    let inline getHash (str: string) = xxh.invoke(str, 0)\n\n    [<Emit(\"$0.toString()\")>]\n    let funcToString x : string = jsNative\n\n    let inline hashFunc f = f |> funcToString |> getHash\n\nmodule RecoilValue =\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    type MapSelectorCache<'T,'U> (map: Map<string,RecoilValue<'U,ReadOnly>>) =\n        interface CacheImplementation<RecoilValue<'U,ReadOnly>,'T -> 'U> with\n            member _.get key = map.TryFind(xxHash.hashFunc key) \n            member _.set (key: 'T -> 'U) (value: RecoilValue<'U,ReadOnly>) = \n                MapSelectorCache<'T,'U>(map.Add(xxHash.hashFunc key, value)) \n                    :> CacheImplementation<RecoilValue<'U,ReadOnly>,'T -> 'U>\n\n        static member toCacheImpl (cache: MapSelectorCache<'T,'U>) = cache :> CacheImplementation<RecoilValue<'U,ReadOnly>,'T -> 'U>\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    type BindSelectorCache<'T,'U,'Mode> (map: Map<string,RecoilValue<'U,ReadOnly>>) =\n        interface CacheImplementation<RecoilValue<'U,ReadOnly>,'T -> RecoilValue<'U,'Mode>> with\n            member _.get key = map.TryFind(xxHash.hashFunc key) \n            member _.set (key: 'T -> RecoilValue<'U,'Mode>) (value: RecoilValue<'U,ReadOnly>) = \n                BindSelectorCache<'T,'U,'Mode>(map.Add(xxHash.hashFunc key, value)) \n                    :> CacheImplementation<RecoilValue<'U,ReadOnly>,'T -> RecoilValue<'U,'Mode>>\n\n        static member toCacheImpl (cache: BindSelectorCache<'T,'U,'Mode>) = cache :> CacheImplementation<RecoilValue<'U,ReadOnly>,'T -> RecoilValue<'U,'Mode>>\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    let mapFamily (recoilValue: RecoilValue<'T,'Mode>) =\n        selectorFamily {\n            key (recoilValue.key + \"/__map\")\n            get (fun (mapping: 'T -> 'U) getter -> getter.get(recoilValue) |> mapping)\n            param_cache (fun () -> \n                MapSelectorCache<'T,'U>(Map.empty) \n                    :> CacheImplementation<RecoilValue<'U,ReadOnly>,'T -> 'U>)\n        }\n\n    let map (mapping: 'T -> 'U) (recoilValue: RecoilValue<'T,'Mode>) =\n        mapFamily recoilValue mapping\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    let bindFamily (recoilValue: RecoilValue<'T,'Mode1>) =\n        selectorFamily {\n            key (recoilValue.key + \"/__bind\")\n            get (fun (binder: 'T -> RecoilValue<'U,'Mode2>) getter -> getter.get(recoilValue) |> binder)\n            param_cache (fun () -> \n                BindSelectorCache<'T,'U,'Mode2>(Map.empty) \n                    :> CacheImplementation<RecoilValue<'U,ReadOnly>,'T -> RecoilValue<'U,_>>)\n        }\n\n    let bind (binder: 'T -> RecoilValue<'U,'Mode1>) (recoilValue: RecoilValue<'T,'Mode2>) =\n        bindFamily recoilValue binder\n\n    let apply (recoilFun: RecoilValue<'T -> 'U,'Mode1>) (recoilValue: RecoilValue<'T,'Mode2>) =\n        recoilFun |> bind (fun f -> recoilValue |> map f)\n        \n    let inline lift (value: 'T) =\n        Bindings.Recoil.constSelector(value)\n\n    module Operators =\n        /// Infix apply.\n        let (<*>) f m = apply f m\n        \n        /// Infix map.\n        let (<!>) f m = map f m\n        \n        /// Infix bind.\n        let (>>=) f m = bind f m\n        \n        /// Infix bind (right to left).\n        let (=<<) m f = bind f m\n    \n        /// Left-to-right Kleisli composition\n        let (>=>) f g = fun x -> f x >>= g\n    \n        /// Right-to-left Kleisli composition\n        let (<=<) x = (fun f a b -> f b a) (>=>) x\n\n    open Operators\n\n    let map2 (f: 'A -> 'B -> 'C) (a: RecoilValue<'A,_>) (b: RecoilValue<'B,_>) =\n        map f a <*> b\n    \n    let map3 (f: 'A -> 'B -> 'C -> 'D) (a: RecoilValue<'A,_>) (b: RecoilValue<'B,_>) (c: RecoilValue<'C,_>) =\n        map f a <*> b <*> c\n    \n    let map4 (f: 'A -> 'B -> 'C -> 'D -> 'E) (a: RecoilValue<'A,_>) (b: RecoilValue<'B,_>) (c: RecoilValue<'C,_>) (d: RecoilValue<'D,_>) =\n        map f a <*> b <*> c <*> d\n    \n    let map5 (f: 'A -> 'B -> 'C -> 'D -> 'E -> 'G) (a: RecoilValue<'A,_>) (b: RecoilValue<'B,_>) (c: RecoilValue<'C,_>) (d: RecoilValue<'D,_>) (e: RecoilValue<'E,_>) =\n        map f a <*> b <*> c <*> d <*> e\n    \n    let map6 (f: 'A -> 'B -> 'C -> 'D -> 'E -> 'G -> 'H) (a: RecoilValue<'A,_>) (b: RecoilValue<'B,_>) (c: RecoilValue<'C,_>) (d: RecoilValue<'D,_>) (e: RecoilValue<'E,_>) (g: RecoilValue<'G,_>) =\n        map f a <*> b <*> c <*> d <*> e <*> g\n\n    let unzip (a: RecoilValue<'A * 'B,_>) =\n        a |> map fst, a |> map snd\n    \n    let unzip3 (a: RecoilValue<'A * 'B * 'C,_>) =\n        a |> map (fun (res,_,_) -> res), a |> map (fun (_,res,_) -> res), a |> map (fun (_,_,res) -> res)\n\n    let unzip4 (a: RecoilValue<'A * 'B * 'C * 'D,_>) =\n        a |> map (fun (res,_,_,_) -> res),\n        a |> map (fun (_,res,_,_) -> res), \n        a |> map (fun (_,_,res,_) -> res), \n        a |> map (fun (_,_,_,res) -> res)\n    \n    let unzip5 (a: RecoilValue<'A * 'B * 'C * 'D * 'E,_>) =\n        a |> map (fun (res,_,_,_,_) -> res), \n        a |> map (fun (_,res,_,_,_) -> res), \n        a |> map (fun (_,_,res,_,_) -> res), \n        a |> map (fun (_,_,_,res,_) -> res), \n        a |> map (fun (_,_,_,_,res) -> res)\n    \n    let unzip6 (a: RecoilValue<'A * 'B * 'C * 'D * 'E * 'F,_>) =\n        a |> map (fun (res,_,_,_,_,_) -> res), \n        a |> map (fun (_,res,_,_,_,_) -> res), \n        a |> map (fun (_,_,res,_,_,_) -> res), \n        a |> map (fun (_,_,_,res,_,_) -> res), \n        a |> map (fun (_,_,_,_,res,_) -> res), \n        a |> map (fun (_,_,_,_,_,res) -> res)\n\n    let zip (a: RecoilValue<'A,_>) (b: RecoilValue<'B,_>) =\n        map2(fun x y -> x, y) a b\n    \n    let zip3 (a: RecoilValue<'A,_>) (b: RecoilValue<'B,_>) (c: RecoilValue<'C,_>) =\n        map3(fun x y z -> x, y, z) a b c\n    \n    let zip4 (a: RecoilValue<'A,_>) (b: RecoilValue<'B,_>) (c: RecoilValue<'C,_>) (d: RecoilValue<'D,_>) =\n        map4(fun w x y z -> w, x, y, z) a b c d\n    \n    let zip5 (a: RecoilValue<'A,_>) (b: RecoilValue<'B,_>) (c: RecoilValue<'C,_>) (d: RecoilValue<'D,_>) (e: RecoilValue<'E,_>) =\n        map5(fun v w x y z -> v, w, x, y, z) a b c d e\n    \n    let zip6 (a: RecoilValue<'A,_>) (b: RecoilValue<'B,_>) (c: RecoilValue<'C,_>)  (d: RecoilValue<'D,_>) (e: RecoilValue<'E,_>) (f: RecoilValue<'F,_>) =\n        map6(fun u v w x y z -> u, v, w, x, y, z) a b c d e f\n\n    module Array =\n        let traverse (f: 'T -> RecoilValue<'U,_>) (recoilValues: RecoilValue<'T,_> []) =\n            lift [||]\n            |> Array.foldBack (fun x xs ->\n                let x' = x |> bind f\n                map2 (fun h t -> Array.append [|h|] t) x' xs\n            ) recoilValues\n\n        let sequence (recoilValues: RecoilValue<'T,_> []) =\n            traverse (Bindings.Recoil.constSelector) recoilValues\n\n    module List =\n        let traverse (f: 'T -> RecoilValue<'U,_>) (recoilValues: RecoilValue<'T,_> list) =\n            lift []\n            |> List.foldBack (fun x xs ->\n                let x' = x |> bind f\n                map2 (fun h t -> h::t) x' xs\n            ) recoilValues\n\n        let sequence (recoilValues: RecoilValue<'T,_> list) =\n            traverse (Bindings.Recoil.constSelector) recoilValues\n\n    module ResizeArray =\n        let traverse f (recoilValues: ResizeArray<RecoilValue<'T,_>>) =\n            lift []\n            |> List.foldBack (fun x xs ->\n                let x' = x |> bind f\n                map2 (fun h t -> h::t) x' xs\n            ) (List.ofSeq recoilValues)\n            |> map ResizeArray\n    \n        let sequence (recoilValues: ResizeArray<RecoilValue<'T,_>>) : RecoilValue<ResizeArray<'T>,ReadOnly> =\n            traverse (Bindings.Recoil.constSelector) recoilValues\n\n    module Seq =\n        let traverse f (recoilValues: RecoilValue<'T,_> seq) =\n            lift Seq.empty\n            |> Seq.foldBack (fun x xs ->\n                let x' = x |> bind f\n                map2 (fun h t -> Seq.append (Seq.singleton(h)) t) x' xs\n            ) recoilValues\n    \n        let sequence (recoilValues: RecoilValue<'T,_> seq) =\n            traverse (Bindings.Recoil.constSelector) recoilValues\n\n[<AutoOpen>]\nmodule RecoilValueBuilder =\n    open System\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    let inline dispose (x: #IDisposable) = x.Dispose()\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    let inline using (a, k) = \n        try k a\n        finally dispose a\n\n    type RecoilValueBuilder internal () =\n        member _.Bind (value: RecoilValue<_,_>, f) = value |> RecoilValue.bind f\n\n        member _.Combine (value: RecoilValue<_,_>, f) = value |> RecoilValue.bind f\n\n        member _.Delay f = f\n\n        member _.Return value = Bindings.Recoil.constSelector value\n\n        member _.ReturnFrom (value: RecoilValue<_,_>) = value\n\n        member _.Run f = f()\n\n        member this.TryFinally ((m: RecoilValue<_,_>), handler) =\n            try this.ReturnFrom(m)\n            finally handler()\n\n        member this.TryWith ((m: RecoilValue<_,_>), handler) =\n            try this.ReturnFrom(m)\n            with e -> handler e\n\n        member this.Using (value, k) = \n            this.TryFinally(k value, (fun () -> dispose value))\n\n    let recoil = RecoilValueBuilder()\n","\r\n[<RequireQualifiedAccess>]\r\nmodule Promise\r\n\r\n#nowarn \"1182\" // Unused values\r\n\r\nopen System\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\nlet inline private (!!) (x:obj): 'T = unbox x\r\n\r\n[<Emit(\"new Promise($0)\")>]\r\n/// The promise function receives two other function parameters: success and fail\r\nlet create (f: ('T->unit)->(Exception->unit)->unit): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"new Promise(resolve => setTimeout(resolve, $0))\")>]\r\nlet sleep (ms: int): JS.Promise<unit> = jsNative\r\n\r\n[<Emit(\"Promise.resolve($0)\")>]\r\nlet lift<'T> (a: 'T): JS.Promise<'T> = jsNative\r\n\r\n/// Creates promise (in rejected state) with supplied reason.\r\nlet reject<'T> reason : JS.Promise<'T> = JS.Constructors.Promise.reject<'T> reason\r\n\r\n[<Emit(\"$1.then($0)\")>]\r\nlet bind (a: 'T->JS.Promise<'R>) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\r\n\r\n[<Emit(\"$1.then($0)\")>]\r\nlet map (a: 'T->'R) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\r\n\r\n[<Emit(\"$1.then($0)\")>]\r\nlet iter (a: 'T->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\n/// This version of `catch` fakes a function returning just 'T, as opposed to `Promise<'T>`. If you need to return `Promise<'T>`, use `catchBind`.\r\nlet catch (fail: Exception->'T) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\n/// This is a version of `catch` that fakes a function returning Promise<'T> as opposed to just 'T. If you need to return just 'T, use `catch`.\r\nlet catchBind (fail: Exception->JS.Promise<'T>) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\n/// Used to catch errors at the end of a promise chain.\r\nlet catchEnd (fail: Exception->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$2.then($0,$1)\")>]\r\n/// A combination of `map/bind` and `catch/catchBind`, this function applies the `success` continuation when the input promise resolves successfully, or `fail` continuation when the input promise fails. Both continuations may return either naked value `'R` or another promise `Promise<'R>`. Use the erased-cast operator `!^` to cast values when returning, for example:\r\n/// ```\r\n/// somePromise |> Promise.either (fun x -> !^(string x)) (fun err -> ^!(Promise.lift err.Message))\r\n/// ```\r\nlet either (success: 'T->U2<'R, JS.Promise<'R>>) (fail: 'E->U2<'R, JS.Promise<'R>>) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\r\n\r\n[<Emit(\"$2.then($0,$1)\")>]\r\nlet eitherEnd (success: 'T->unit) (fail: 'E->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$0.then()\")>]\r\nlet start (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\nlet tryStart (fail: Exception->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"Promise.all($0)\")>]\r\nlet Parallel (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\r\n\r\n[<Emit(\"Promise.all($0)\")>]\r\nlet all (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\r\n\r\nlet result (a: JS.Promise<'A>): JS.Promise<Result<'A, 'E>> =\r\n    either (U2.Case1 << Ok) (U2.Case1 << Error) a\r\n\r\nlet mapResult (fn: 'A -> 'B) (a: JS.Promise<Result<'A, 'E>>): JS.Promise<Result<'B, 'E>> =\r\n    a |> map (Result.map fn)\r\n\r\nlet bindResult (fn: 'A -> JS.Promise<'B>) (a: JS.Promise<Result<'A, 'E>>): JS.Promise<Result<'B, 'E>> =\r\n    a |> bind (fun a ->\r\n        match a with\r\n        | Ok a ->\r\n            result (fn a)\r\n        | Error e ->\r\n            lift (Error e))\r\n\r\nlet mapResultError (fn: 'B -> 'C) (a: JS.Promise<Result<'A,'B>>): JS.Promise<Result<'A,'C>> =\r\n    a |> map (Result.mapError fn)\r\n\r\nlet tap (fn: 'A -> unit) (a: JS.Promise<'A>): JS.Promise<'A> =\r\n    a |> map (fun x -> fn x; x)\r\n\r\ntype PromiseBuilder() =\r\n    [<Emit(\"$1.then($2)\")>]\r\n    member x.Bind(p: JS.Promise<'T>, f: 'T->JS.Promise<'R>): JS.Promise<'R> = jsNative\r\n\r\n    [<Emit(\"$1.then(() => $2)\")>]\r\n    member x.Combine(p1: JS.Promise<unit>, p2: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    member x.For(seq: seq<'T>, body: 'T->JS.Promise<unit>): JS.Promise<unit> =\r\n        // (lift (), seq)\r\n        // ||> Seq.fold (fun p a ->\r\n        //     bind (fun () -> body a) p)\r\n        let mutable p = lift ()\r\n        for a in seq do\r\n            p <- !!p?``then``(fun () -> body a)\r\n        p\r\n\r\n    [<Emit(\"$1.then($2)\")>]\r\n    member x.For(p: JS.Promise<'T>, f: 'T->JS.Promise<'R>): JS.Promise<'R> = jsNative\r\n\r\n    member x.While(guard, p): JS.Promise<unit> =\r\n        if guard()\r\n        then bind (fun () -> x.While(guard, p)) p\r\n        else lift()\r\n\r\n    [<Emit(\"Promise.resolve($1)\")>]\r\n    member x.Return(a: 'T): JS.Promise<'T> = jsNative\r\n\r\n    [<Emit(\"$1\")>]\r\n    member x.ReturnFrom(p: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    [<Emit(\"Promise.resolve()\")>]\r\n    member x.Zero(): JS.Promise<unit> = jsNative\r\n\r\n    member x.TryFinally(p: JS.Promise<'T>, compensation: unit->unit): JS.Promise<'T> =\r\n        either (fun (x: 'T) -> compensation(); U2.Case1 x) (fun er -> compensation(); raise !!er) p\r\n\r\n    [<Emit(\"$1.catch($2)\")>]\r\n    member x.TryWith(p: JS.Promise<'T>, catchHandler: Exception->JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    member x.Delay(generator: unit->JS.Promise<'T>): JS.Promise<'T> =\r\n        !!createObj[\r\n            \"then\" ==> fun f1 f2 ->\r\n                try generator()?``then``(f1,f2)\r\n                with er ->\r\n                    if box f2 = null\r\n                    then !!JS.Constructors.Promise.reject(er)\r\n                    else\r\n                        try !!JS.Constructors.Promise.resolve(f2(er))\r\n                        with er -> !!JS.Constructors.Promise.reject(er)\r\n            \"catch\" ==> fun f ->\r\n                try generator()?catch(f)\r\n                with er ->\r\n                    try !!JS.Constructors.Promise.resolve(f(er))\r\n                    with er -> !!JS.Constructors.Promise.reject(er)\r\n        ]\r\n\r\n    member x.Run(p:JS.Promise<'T>): JS.Promise<'T> =\r\n        create (fun success fail ->\r\n            try\r\n                let p : JS.Promise<'T> = !!JS.Constructors.Promise.resolve(p)\r\n                p?``then``(success, fail)\r\n            with\r\n              er -> fail(er)\r\n        )\r\n\r\n    member x.Using<'T, 'R when 'T :> IDisposable>(resource: 'T, binder: 'T->JS.Promise<'R>): JS.Promise<'R> =\r\n        x.TryFinally(binder(resource), fun () -> resource.Dispose())\r\n\r\n    [<Emit(\"Promise.all([$1,$2]).then(([a,b]) => $3(a,b))\")>]\r\n    [<CustomOperation(\"andFor\", IsLikeZip=true)>]\r\n    member x.Merge(a: JS.Promise<'T1>, b: JS.Promise<'T2>, [<ProjectionParameter>] resultSelector : 'T1 -> 'T2 -> 'R): JS.Promise<'R> = jsNative\r\n","[<AutoOpen>]\r\nmodule PromiseImpl\r\n\r\nlet promise = Promise.PromiseBuilder()","﻿namespace Feliz.Recoil\n\nmodule Elmish =\n    open Elmish\n    open Fable.Core\n    open Fable.Core.JsInterop\n    open Feliz\n    open System.ComponentModel\n\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\n    module Impl =\n        [<Struct>]\n        type RingState<'Item> =\n            | Writable of wx: 'Item array * ix: int\n            | ReadWritable of rw: 'Item array * wix:int * rix: int\n        \n        type RingBuffer<'Item>(size) =\n            let doubleSize ix (items: 'Item array) =\n                seq { yield! items |> Seq.skip ix\n                      yield! items |> Seq.take ix\n                      for _ in 0..items.Length do\n                        yield Unchecked.defaultof<'Item> }\n                |> Array.ofSeq\n        \n            let mutable state : 'Item RingState =\n                Writable (Array.zeroCreate (max size 10), 0)\n        \n            member _.Pop() =\n                match state with\n                | ReadWritable (items, wix, rix) ->\n                    let rix' = (rix + 1) % items.Length\n\n                    match rix' = wix with\n                    | true -> \n                        state <- Writable(items, wix)\n                    | _ ->\n                        state <- ReadWritable(items, wix, rix')\n\n                    Some items.[rix]\n                | _ -> None\n                |> fun res -> res\n\n            member _.Push (item:'Item) =\n                match state with\n                | Writable (items, ix) ->\n                    items.[ix] <- item\n\n                    let wix = (ix + 1) % items.Length\n\n                    state <- ReadWritable(items, wix, ix)\n                | ReadWritable (items, wix, rix) ->\n                    items.[wix] <- item\n\n                    let wix' = (wix + 1) % items.Length\n\n                    match wix' = rix with\n                    | true -> \n                        state <- ReadWritable(items |> doubleSize rix, items.Length, 0)\n                    | _ -> \n                        state <- ReadWritable(items, wix', rix)\n\n        let inline getDisposable (record: 'Model) =\n            match box record with\n            | :? System.IDisposable as disposable -> Some disposable\n            | _ -> None\n\n        [<Emit(\"Object.entries($0)\")>]\n        let objEntries (record: 'T) : ResizeArray<string * obj> = jsNative\n        \n        [<Emit(\"Object.entries($0)\")>]\n        let modelAtoms (record: 'T) : ResizeArray<string * RecoilValue<obj,ReadWrite>> = jsNative\n\n        let modelAtomFamily<'AtomRecord> (selectorKey: string) =\n            selectorFamily {\n                key (sprintf \"%s/_atoms_\" selectorKey)\n                get (fun (model: 'AtomRecord) _ -> modelAtoms(model))\n            }\n\n        let modelViewFamily (selectorKey: string) =\n            selectorFamily {\n                key (sprintf \"%s/_view_\" selectorKey)\n                get (fun modelAtom _ ->\n                    recoil {\n                        let! modelAtom = modelAtom\n                        let! modelSeq =\n                            modelAtom\n                            |> Seq.map (fun (field, recoilValue) ->\n                                recoilValue\n                                |> RecoilValue.map (fun v -> field, v))\n                            |> RecoilValue.Seq.sequence\n                        return unbox<'Model>(createObj !!modelSeq)\n                    })\n                set (fun (model: RecoilValue<ResizeArray<string * RecoilValue<obj,ReadWrite>>,ReadOnly>) setter (newModel: 'Model) ->\n                    objEntries newModel\n                    |> Seq.iter2(fun (_,(recoilValue: RecoilValue<obj,ReadWrite>)) (_,newValue) ->\n                        if setter.get(recoilValue) <> newValue then\n                            setter.set(recoilValue, newValue)\n                    ) (setter.get(model)))\n            }\n\n    open Impl\n\n    type Recoil with\n        /// Returns an elmish dispatch function.\n        static member useDispatch<'AtomRecord,'Model,'Msg> (selectorKey: string, model: 'AtomRecord, update: 'Msg -> 'Model -> 'Model * Cmd<'Msg>) =\n            let modelView = \n                modelAtomFamily<'AtomRecord> selectorKey model\n                |> modelViewFamily selectorKey\n\n            let state = React.useRef(None)\n            let getState = Recoil.useCallbackRef(fun setter -> setter.getPromise(modelView))\n            let setState = Recoil.useSetState(modelView)\n            \n            let ring = React.useRef(RingBuffer(10))\n\n            let token = React.useRef(new System.Threading.CancellationTokenSource())\n\n            let initializeState () =\n                if state.current.IsNone && not token.current.IsCancellationRequested then\n                    promise {\n                        let! initState = getState()\n\n                        state.current <- Some initState\n                    }\n                    |> Promise.start\n\n            React.useEffect(initializeState)\n\n            let rec dispatch (msg: 'Msg) =\n                promise {\n                    while state.current.IsNone && not token.current.IsCancellationRequested do\n                        do! Promise.sleep 10\n\n                    let mutable nextMsg = Some msg\n\n                    while nextMsg.IsSome && not token.current.IsCancellationRequested do\n                        let msg = nextMsg.Value\n                        let (state', cmd') = update msg state.current.Value\n                        cmd' |> List.iter (fun sub -> sub dispatch)\n                        nextMsg <- ring.current.Pop()\n                        state.current <- Some state'\n                        setState state'\n                }\n                |> Promise.start\n\n            let dispatch = React.useCallbackRef(dispatch)\n\n            React.useEffectOnce(fun () ->\n                React.createDisposable <| fun () ->\n                    token.current.Cancel()\n                    token.current.Dispose())\n\n            dispatch\n\n        /// Returns an elmish dispatch function.\n        static member useDispatch (selectorKey: string, model: 'AtomRecord, update: 'Msg -> 'Model -> 'Model) =\n            let modelView = \n                modelAtomFamily<'AtomRecord> selectorKey model\n                |> modelViewFamily selectorKey\n\n            let setModelView = Recoil.useSetState(modelView)\n            let getState = Recoil.useCallbackRef(fun setter -> setter.getPromise(modelView))\n\n            let token = React.useRef(new System.Threading.CancellationTokenSource())\n\n            let dispatch (msg: 'Msg) =\n                promise {\n                    let! state = getState()\n\n                    if not token.current.IsCancellationRequested then\n                        update msg state\n                        |> setModelView\n                } |> Promise.start\n\n            React.useEffectOnce(fun () ->\n                React.createDisposable <| fun () ->\n                    token.current.Cancel()\n                    token.current.Dispose())\n\n            let dispatch = React.useCallbackRef(dispatch)\n            \n            React.useCallbackRef(dispatch)\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.Elmish\n\nopen Css\nopen Elmish\nopen Feliz\nopen Feliz.Recoil\nopen Feliz.Recoil.Elmish\nopen Zanaptak.TypedCssClasses\n\ntype Model = \n    { Count: int }\n\nmodule Model =\n    type Atoms = \n        { Count: RecoilValue<int,ReadWrite> }\n\n    let [<Literal>] key = \"model\"\n\n    let atoms =\n        { Count = Recoil.atom(sprintf \"%s/count\" key, 0) }\n\ntype Msg =\n    | Increment\n    | Decrement\n    | IncrementIndirect\n    | IncrementTwice\n    | IncrementDelayed\n    | IncrementTwiceDelayed\n\nlet update (msg: Msg) (state: Model) : Model * Cmd<Msg> =\n    match msg with\n    | Increment ->\n        { state with Count = state.Count + 1 }, Cmd.ofSub (fun dispatch -> printfn \"Increment\")\n\n    | Decrement ->\n        { state with Count = state.Count - 1 }, Cmd.ofSub (fun dispatch -> printfn \"Decrement\")\n\n    | IncrementIndirect ->\n        state, Cmd.ofMsg Increment\n\n    | IncrementTwice ->\n        state, Cmd.batch [ Cmd.ofMsg Increment; Cmd.ofMsg Increment ]\n\n    | IncrementDelayed ->\n        state, Cmd.OfAsync.perform (fun () ->\n            async {\n                do! Async.Sleep 1000;\n                return IncrementIndirect\n            }) () (fun msg -> msg)\n\n    | IncrementTwiceDelayed ->\n        state, Cmd.batch [ Cmd.ofMsg IncrementDelayed; Cmd.ofMsg IncrementDelayed ]\n\nlet renderCount = React.functionComponent(fun () ->\n    let countRef = React.useRef 0\n        \n    let mutable currentCount = countRef.current\n\n    React.useEffect(fun () -> countRef.current <- currentCount)\n\n    currentCount <- currentCount + 1\n\n    Html.div [\n        prop.text (sprintf \"Render count: %i\" currentCount)\n    ])\n\nlet countComp = React.functionComponent(fun () ->\n    let count = Recoil.useValue(Model.atoms.Count)\n\n    Html.div [\n        prop.children [\n            //renderCount()\n            Html.div [\n                prop.text (sprintf \"Count: %i\" count)\n            ]\n        ]\n    ])\n\nlet drawBorder' = React.functionComponent(fun (input: {| children: ReactElement list|}) ->\n    Html.div [\n        prop.classes [ Bulma.Box ]\n        prop.children input.children\n    ])\n\nlet inline drawBorder (children: ReactElement list) = \n    drawBorder' {| children = children |}\n\nlet actionsComp = React.functionComponent(fun () ->\n    let dispatch = Recoil.useDispatch(Model.key, Model.atoms, update)\n\n    Html.div [\n        //renderCount()\n        Html.button [\n            prop.classes [ \n                Bulma.Button\n                Bulma.HasBackgroundPrimary\n                Bulma.HasTextWhite \n            ]\n            prop.text \"Increment\"\n            prop.onClick <| fun _ -> dispatch Increment\n        ]\n        Html.button [\n            prop.classes [ \n                Bulma.Button\n                Bulma.HasBackgroundPrimary\n                Bulma.HasTextWhite \n            ]\n            prop.text \"Decrement\"\n            prop.onClick <| fun _ -> dispatch Decrement\n        ]\n        Html.button [\n            prop.classes [ \n                Bulma.Button\n                Bulma.HasBackgroundPrimary\n                Bulma.HasTextWhite \n            ]\n            prop.text \"Increment Indirect\"\n            prop.onClick <| fun _ -> dispatch IncrementIndirect\n        ]\n        Html.button [\n            prop.classes [ \n                Bulma.Button\n                Bulma.HasBackgroundPrimary\n                Bulma.HasTextWhite \n            ]\n            prop.text \"Increment Delayed\"\n            prop.onClick <| fun _ -> dispatch IncrementDelayed\n        ]\n        Html.button [\n            prop.classes [ \n                Bulma.Button\n                Bulma.HasBackgroundPrimary\n                Bulma.HasTextWhite \n            ]\n            prop.text \"Increment Twice\"\n            prop.onClick <| fun _ -> dispatch IncrementTwice\n        ]\n        Html.button [\n            prop.classes [ \n                Bulma.Button\n                Bulma.HasBackgroundPrimary\n                Bulma.HasTextWhite \n            ]\n            prop.text \"Increment Twice Delayed\"\n            prop.onClick <| fun _ -> dispatch IncrementTwiceDelayed\n        ]\n    ])\n\nlet render = React.functionComponent(fun () ->\n    //drawBorder [\n    Recoil.root [\n        //renderCount()\n        Recoil.logger()\n        //drawBorder [\n        countComp()\n        //]\n        //drawBorder [\n        actionsComp()\n        //]\n        //]\n    ])\n","﻿namespace Feliz.Recoil\r\n\r\nopen Fable.Core\r\nopen Feliz\r\n\r\n[<AutoOpen>]\r\nmodule Logger =\r\n    let logAction (name: string, atomValue: 'T, prevAtomValue: 'T option) =\r\n        JS.console.groupCollapsed(\r\n            sprintf \"[%s]: Atom - %s\" \r\n                (System.DateTime.Now.ToLongTimeString())\r\n                name\r\n        )\r\n\r\n        JS.console.group(\"Current\")\r\n        JS.console.log(atomValue)\r\n        JS.console.groupEnd()\r\n\r\n        JS.console.group(\"Previous\")\r\n        match prevAtomValue with\r\n        | Some v -> JS.console.log(v)\r\n        | None -> JS.console.log(\"No previous value.\")\r\n        JS.console.groupEnd()\r\n\r\n        JS.console.groupEnd()\r\n\r\n    type Recoil with\r\n        /// Enables console debugging when in development.\r\n        ///\r\n        /// Similar to `React.strictMode`, this will do nothing\r\n        /// in production.\r\n        static member logger = React.functionComponent(fun () ->\r\n            #if DEBUG\r\n            Recoil.useTransactionObservation <| fun o ->\r\n                o.modifiedAtoms \r\n                |> Set.iter (fun (name, _) ->\r\n                    o.atomInfo.TryFind(name)\r\n                    |> Option.map (fun o -> o.persistence.type')\r\n                    |> Option.bind (fun _ -> o.atomValues.TryFind(name))\r\n                    |> Option.iter(fun value ->\r\n                        logAction (\r\n                            name,\r\n                            value,\r\n                            o.previousAtomValues.TryFind(name)\r\n                        ))\r\n                )\r\n            #endif\r\n\r\n            Html.none)\r\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.Composition\n\nopen Css\nopen Feliz\nopen Feliz.Recoil\nopen Zanaptak.TypedCssClasses\n\nlet textState = Recoil.atom(\"Composition/textState\", \"Hello world!\")\n\nlet otherTextState = Recoil.atom(\"Composition/otherTextState\", \"\")\n\nlet textStateTransformed =\n    recoil {\n        let! text = \n            textState\n            |> RecoilValue.map(fun s -> s + \" wow\")\n\n        let! otherText = otherTextState\n\n        return\n            if otherText = \"\" then text\n            else sprintf \"%s - %s\" text otherText\n    }\n\nlet label = React.functionComponent(fun (input: {| name: string |}) ->\n    Html.div [\n        prop.style [\n            style.paddingBottom (length.em 1)\n            style.paddingTop (length.em 1)\n        ]\n        prop.text input.name\n    ])\n\nlet maxWidth = style.maxWidth (length.em 30)\n\nlet textView = React.functionComponent(fun () ->\n    let text = Recoil.useValue(textStateTransformed)\n\n    Html.div [\n        prop.text text\n    ])\n\nlet textStateComp = React.functionComponent(fun () ->\n    let setText = Recoil.useSetState(textState)\n\n    Html.div [\n        Html.input [\n            prop.style [ maxWidth ]\n            prop.classes [ Bulma.Input ]\n            prop.type'.text\n            prop.maxLength 40\n            prop.onTextChange setText\n        ]\n    ])\n\nlet otherTextStateComp = React.functionComponent(fun () ->\n    let setText = Recoil.useSetState(otherTextState)\n\n    Html.div [\n        Html.input [\n            prop.style [ maxWidth ]\n            prop.classes [ Bulma.Input ]\n            prop.type'.text\n            prop.maxLength 40\n            prop.onTextChange setText\n        ]\n    ])\n\nlet render = React.functionComponent(fun () ->\n    Recoil.root [\n        label {| name = \"textState Atom:\" |}\n        textStateComp()\n        label {| name = \"otherTextState Atom:\" |}\n        otherTextStateComp()\n        label {| name = \"Output:\" |}\n        textView()\n    ])\n","﻿namespace Feliz.Recoil\r\n\r\nopen Fable.Core\r\nopen System.ComponentModel\r\n\r\n[<AutoOpen>]\r\nmodule AtomFamilyCE =\r\n    [<EditorBrowsable(EditorBrowsableState.Never)>]\r\n    [<RequireQualifiedAccess>]\r\n    module AtomFamilyState =\r\n        type Empty = interface end\r\n\r\n        type Key = | Value of string\r\n\r\n        [<NoEquality;NoComparison>]\r\n        type ReadWrite<'T,'U,'V> = \r\n            { Key: string\r\n              Def: 'T\r\n              Persist: PersistenceSettings<'U,'V> option\r\n              DangerouslyAllowMutability: bool option }\r\n    \r\n    type AtomFamilyBuilder [<EditorBrowsable(EditorBrowsableState.Never)>] () =\r\n        member _.Yield (_) =\r\n            unbox<AtomFamilyState.Empty>()\r\n\r\n        [<CustomOperation(\"key\")>]\r\n        member _.Key (state: AtomFamilyState.Empty, value: string) = \r\n            AtomFamilyState.Key.Value value\r\n            \r\n        [<CustomOperation(\"def\")>]\r\n        member _.Default (AtomFamilyState.Key.Value state, v: 'T) : AtomFamilyState.ReadWrite<'T,_,_> = \r\n            { Key = state\r\n              Def = v\r\n              Persist = None\r\n              DangerouslyAllowMutability = None }\r\n\r\n        [<CustomOperation(\"log\")>]\r\n        member _.Log (state: AtomFamilyState.ReadWrite<'T,_,_>) : AtomFamilyState.ReadWrite<'T,'U,'V> = \r\n            { Key = state.Key\r\n              Def = state.Def\r\n              Persist = \r\n                { Type = PersistenceType.Log\r\n                  Backbutton = None\r\n                  Validator = (fun _ -> None) }\r\n                |> Some\r\n              DangerouslyAllowMutability = state.DangerouslyAllowMutability }\r\n\r\n        [<CustomOperation(\"persist\")>]\r\n        member _.Persist (state: AtomFamilyState.ReadWrite<'T,_,_>, settings: PersistenceSettings<'U,'V>) : AtomFamilyState.ReadWrite<'T,'U,'V> = \r\n            { Key = state.Key\r\n              Def = state.Def\r\n              Persist = Some settings\r\n              DangerouslyAllowMutability = state.DangerouslyAllowMutability }\r\n\r\n        [<CustomOperation(\"dangerouslyAllowMutability\")>]\r\n        member _.DangerouslyAllowMutability (state: AtomFamilyState.ReadWrite<'T,'U,'V>, value: bool) : AtomFamilyState.ReadWrite<'T,'U,'V> = \r\n            { Key = state.Key\r\n              Def = state.Def\r\n              Persist = state.Persist\r\n              DangerouslyAllowMutability = Some value }\r\n\r\n        member inline _.Run (atom: AtomFamilyState.ReadWrite<JS.Promise<'T>,'T,'V>) =\r\n            Recoil.Family.atom (\r\n                atom.Key,\r\n                atom.Def,\r\n                ?persistence = atom.Persist, \r\n                ?dangerouslyAllowMutability = atom.DangerouslyAllowMutability\r\n            )\r\n\r\n        member inline _.Run (atom: AtomFamilyState.ReadWrite<'P -> JS.Promise<'T>,'T,'V>) =\r\n            Recoil.Family.atom (\r\n                atom.Key,\r\n                atom.Def,\r\n                ?persistence = atom.Persist, \r\n                ?dangerouslyAllowMutability = atom.DangerouslyAllowMutability\r\n            )\r\n\r\n        member inline _.Run (atom: AtomFamilyState.ReadWrite<Async<'T>,'T,'V>) =\r\n            Recoil.Family.atom (\r\n                atom.Key, \r\n                atom.Def, \r\n                ?persistence = atom.Persist, \r\n                ?dangerouslyAllowMutability = atom.DangerouslyAllowMutability\r\n            )\r\n\r\n        member inline _.Run (atom: AtomFamilyState.ReadWrite<'P -> Async<'T>,'T,'V>) =\r\n            Recoil.Family.atom (\r\n                atom.Key, \r\n                atom.Def, \r\n                ?persistence = atom.Persist, \r\n                ?dangerouslyAllowMutability = atom.DangerouslyAllowMutability\r\n            )\r\n\r\n        member inline _.Run (atom: AtomFamilyState.ReadWrite<RecoilValue<'T,'Mode>,'T,'V>) : 'P -> RecoilValue<'T,ReadWrite> =\r\n            Recoil.Family.atom (\r\n                atom.Key, \r\n                atom.Def, \r\n                ?persistence = atom.Persist, \r\n                ?dangerouslyAllowMutability = atom.DangerouslyAllowMutability\r\n            )\r\n\r\n        member inline _.Run (atom: AtomFamilyState.ReadWrite<'P -> RecoilValue<'T,'Mode>,'T,'V>) : 'P -> RecoilValue<'T,ReadWrite> =\r\n            Recoil.Family.atom (\r\n                atom.Key, \r\n                atom.Def, \r\n                ?persistence = atom.Persist, \r\n                ?dangerouslyAllowMutability = atom.DangerouslyAllowMutability\r\n            )\r\n\r\n    [<AutoOpen>]\r\n    module AtomFamilyBuilderMagic =\r\n        type AtomFamilyBuilder with\r\n            member inline _.Run<'T,'V,'P> (atom: AtomFamilyState.ReadWrite<'P -> 'T,'T,'V>) : 'P -> RecoilValue<'T,ReadWrite> =\r\n                Recoil.Family.atom (\r\n                    atom.Key, \r\n                    atom.Def, \r\n                    ?persistence = atom.Persist, \r\n                    ?dangerouslyAllowMutability = atom.DangerouslyAllowMutability\r\n                )\r\n\r\n    let atomFamily = AtomFamilyBuilder()\r\n","﻿[<RequireQualifiedAccess>]\nmodule Samples.AtomFamily\n\nopen Css\nopen Feliz\nopen Feliz.Recoil\nopen Zanaptak.TypedCssClasses\n\nlet atomIds = \n    atom {\n        key \"AtomFamily/atomIds\" \n        def ([] : int list)\n    }\n\nlet latestAtom =\n    selector {\n        key \"AtomFamily/latestAtom\"\n        get (fun getter ->\n            getter.get(atomIds)\n            |> List.tryHead)\n    }\n\nlet textFamilySelector =\n    let textFamily =\n        atomFamily {\n            key \"AtomFamily/textFamily\"\n            def (fun i -> sprintf \"Hello world #%i\" i)\n        }\n\n    (* \n        Can also be written as:\n    \n        Recoil.Family.atom(\"textFamily\", fun i -> sprintf \"Hello world #%i\" i)\n    *)\n\n    selector {\n        key \"AtomFamily/newAtomSelector\"\n        get (fun getter -> getter.get(atomIds) |> List.rev)\n        set (fun setter newAtoms ->\n            setter.get(atomIds)\n            |> List.append newAtoms \n            |> fun res -> setter.set(atomIds, res)\n\n            newAtoms\n            |> List.iter(fun i -> setter.set(textFamily(i), Recoil.defaultValue))\n        )\n    }\n\nlet maxWidth = style.maxWidth (length.em 30)\n\nlet atomList = React.functionComponent(fun () ->\n    let atomIds = Recoil.useValue(textFamilySelector)\n    \n    Html.orderedList (\n        atomIds\n        |> List.map (fun i ->\n            Html.li [\n                prop.key i\n                prop.text (sprintf \"Atom #%i\" i)\n            ]\n        )\n    ))\n\nlet addAtom = React.functionComponent(fun () ->\n    let latestAtom = Recoil.useValue(latestAtom)\n    let addNewAtom = Recoil.useSetState(textFamilySelector)\n\n    Html.button [\n        prop.classes [ \n            Bulma.Button\n            Bulma.HasBackgroundPrimary\n            Bulma.HasTextWhite \n        ]\n        prop.text \"Create New\"\n        prop.onClick <| fun _ ->\n            match latestAtom with\n            | Some i -> i + 1\n            | None -> 0\n            |> List.singleton\n            |> addNewAtom\n    ])\n\nlet render = React.functionComponent(fun () ->\n    Recoil.root [\n        addAtom()\n        atomList()\n    ])\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.SelectorFamily\r\n\r\nopen Css\r\nopen Feliz\r\nopen Feliz.Recoil\r\nopen Zanaptak.TypedCssClasses\r\n\r\nlet numberState = \r\n    atom {\r\n        key \"SelectorFamily/numberState\" \r\n        def 2\r\n    }\r\n\r\nlet multipliedState =\r\n    selectorFamily {\r\n        key \"SelectorFamily/multipliedState\"\r\n        get (fun multiplier (getter: SelectorGetter) -> \r\n            getter.get(numberState) * multiplier)\r\n    }\r\n\r\nlet maxWidth = style.maxWidth (length.em 30)\r\n\r\nlet label = React.functionComponent(fun (input: {| name: string |}) ->\r\n    Html.div [\r\n        prop.style [\r\n            style.paddingBottom (length.em 1)\r\n            style.paddingTop (length.em 1)\r\n        ]\r\n        prop.text input.name\r\n    ])\r\n\r\nlet numberComp = React.functionComponent(fun () ->\r\n    let setNumber = Recoil.useSetState(numberState)\r\n    \r\n    Html.div [\r\n        label {| name = \"Set number\" |}\r\n        Html.input [\r\n            prop.style [ maxWidth ]\r\n            prop.classes [ Bulma.Input ]\r\n            prop.type'.number\r\n            prop.step 1\r\n            prop.onTextChange <| fun s ->\r\n                try (int s |> setNumber)\r\n                with _ -> ()\r\n            prop.defaultValue 2\r\n        ]\r\n    ])\r\n\r\nlet multResultComp = React.functionComponent(fun (input: {| multiplier: int |}) ->\r\n    let multValue = Recoil.useValue(multipliedState(input.multiplier))\r\n\r\n    React.fragment [\r\n        label {| name = \"Result\" |}\r\n        Html.div [\r\n            prop.text (string multValue)\r\n        ]\r\n    ])\r\n\r\nlet multComp = React.functionComponent(fun () ->\r\n    let mult,setMult = React.useState(0)\r\n\r\n    Html.div [\r\n        label {| name = \"Set multiplier\" |}\r\n        Html.input [\r\n            prop.style [ maxWidth ]\r\n            prop.classes [ Bulma.Input ]\r\n            prop.type'.number\r\n            prop.step 1\r\n            prop.onTextChange <| fun s ->\r\n                try (int s |> setMult)\r\n                with _ -> ()\r\n            prop.defaultValue 0\r\n        ]\r\n        multResultComp {| multiplier = mult |}\r\n    ])\r\n\r\nlet render = React.functionComponent(fun () ->\r\n    Recoil.root [\r\n        numberComp()\r\n        multComp()\r\n    ])\r\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Concurrency\r\n\r\nopen Css\r\nopen Fable.Core\r\nopen Fable.SimpleHttp\r\nopen Fable.SimpleJson\r\nopen Feliz\r\nopen Feliz.Recoil\r\nopen Zanaptak.TypedCssClasses\r\n\r\ntype Pokemon = { Name: string; Image: string }\r\n\r\ntype SettingMode =\r\n    | WaitForAll\r\n    | WaitForAny\r\n    | WaitForNone\r\n\r\nlet rng = System.Random()\r\n\r\nlet settingMode =\r\n    atom {\r\n        key \"Concurrency/settingMode\"\r\n        def WaitForAll\r\n    }\r\n\r\nlet queryPokemon = \r\n    selectorFamily {\r\n        key \"Concurrency/queryPokemon\"\r\n        get (fun pokemon getter ->\r\n            let _ = getter.get(settingMode) // hack to force cache invalidation for demo\r\n            async {\r\n                do! Async.Sleep (rng.Next(200, 1000))\r\n                let! (statusCode, responseText) = \r\n                    Http.get (sprintf \"https://pokeapi.co/api/v2/pokemon/%s\" pokemon)\r\n\r\n                return\r\n                    if statusCode <> 200 then None\r\n                    else\r\n                        SimpleJson.tryParse responseText\r\n                        |> Option.map (fun text ->\r\n                            [ SimpleJson.readPath [\"sprites\";\"front_default\"] text |> Option.map (fun v -> \"Image\", v)\r\n                              SimpleJson.readPath [\"species\"; \"name\"] text |> Option.map (fun v -> \"Name\", v) ]\r\n                            |> List.choose id\r\n                            |> Map.ofList\r\n                            |> Json.JObject)\r\n                        |> Option.bind (Json.tryConvertFromJsonAs<Pokemon> >> function | Ok res -> Some res | _ -> None)\r\n            })\r\n    }\r\n\r\nlet pokemonList = [ \"ditto\"; \"charmander\"; \"pikachu\"; \"gengar\" ]\r\n\r\nlet fetchAllPokemon =\r\n    selectorFamily {\r\n        key \"Concurrency/fetchAllPokemon\"\r\n        get (fun (pokemonList: string list) getter ->\r\n            let pokemonRecoils =\r\n                pokemonList\r\n                |> List.map (queryPokemon)\r\n                    \r\n            let settingMode = getter.get(settingMode)\r\n\r\n            match settingMode with\r\n            | WaitForAll -> \r\n                Recoil.waitForAll(pokemonRecoils) \r\n                |> getter.get\r\n                |> fun res ->\r\n                    res |> List.iter (fun o -> JS.console.log(o))\r\n                    res\r\n            | WaitForAny -> \r\n                Recoil.waitForAny(pokemonRecoils) \r\n                |> getter.get\r\n                |> List.map (fun l -> l.valueMaybe() |> Option.flatten)\r\n                |> fun res ->\r\n                    res |> List.iter (fun o -> JS.console.log(o))\r\n                    res\r\n            | WaitForNone -> \r\n                Recoil.waitForNone(pokemonRecoils)\r\n                |> getter.get\r\n                |> List.map (fun l -> l.valueMaybe() |> Option.flatten)\r\n            |> List.choose id\r\n        )\r\n    }\r\n\r\nlet spinner =\r\n    Html.div [\r\n        prop.style [\r\n            style.textAlign.center\r\n            style.marginLeft length.auto\r\n            style.marginRight length.auto\r\n        ]\r\n        prop.children [\r\n            Html.li [\r\n                prop.className [\r\n                    FA.Fa\r\n                    FA.Fa5X\r\n                    FA.FaSpinner\r\n                    FA.FaSpin\r\n                ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet label = React.functionComponent(fun (input: {| name: string |}) ->\r\n    Html.div [\r\n        prop.style [\r\n            style.paddingBottom (length.em 1)\r\n            style.paddingTop (length.em 1)\r\n        ]\r\n        prop.text input.name\r\n    ])\r\n\r\nlet optionPanel = React.functionComponent(fun () ->\r\n    let selectedOption,setSelectedOption = Recoil.useState(settingMode)\r\n    \r\n    Html.div [\r\n        prop.style [\r\n            style.marginTop (length.em 1)\r\n            style.maxWidth (length.em 30)\r\n        ]\r\n        prop.classes [ Bulma.Box; Bulma.HasTextCentered ]\r\n        prop.children [\r\n            label {| name = \"Concurrency Mode\" |}\r\n            Html.div [\r\n                Html.button [\r\n                    prop.classes [ \r\n                        Bulma.Button\r\n                        Bulma.HasBackgroundPrimary\r\n                        Bulma.HasTextWhite \r\n                    ]\r\n                    prop.text \"WaitForAll\"\r\n                    prop.disabled <| (selectedOption = WaitForAll)\r\n                    prop.onClick <| fun _ -> setSelectedOption WaitForAll\r\n                ]\r\n                Html.button [\r\n                    prop.classes [ \r\n                        Bulma.Button\r\n                        Bulma.HasBackgroundPrimary\r\n                        Bulma.HasTextWhite \r\n                    ]\r\n                    prop.text \"WaitForAny\"\r\n                    prop.disabled <| (selectedOption = WaitForAny)\r\n                    prop.onClick <| fun _ -> setSelectedOption WaitForAny\r\n                ]\r\n                Html.button [\r\n                    prop.classes [ \r\n                        Bulma.Button\r\n                        Bulma.HasBackgroundPrimary\r\n                        Bulma.HasTextWhite \r\n                    ]\r\n                    prop.text \"WaitForNone\"\r\n                    prop.disabled <| (selectedOption = WaitForNone)\r\n                    prop.onClick <| fun _ -> setSelectedOption WaitForNone\r\n                ]\r\n            ]\r\n            \r\n        ]\r\n    ])\r\n\r\nlet imgComp = React.functionComponent(fun (input: {| src: string |}) ->\r\n    Html.div [\r\n        prop.classes [ Bulma.MediaLeft ]\r\n        prop.children [\r\n            Html.figure [\r\n                prop.classes [ Bulma.Image; Bulma.Is96X96 ]\r\n                prop.children [\r\n                    Html.img [\r\n                        prop.src input.src\r\n                    ]\r\n                ]\r\n            ]\r\n        ]\r\n    ])\r\n\r\nlet detailsComp = React.functionComponent(fun (input: {| name: string |}) ->\r\n    Html.div [\r\n        prop.classes [ Bulma.MediaContent ]\r\n        prop.children [\r\n            Html.div [\r\n                prop.classes [ Bulma.Content ]\r\n                prop.children [\r\n                    Html.h1 input.name\r\n                ]\r\n            ]\r\n        ]\r\n    ])\r\n\r\nlet pokemonDisplay = React.functionComponent(fun () ->\r\n    let pokemon = Recoil.useValue(fetchAllPokemon(pokemonList))\r\n\r\n    Html.div (\r\n        pokemon\r\n        |> List.map (fun p ->\r\n            Html.div [\r\n                prop.classes [ Bulma.Box ]\r\n                prop.children [\r\n                    Html.article [\r\n                        prop.classes [ Bulma.Media ]\r\n                        prop.children [\r\n                            imgComp {| src = p.Image |}\r\n                            detailsComp {| name = p.Name |}\r\n                        ]\r\n                    ]\r\n                ]\r\n            ]\r\n        )\r\n    ))\r\n\r\nlet render = React.functionComponent(fun () ->\r\n    Recoil.root [\r\n        Html.div [\r\n            prop.style [\r\n                style.maxWidth (length.em 30)\r\n            ]\r\n            prop.children [\r\n                optionPanel()\r\n                Html.div [\r\n                    React.suspense ([\r\n                        pokemonDisplay()\r\n                    ], spinner)\r\n                ]\r\n            ]\r\n        ]\r\n    ])\r\n","module App\n\nopen Browser.Dom\nopen Css\nopen Elmish\nopen Feliz\nopen Feliz.Markdown\nopen Feliz.Recoil\nopen Fable.SimpleHttp\nopen Feliz.Router\nopen Fable.Core.JsInterop\n\ntype Highlight =\n    static member inline highlight (properties: IReactProperty list) =\n        Interop.reactApi.createElement(importDefault \"react-highlight\", createObj !!properties)\n\nlet currentPath = \n    atom { \n        key \"currentPath\"\n        def (Router.currentUrl())\n    }\n\nlet currentTab = \n    atom { \n        key \"currentTab\"\n        def (Router.currentUrl())\n    }\n\nlet currentPathSelector =\n    selector {\n        key \"currentPathSelector\"\n        get (fun getter -> getter.get(currentPath))\n        set (fun setter (segments: string list) ->\n            setter.set(currentTab, segments)\n            setter.set(currentPath, segments) \n        )\n    }\n\nlet samples = \n    [ \"recoil-basic\", Samples.Basic.render()\n      \"recoil-mixandmatch\", Samples.MixAndMatch.render()\n      \"recoil-bidirectionalselectors\", Samples.BidirectionalSelectors.render()\n      \"recoil-reset\", Samples.Reset.render()\n      \"recoil-async\", Samples.Async.render()\n      \"recoil-callback\", Samples.Callback.render()\n      \"recoil-loadable\", Samples.Loadable.render()\n      \"recoil-previous\", Samples.Previous.render()\n      \"recoil-computationexpressions\", Samples.ComputationExpressions.render()\n      \"recoil-nesting\", Samples.Nesting.render()\n      \"recoil-logger\", Samples.Logger.render()\n      \"recoil-elmish\", Samples.Elmish.render()\n      \"recoil-composition\", Samples.Composition.render() \n      \"recoil-atomfamily\", Samples.AtomFamily.render()\n      \"recoil-selectorfamily\", Samples.SelectorFamily.render()\n      \"recoil-concurrency\", Samples.Concurrency.render() ]\n\nlet githubPath (rawPath: string) =\n    let parts = rawPath.Split('/')\n    if parts.Length > 5\n    then sprintf \"http://www.github.com/%s/%s\" parts.[3] parts.[4]\n    else rawPath\n\n/// Renders a code block from markdown using react-highlight.\n/// Injects sample React components when the code block has language of the format <language>:<sample-name>\nlet codeBlockRenderer' = React.functionComponent(fun (input: {| codeProps: Markdown.ICodeProperties |}) ->\n    if input.codeProps.language <> null && input.codeProps.language.Contains \":\" then\n        let languageParts = input.codeProps.language.Split(':')\n        let sampleName = languageParts.[1]\n        let sampleApp =\n            samples\n            |> List.tryFind (fun (name, _) -> name = sampleName)\n            |> Option.map snd\n            |> Option.defaultValue (Html.h1 [\n                prop.style [ style.color.crimson ];\n                prop.text (sprintf \"Could not find sample app '%s'\" sampleName)\n            ])\n        Html.div [\n            sampleApp\n            Highlight.highlight [\n                prop.className \"fsharp\"\n                prop.text(input.codeProps.value)\n            ]\n        ]\n    else\n        Highlight.highlight [\n            prop.className \"fsharp\"\n            prop.text(input.codeProps.value)\n        ])\n\nlet codeBlockRenderer (codeProps: Markdown.ICodeProperties) = codeBlockRenderer' {| codeProps = codeProps |}\n\nlet readme = sprintf \"https://raw.githubusercontent.com/%s/%s/master/README.md\"\nlet contributing = sprintf \"https://raw.githubusercontent.com/Zaid-Ajaj/Feliz/master/public/Feliz/Contributing.md\"\n\nlet (|PathPrefix|) (segments: string list) (path: string list) =\n    if path.Length > segments.Length then\n        match List.splitAt segments.Length path with\n        | start,end' when start = segments -> Some end'\n        | _ -> None\n    else None\n\nlet resolveContent (path: string list) =\n    match path with\n    | [ Urls.Recoil; Urls.Overview; ] -> [ \"Recoil\"; \"README.md\" ]\n    | [ Urls.Recoil; Urls.Installation ] -> [ \"Recoil\"; \"Installation.md\" ]\n    | [ Urls.Recoil; Urls.ReleaseNotes ] -> [ \"Recoil\"; \"RELEASE_NOTES.md\" ]\n    | [ Urls.Recoil; Urls.Contributing ] -> [ contributing ]\n    | PathPrefix [ Urls.Recoil; Urls.API ] (Some res) ->\n        match res with\n        | [ Urls.Types ] -> [ \"Types.md\" ]\n        | [ Urls.Components ] -> [ \"Components.md\" ]\n        | [ Urls.Functions ] -> [ \"Functions.md\" ]\n        | [ Urls.Hooks ] -> [ \"Hooks.md\" ]\n        | [ Urls.ComputationExpressions ] -> [ \"ComputationExpressions.md\" ]\n        | [ Urls.Elmish ] -> [ \"Elmish.md\" ]\n        | [ Urls.Bridge ] -> [ \"Bridge.md\" ]\n        | _ -> []\n        |> fun path -> [ Urls.Recoil; Urls.API ] @ path\n    | PathPrefix [ Urls.Recoil; Urls.Examples ] (Some res) ->\n        match res with\n        | [ Urls.Basic ] -> [ \"Basic.md\" ]\n        | [ Urls.MixAndMatch ] -> [ \"MixAndMatch.md\" ]\n        | [ Urls.BidirectionalSelectors ] -> [ \"BidirectionalSelectors.md\" ]\n        | [ Urls.Reset ] -> [ \"Reset.md\" ]\n        | [ Urls.Async ] -> [ \"Async.md\" ]\n        | [ Urls.Callback ] -> [ \"Callback.md\" ]\n        | [ Urls.Loadable ] -> [ \"Loadable.md\" ]\n        | [ Urls.Previous ] -> [ \"Previous.md\" ]\n        | [ Urls.ComputationExpressions ] -> [ \"ComputationExpressions.md\" ]\n        | [ Urls.Nesting ] -> [ \"Nesting.md\" ]\n        | [ Urls.Logger ] -> [ \"Logger.md\" ]\n        | [ Urls.Elmish ] -> [ \"Elmish.md\" ]\n        | [ Urls.Composition ] -> [ \"Composition.md\" ]\n        | [ Urls.AtomFamily ] -> [ \"AtomFamily.md\" ]\n        | [ Urls.SelectorFamily ] -> [ \"SelectorFamily.md\" ]\n        | [ Urls.Concurrency ] -> [ \"Concurrency.md\" ]\n        | [ Urls.Websockets ] -> [ \"Websockets.md\" ]\n        | _ -> []\n        |> fun path -> [ Urls.Recoil; Urls.Examples ] @ path\n    | _ -> [ \"Recoil\"; \"README.md\" ]\n\nlet contentPath =\n    atom {\n        key \"contentPath\"\n        def (Router.currentUrl() |> resolveContent)\n    }\n\nlet contentSelector =\n    selector {\n        key \"contentSelector\"\n        get (fun getter -> getter.get(contentPath))\n        set (fun setter (newValue: string list) ->\n            setter.set(currentPathSelector, newValue)\n\n            resolveContent newValue\n            |> fun res -> setter.set(contentPath, res)\n        )\n    }\n\nlet currentMarkdownPath =\n    selector {\n        key \"currentMarkdownPath\"\n        get (fun getter ->\n            match getter.get(contentSelector) with\n            | [ one: string ] when one.StartsWith \"http\" -> one\n            | segments -> String.concat \"/\" segments\n        )\n    }\n\nlet markdownSelector =\n    selector {\n        key \"markdownSelector\"\n        get (fun getter ->\n            async {\n                let! (statusCode, responseText) = Http.get (getter.get(currentMarkdownPath))\n                if statusCode = 200 then return Ok responseText\n                else return Error responseText\n            }\n        )\n    }\n\nlet renderMarkdown = React.functionComponent(fun (input: {| content: string |}) ->\n    let path = Recoil.useValue(currentMarkdownPath)\n\n    Html.div [\n        prop.className [ Bulma.Content; \"scrollbar\" ]\n        prop.style [ \n            style.width (length.percent 100)\n            style.padding (0,20)\n        ]\n        prop.children [\n            if path.StartsWith \"https://raw.githubusercontent.com\" then\n                Html.h2 [\n                    Html.i [ prop.className [ FA.Fa; FA.FaGithub ] ]\n                    Html.anchor [\n                        prop.style [ style.marginLeft 10; style.color.lightGreen ]\n                        prop.href (githubPath path)\n                        prop.text \"View on Github\"\n                    ]\n                ]\n\n            Markdown.markdown [\n                markdown.source input.content\n                markdown.escapeHtml false\n                markdown.renderers [\n                    markdown.renderers.code codeBlockRenderer\n                ]\n            ]\n        ]\n    ])\n\nmodule MarkdownLoader =\n    let render = React.memo(fun () ->\n        let content = Recoil.useValue(markdownSelector)\n\n        match content with\n        | Ok content -> renderMarkdown {| content = content |}\n        | Error error ->\n            Html.h1 [\n                prop.style [ style.color.crimson ]\n                prop.text error\n            ])\n\n// A collapsable nested menu for the sidebar\n// keeps internal state on whether the items should be visible or not based on the collapsed state\nlet nestedMenuList' = React.functionComponent(fun (input: {| name: string; basePath: string list; elems: (string list -> Fable.React.ReactElement) list |}) ->\n    let tab,setTab = Recoil.useState(currentTab)\n\n    let collapsed = \n        match tab with\n        | [ ] -> false\n        | _ -> \n            input.basePath \n            |> List.indexed \n            |> List.forall (fun (i, segment) -> \n                List.tryItem i tab\n                |> Option.map ((=) segment) \n                |> Option.defaultValue false) \n\n    Html.li [\n        Html.anchor [\n            prop.className Bulma.IsUnselectable\n            prop.onClick <| fun _ -> \n                match collapsed with\n                | true -> setTab(input.basePath |> List.rev |> List.tail |> List.rev)\n                | false -> setTab(input.basePath)\n            prop.children [\n                Html.i [\n                    prop.style [ style.marginRight 10 ]\n                    prop.className [\n                        FA.Fa\n                        if not collapsed then FA.FaAngleDown else FA.FaAngleUp\n                    ]\n                ]\n                Html.span input.name\n            ]\n        ]\n\n        Html.ul [\n            prop.className Bulma.MenuList\n            prop.style [ \n                if not collapsed then yield! [ style.display.none ] \n            ]\n            prop.children (input.elems |> List.map (fun f -> f input.basePath))\n        ]\n    ])\n\n// top level label\nlet menuLabel' = React.functionComponent (fun (input: {| content: string |}) ->\n    Html.p [\n        prop.className [ Bulma.MenuLabel; Bulma.IsUnselectable ]\n        prop.text input.content\n    ])\n\n// top level menu\nlet menuList' = React.functionComponent(fun (input: {| items: Fable.React.ReactElement list |}) ->\n    Html.ul [\n        prop.className Bulma.MenuList\n        prop.style [ style.width (length.percent 95) ]\n        prop.children input.items\n    ])\n\nlet menuItem' = React.functionComponent(fun (input: {| name: string; path: string list |}) ->\n    let path = Recoil.useValue(currentTab)\n\n    Html.li [\n        Html.anchor [\n            prop.className [\n                if path = input.path then Bulma.IsActive\n                if path = input.path then Bulma.HasBackgroundPrimary\n            ]\n            prop.text input.name\n            prop.href (sprintf \"#/%s\" (String.concat \"/\" input.path))\n        ]\n    ])\n\nlet menuLabel (content: string) =\n    menuLabel' {| content = content |}\n\nlet menuList (items: Fable.React.ReactElement list) =\n    menuList' {| items = items |}\n\nlet nestedMenuItem (name: string) (extendedPath: string list) (basePath: string list) =\n    let path = basePath @ extendedPath\n    menuItem' \n        {| name = name\n           path = path |}\n\nlet nestedMenuList (name: string) (basePath: string list) (items: (string list -> Fable.React.ReactElement) list) =\n    nestedMenuList' \n        {| name = name\n           basePath = basePath\n           elems = items |}\n\nlet subNestedMenuList (name: string) (basePath: string list) (items: (string list -> Fable.React.ReactElement) list) (addedBasePath: string list) =\n    nestedMenuList' \n        {| name = name\n           basePath = (addedBasePath @ basePath)\n           elems = items |}\n\nlet menuItem (name: string) (basePath: string list) =\n    menuItem' \n        {| name = name\n           path = basePath |}\n\nlet allItems = React.memo(fun () ->\n    Html.div [\n        prop.className \"scrollbar\"\n        prop.children [\n            menuList [\n                menuItem \"Overview\" [ ]\n                menuItem \"Installation\" [ Urls.Recoil; Urls.Installation ]\n                menuItem \"Release Notes\" [ Urls.Recoil; Urls.ReleaseNotes ]\n                menuItem \"Contributing\" [ Urls.Recoil; Urls.Contributing ]\n                nestedMenuList \"API Reference\" [ Urls.Recoil; Urls.API ] [\n                    nestedMenuItem \"Types\" [ Urls.Types ]\n                    nestedMenuItem \"Components\" [ Urls.Components ]\n                    nestedMenuItem \"Functions\" [ Urls.Functions ]\n                    nestedMenuItem \"Hooks\" [ Urls.Hooks ]\n                    nestedMenuItem \"Computation Expressions\" [ Urls.ComputationExpressions ]\n                    nestedMenuItem \"Elmish\" [ Urls.Elmish ]\n                    nestedMenuItem \"Bridge\" [ Urls.Bridge ]\n                ]\n                menuLabel \"Examples\"\n                menuItem \"Basic\" [ Urls.Recoil; Urls.Examples; Urls.Basic ]\n                menuItem \"Mix and Match\" [ Urls.Recoil; Urls.Examples; Urls.MixAndMatch ]\n                menuItem \"Bi-directional Selectors\" [ Urls.Recoil; Urls.Examples; Urls.BidirectionalSelectors ]\n                menuItem \"Reset\" [ Urls.Recoil; Urls.Examples; Urls.Reset ]\n                menuItem \"Asynchronous Selectors\" [ Urls.Recoil; Urls.Examples; Urls.Async ]\n                menuItem \"Callbacks\" [ Urls.Recoil; Urls.Examples; Urls.Callback ]\n                menuItem \"Loadables\" [ Urls.Recoil; Urls.Examples; Urls.Loadable ]\n                menuItem \"Previous\" [ Urls.Recoil; Urls.Examples; Urls.Previous ]\n                menuItem \"Computation Expressions\" [ Urls.Recoil; Urls.Examples; Urls.ComputationExpressions ]\n                menuItem \"Nesting\" [ Urls.Recoil; Urls.Examples; Urls.Nesting ]\n                menuItem \"Debug Logger\" [ Urls.Recoil; Urls.Examples; Urls.Logger ]\n                menuItem \"Elmish\" [ Urls.Recoil; Urls.Examples; Urls.Elmish ]\n                menuItem \"Composition\" [ Urls.Recoil; Urls.Examples; Urls.Composition ]\n                menuItem \"Atom Family\" [ Urls.Recoil; Urls.Examples; Urls.AtomFamily ]\n                menuItem \"Selector Family\" [ Urls.Recoil; Urls.Examples; Urls.SelectorFamily ]\n                menuItem \"Concurrency\" [ Urls.Recoil; Urls.Examples; Urls.Concurrency ]\n                menuItem \"With Websockets\" [ Urls.Recoil; Urls.Examples; Urls.Websockets ]\n            ]\n        ]\n    ])\n\nlet sidebar = React.memo(fun () ->\n    // the actual nav bar\n    Html.aside [\n        prop.className Bulma.Menu\n        prop.style [\n            style.width (length.perc 100)\n        ]\n        prop.children [ \n            menuLabel \"Feliz.Recoil\"\n            allItems() \n        ]\n    ])\n\nlet main = React.memo(fun () ->\n    Html.div [\n        prop.className [ Bulma.Tile; Bulma.IsAncestor ]\n        prop.children [\n            Html.div [\n                prop.className [ Bulma.Tile; Bulma.Is2 ]\n                prop.children [ sidebar() ]\n            ]\n\n            Html.div [\n                prop.className Bulma.Tile\n                prop.style [ style.paddingTop 30 ]\n                prop.children [\n                    React.suspense ([\n                        MarkdownLoader.render() \n                    ], Html.none)\n                ]\n            ]\n        ]\n    ])\n\nlet render' = React.memo(fun () ->\n    let setPath = Recoil.useSetState(contentSelector)\n\n    let application =\n        Html.div [\n            prop.style [ \n                style.padding 30\n            ]\n            prop.children [ main() ]\n        ]\n\n    Router.router [\n        Router.onUrlChanged setPath\n        Router.application application\n    ])\n\nlet appMain = React.memo(fun () ->\n    Recoil.root [\n        render'()\n    ])\n\nReactDOM.render(appMain(), document.getElementById \"root\")\n","/**\nC-like unsigned 32 bits integers in Javascript\nCopyright (C) 2013, Pierre Curto\nMIT license\n*/\n// Local cache for typical radices\nvar radixPowerCache = {\n    36: UINT32(Math.pow(36, 5))\n    , 16: UINT32(Math.pow(16, 7))\n    , 10: UINT32(Math.pow(10, 9))\n    , 2: UINT32(Math.pow(2, 30))\n}\nvar radixCache = {\n    36: UINT32(36)\n    , 16: UINT32(16)\n    , 10: UINT32(10)\n    , 2: UINT32(2)\n}\n\n/**\n *\tRepresents an unsigned 32 bits integer\n * @constructor\n * @param {Number|String|Number} low bits     | integer as a string \t\t | integer as a number\n * @param {Number|Number|Undefined} high bits | radix (optional, default=10)\n * @return\n */\nexport function UINT32(l, h) {\n    if (!(this instanceof UINT32))\n        return new UINT32(l, h)\n\n    this._low = 0\n    this._high = 0\n    this.remainder = null\n    if (typeof h == 'undefined')\n        return fromNumber.call(this, l)\n\n    if (typeof l == 'string')\n        return fromString.call(this, l, h)\n\n    fromBits.call(this, l, h)\n}\n\n/**\n * Set the current _UINT32_ object with its low and high bits\n * @method fromBits\n * @param {Number} low bits\n * @param {Number} high bits\n * @return ThisExpression\n */\nfunction fromBits(l, h) {\n    this._low = l | 0\n    this._high = h | 0\n\n    return this\n}\nUINT32.prototype.fromBits = fromBits\n\n/**\n * Set the current _UINT32_ object from a number\n * @method fromNumber\n * @param {Number} number\n * @return ThisExpression\n */\nfunction fromNumber(value) {\n    this._low = value & 0xFFFF\n    this._high = value >>> 16\n\n    return this\n}\nUINT32.prototype.fromNumber = fromNumber\n\n/**\n * Set the current _UINT32_ object from a string\n * @method fromString\n * @param {String} integer as a string\n * @param {Number} radix (optional, default=10)\n * @return ThisExpression\n */\nfunction fromString(s, radix) {\n    var value = parseInt(s, radix || 10)\n\n    this._low = value & 0xFFFF\n    this._high = value >>> 16\n\n    return this\n}\nUINT32.prototype.fromString = fromString\n\n/**\n * Convert this _UINT32_ to a number\n * @method toNumber\n * @return {Number} the converted UINT32\n */\nUINT32.prototype.toNumber = function () {\n    return (this._high * 65536) + this._low\n}\n\n/**\n * Convert this _UINT32_ to a string\n * @method toString\n * @param {Number} radix (optional, default=10)\n * @return {String} the converted UINT32\n */\nUINT32.prototype.toString = function (radix) {\n    return this.toNumber().toString(radix || 10)\n}\n\n/**\n * Add two _UINT32_. The current _UINT32_ stores the result\n * @method add\n * @param {Object} other UINT32\n * @return ThisExpression\n */\nUINT32.prototype.add = function (other) {\n    var a00 = this._low + other._low\n    var a16 = a00 >>> 16\n\n    a16 += this._high + other._high\n\n    this._low = a00 & 0xFFFF\n    this._high = a16 & 0xFFFF\n\n    return this\n}\n\n/**\n * Subtract two _UINT32_. The current _UINT32_ stores the result\n * @method subtract\n * @param {Object} other UINT32\n * @return ThisExpression\n */\nUINT32.prototype.subtract = function (other) {\n    //TODO inline\n    return this.add(other.clone().negate())\n}\n\n/**\n * Multiply two _UINT32_. The current _UINT32_ stores the result\n * @method multiply\n * @param {Object} other UINT32\n * @return ThisExpression\n */\nUINT32.prototype.multiply = function (other) {\n\t/*\n\t\ta = a00 + a16\n\t\tb = b00 + b16\n\t\ta*b = (a00 + a16)(b00 + b16)\n\t\t\t= a00b00 + a00b16 + a16b00 + a16b16\n\n\t\ta16b16 overflows the 32bits\n\t */\n    var a16 = this._high\n    var a00 = this._low\n    var b16 = other._high\n    var b00 = other._low\n\n    /* Removed to increase speed under normal circumstances (i.e. not multiplying by 0 or 1)\n        // this == 0 or other == 1: nothing to do\n        if ((a00 == 0 && a16 == 0) || (b00 == 1 && b16 == 0)) return this\n    \n        // other == 0 or this == 1: this = other\n        if ((b00 == 0 && b16 == 0) || (a00 == 1 && a16 == 0)) {\n            this._low = other._low\n            this._high = other._high\n            return this\n        }\n    */\n\n    var c16, c00\n    c00 = a00 * b00\n    c16 = c00 >>> 16\n\n    c16 += a16 * b00\n    c16 &= 0xFFFF\t\t// Not required but improves performance\n    c16 += a00 * b16\n\n    this._low = c00 & 0xFFFF\n    this._high = c16 & 0xFFFF\n\n    return this\n}\n\n/**\n * Divide two _UINT32_. The current _UINT32_ stores the result.\n * The remainder is made available as the _remainder_ property on\n * the _UINT32_ object. It can be null, meaning there are no remainder.\n * @method div\n * @param {Object} other UINT32\n * @return ThisExpression\n */\nUINT32.prototype.div = function (other) {\n    if ((other._low == 0) && (other._high == 0)) throw Error('division by zero')\n\n    // other == 1\n    if (other._high == 0 && other._low == 1) {\n        this.remainder = new UINT32(0)\n        return this\n    }\n\n    // other > this: 0\n    if (other.gt(this)) {\n        this.remainder = this.clone()\n        this._low = 0\n        this._high = 0\n        return this\n    }\n    // other == this: 1\n    if (this.eq(other)) {\n        this.remainder = new UINT32(0)\n        this._low = 1\n        this._high = 0\n        return this\n    }\n\n    // Shift the divisor left until it is higher than the dividend\n    var _other = other.clone()\n    var i = -1\n    while (!this.lt(_other)) {\n        // High bit can overflow the default 16bits\n        // Its ok since we right shift after this loop\n        // The overflown bit must be kept though\n        _other.shiftLeft(1, true)\n        i++\n    }\n\n    // Set the remainder\n    this.remainder = this.clone()\n    // Initialize the current result to 0\n    this._low = 0\n    this._high = 0\n    for (; i >= 0; i--) {\n        _other.shiftRight(1)\n        // If shifted divisor is smaller than the dividend\n        // then subtract it from the dividend\n        if (!this.remainder.lt(_other)) {\n            this.remainder.subtract(_other)\n            // Update the current result\n            if (i >= 16) {\n                this._high |= 1 << (i - 16)\n            } else {\n                this._low |= 1 << i\n            }\n        }\n    }\n\n    return this\n}\n\n/**\n * Negate the current _UINT32_\n * @method negate\n * @return ThisExpression\n */\nUINT32.prototype.negate = function () {\n    var v = (~this._low & 0xFFFF) + 1\n    this._low = v & 0xFFFF\n    this._high = (~this._high + (v >>> 16)) & 0xFFFF\n\n    return this\n}\n\n/**\n * Equals\n * @method eq\n * @param {Object} other UINT32\n * @return {Boolean}\n */\nUINT32.prototype.equals = UINT32.prototype.eq = function (other) {\n    return (this._low == other._low) && (this._high == other._high)\n}\n\n/**\n * Greater than (strict)\n * @method gt\n * @param {Object} other UINT32\n * @return {Boolean}\n */\nUINT32.prototype.greaterThan = UINT32.prototype.gt = function (other) {\n    if (this._high > other._high) return true\n    if (this._high < other._high) return false\n    return this._low > other._low\n}\n\n/**\n * Less than (strict)\n * @method lt\n * @param {Object} other UINT32\n * @return {Boolean}\n */\nUINT32.prototype.lessThan = UINT32.prototype.lt = function (other) {\n    if (this._high < other._high) return true\n    if (this._high > other._high) return false\n    return this._low < other._low\n}\n\n/**\n * Bitwise OR\n * @method or\n * @param {Object} other UINT32\n * @return ThisExpression\n */\nUINT32.prototype.or = function (other) {\n    this._low |= other._low\n    this._high |= other._high\n\n    return this\n}\n\n/**\n * Bitwise AND\n * @method and\n * @param {Object} other UINT32\n * @return ThisExpression\n */\nUINT32.prototype.and = function (other) {\n    this._low &= other._low\n    this._high &= other._high\n\n    return this\n}\n\n/**\n * Bitwise NOT\n * @method not\n * @return ThisExpression\n */\nUINT32.prototype.not = function () {\n    this._low = ~this._low & 0xFFFF\n    this._high = ~this._high & 0xFFFF\n\n    return this\n}\n\n/**\n * Bitwise XOR\n * @method xor\n * @param {Object} other UINT32\n * @return ThisExpression\n */\nUINT32.prototype.xor = function (other) {\n    this._low ^= other._low\n    this._high ^= other._high\n\n    return this\n}\n\n/**\n * Bitwise shift right\n * @method shiftRight\n * @param {Number} number of bits to shift\n * @return ThisExpression\n */\nUINT32.prototype.shiftRight = UINT32.prototype.shiftr = function (n) {\n    if (n > 16) {\n        this._low = this._high >> (n - 16)\n        this._high = 0\n    } else if (n == 16) {\n        this._low = this._high\n        this._high = 0\n    } else {\n        this._low = (this._low >> n) | ((this._high << (16 - n)) & 0xFFFF)\n        this._high >>= n\n    }\n\n    return this\n}\n\n/**\n * Bitwise shift left\n * @method shiftLeft\n * @param {Number} number of bits to shift\n * @param {Boolean} allow overflow\n * @return ThisExpression\n */\nUINT32.prototype.shiftLeft = UINT32.prototype.shiftl = function (n, allowOverflow) {\n    if (n > 16) {\n        this._high = this._low << (n - 16)\n        this._low = 0\n        if (!allowOverflow) {\n            this._high &= 0xFFFF\n        }\n    } else if (n == 16) {\n        this._high = this._low\n        this._low = 0\n    } else {\n        this._high = (this._high << n) | (this._low >> (16 - n))\n        this._low = (this._low << n) & 0xFFFF\n        if (!allowOverflow) {\n            // Overflow only allowed on the high bits...\n            this._high &= 0xFFFF\n        }\n    }\n\n    return this\n}\n\n/**\n * Bitwise rotate left\n * @method rotl\n * @param {Number} number of bits to rotate\n * @return ThisExpression\n */\nUINT32.prototype.rotateLeft = UINT32.prototype.rotl = function (n) {\n    var v = (this._high << 16) | this._low\n    v = (v << n) | (v >>> (32 - n))\n    this._low = v & 0xFFFF\n    this._high = v >>> 16\n\n    return this\n}\n\n/**\n * Bitwise rotate right\n * @method rotr\n * @param {Number} number of bits to rotate\n * @return ThisExpression\n */\nUINT32.prototype.rotateRight = UINT32.prototype.rotr = function (n) {\n    var v = (this._high << 16) | this._low\n    v = (v >>> n) | (v << (32 - n))\n    this._low = v & 0xFFFF\n    this._high = v >>> 16\n\n    return this\n}\n\n/**\n * Clone the current _UINT32_\n * @method clone\n * @return {Object} cloned UINT32\n */\nUINT32.prototype.clone = function () {\n    return new UINT32(this._low, this._high)\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\nexport default Long;\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n//# sourceMappingURL=long.js.map","import { isValid } from \"./Int32\";\nimport * as LongLib from \"./lib/long\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, LongLib.ZERO];\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = LongLib.compare(x, last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return null;\n        }\n    };\n}\n//# sourceMappingURL=Long.js.map","import { Union } from \"./Types\";\nimport { compare, equals, structuralHash } from \"./Util\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    toJSON() {\n        return this.value;\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function tryValue(x) {\n    return x instanceof Some ? x.value : x;\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n// CHOICE\nexport class Choice extends Union {\n    constructor(tag, name, field) {\n        super(tag, name, field);\n    }\n}\nexport function choice1(x) {\n    return new Choice(0, \"Choice1Of2\", x);\n}\nexport function choice2(x) {\n    return new Choice(1, \"Choice2Of2\", x);\n}\nexport function tryValueIfChoice1(x) {\n    return x.tag === 0 ? some(x.fields[0]) : undefined;\n}\nexport function tryValueIfChoice2(x) {\n    return x.tag === 1 ? some(x.fields[0]) : undefined;\n}\n// RESULT\nexport class Result extends Union {\n    constructor(tag, name, field) {\n        super(tag, name, field);\n    }\n}\nexport function ok(x) {\n    return new Result(0, \"Ok\", x);\n}\nexport function error(x) {\n    return new Result(1, \"Error\", x);\n}\nexport function mapOk(f, result) {\n    return result.tag === 0 ? ok(f(result.fields[0])) : result;\n}\nexport function mapError(f, result) {\n    return result.tag === 1 ? error(f(result.fields[0])) : result;\n}\nexport function bindOk(f, result) {\n    return result.tag === 0 ? f(result.fields[0]) : result;\n}\n//# sourceMappingURL=Option.js.map","import { defaultArg, value as value$$15, some } from \"./Option.js\";\nimport { min as min$$1, compare, addToDict, addToSet, getItemFromDict, tryGetValue, max as max$$1, comparePrimitives } from \"./Util.js\";\nimport { createMutable } from \"./Map.js\";\nimport { createMutable as createMutable$$1 } from \"./Set.js\";\nimport { List } from \"./Types.js\";\nimport { iterate as iterate$$1 } from \"./Seq.js\";\nconst indexNotFoundMsg = \"An index satisfying the predicate was not found in the collection.\";\nexport function append(array1, array2, cons) {\n  if (ArrayBuffer.isView(array1)) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new cons(len1 + len2);\n\n    for (let i = 0; i <= len1 - 1; i++) {\n      newArray[i] = array1[i];\n    }\n\n    for (let i$$1 = 0; i$$1 <= len2 - 1; i$$1++) {\n      newArray[i$$1 + len1] = array2[i$$1];\n    }\n\n    return newArray;\n  } else {\n    return array1.concat(array2);\n  }\n}\nexport function filter(predicate, array) {\n  return array.filter(predicate);\n}\nexport function fill(target, targetIndex, count, value) {\n  target.fill(value, targetIndex, targetIndex + count);\n  return target;\n}\nexport function getSubArray(array$$3, start$$1, count$$2) {\n  return array$$3.slice(start$$1, start$$1 + count$$2);\n}\nexport function last(array$$5) {\n  if (array$$5.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  return array$$5[array$$5.length - 1];\n}\nexport function tryLast(array$$6) {\n  if (array$$6.length === 0) {\n    return undefined;\n  } else {\n    return some(array$$6[array$$6.length - 1]);\n  }\n}\nexport function mapIndexed(f, source, cons$$1) {\n  if (ArrayBuffer.isView(source)) {\n    const len = source.length | 0;\n    const target$$1 = new cons$$1(len);\n\n    for (let i$$2 = 0; i$$2 <= len - 1; i$$2++) {\n      target$$1[i$$2] = f(i$$2, source[i$$2]);\n    }\n\n    return target$$1;\n  } else {\n    return source.map(function (delegateArg0, delegateArg1) {\n      return f(delegateArg1, delegateArg0);\n    });\n  }\n}\nexport function map(f$$1, source$$1, cons$$2) {\n  if (ArrayBuffer.isView(source$$1)) {\n    const len$$1 = source$$1.length | 0;\n    const target$$2 = new cons$$2(len$$1);\n\n    for (let i$$4 = 0; i$$4 <= len$$1 - 1; i$$4++) {\n      target$$2[i$$4] = f$$1(source$$1[i$$4]);\n    }\n\n    return target$$2;\n  } else {\n    return source$$1.map(function mapping$$1(x$$1) {\n      return f$$1(x$$1);\n    });\n  }\n}\nexport function mapIndexed2(f$$2, source1, source2, cons$$3) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result = new cons$$3(source1.length);\n\n  for (let i$$5 = 0; i$$5 <= source1.length - 1; i$$5++) {\n    result[i$$5] = f$$2(i$$5, source1[i$$5], source2[i$$5]);\n  }\n\n  return result;\n}\nexport function map2(f$$3, source1$$1, source2$$1, cons$$4) {\n  if (source1$$1.length !== source2$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result$$1 = new cons$$4(source1$$1.length);\n\n  for (let i$$6 = 0; i$$6 <= source1$$1.length - 1; i$$6++) {\n    result$$1[i$$6] = f$$3(source1$$1[i$$6], source2$$1[i$$6]);\n  }\n\n  return result$$1;\n}\nexport function mapIndexed3(f$$4, source1$$2, source2$$2, source3, cons$$5) {\n  if (source1$$2.length !== source2$$2.length ? true : source2$$2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result$$2 = new cons$$5(source1$$2.length);\n\n  for (let i$$7 = 0; i$$7 <= source1$$2.length - 1; i$$7++) {\n    result$$2[i$$7] = f$$4(i$$7, source1$$2[i$$7], source2$$2[i$$7], source3[i$$7]);\n  }\n\n  return result$$2;\n}\nexport function map3(f$$5, source1$$3, source2$$3, source3$$1, cons$$6) {\n  if (source1$$3.length !== source2$$3.length ? true : source2$$3.length !== source3$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result$$3 = new cons$$6(source1$$3.length);\n\n  for (let i$$8 = 0; i$$8 <= source1$$3.length - 1; i$$8++) {\n    result$$3[i$$8] = f$$5(source1$$3[i$$8], source2$$3[i$$8], source3$$1[i$$8]);\n  }\n\n  return result$$3;\n}\nexport function mapFold(mapping$$2, state, array$$9, cons$$7) {\n  const matchValue = array$$9.length | 0;\n\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    let acc = state;\n    const res = new cons$$7(matchValue);\n\n    for (let i$$9 = 0; i$$9 <= array$$9.length - 1; i$$9++) {\n      const patternInput = mapping$$2(acc, array$$9[i$$9]);\n      res[i$$9] = patternInput[0];\n      acc = patternInput[1];\n    }\n\n    return [res, acc];\n  }\n}\nexport function mapFoldBack(mapping$$3, array$$10, state$$1, cons$$8) {\n  const matchValue$$1 = array$$10.length | 0;\n\n  if (matchValue$$1 === 0) {\n    return [[], state$$1];\n  } else {\n    let acc$$1 = state$$1;\n    const res$$1 = new cons$$8(matchValue$$1);\n\n    for (let i$$10 = array$$10.length - 1; i$$10 >= 0; i$$10--) {\n      const patternInput$$1 = mapping$$3(array$$10[i$$10], acc$$1);\n      res$$1[i$$10] = patternInput$$1[0];\n      acc$$1 = patternInput$$1[1];\n    }\n\n    return [res$$1, acc$$1];\n  }\n}\nexport function indexed(source$$2) {\n  const len$$4 = source$$2.length | 0;\n  const target$$3 = new Array(len$$4);\n\n  for (let i$$11 = 0; i$$11 <= len$$4 - 1; i$$11++) {\n    target$$3[i$$11] = [i$$11, source$$2[i$$11]];\n  }\n\n  return target$$3;\n}\nexport function truncate(count$$4, array$$11) {\n  const count$$5 = max$$1(comparePrimitives, 0, count$$4) | 0;\n  return array$$11.slice(0, 0 + count$$5);\n}\nexport function concat(arrays, cons$$9) {\n  var arr$$4;\n  const arrays$$1 = Array.isArray(arrays) ? arrays : Array.from(arrays);\n  const matchValue$$2 = arrays$$1.length | 0;\n\n  switch (matchValue$$2) {\n    case 0:\n      {\n        return new cons$$9(0);\n      }\n\n    case 1:\n      {\n        return arrays$$1[0];\n      }\n\n    default:\n      {\n        if (arr$$4 = arrays$$1[0], ArrayBuffer.isView(arr$$4)) {\n          let totalIdx = 0;\n          let totalLength = 0;\n\n          for (let idx = 0; idx <= arrays$$1.length - 1; idx++) {\n            const arr$$5 = arrays$$1[idx];\n            totalLength = totalLength + arr$$5.length;\n          }\n\n          const result$$4 = new cons$$9(totalLength);\n\n          for (let idx$$1 = 0; idx$$1 <= arrays$$1.length - 1; idx$$1++) {\n            const arr$$6 = arrays$$1[idx$$1];\n\n            for (let j = 0; j <= arr$$6.length - 1; j++) {\n              result$$4[totalIdx] = arr$$6[j];\n              totalIdx = totalIdx + 1;\n            }\n          }\n\n          return result$$4;\n        } else {\n          return arrays$$1[0].concat(...arrays$$1.slice(1));\n        }\n      }\n  }\n}\nexport function collect(mapping$$4, array$$14, cons$$10) {\n  const mapped = map(mapping$$4, array$$14, Array);\n  return concat(mapped, cons$$10);\n}\nexport function countBy(projection, array$$15, eq) {\n  const dict = createMutable([], eq);\n  const keys = [];\n\n  for (let idx$$2 = 0; idx$$2 <= array$$15.length - 1; idx$$2++) {\n    const value$$2 = array$$15[idx$$2];\n    const key = projection(value$$2);\n    const matchValue$$3 = tryGetValue(dict, key, 0);\n\n    if (matchValue$$3[0]) {\n      dict.set(key, matchValue$$3[1] + 1);\n    } else {\n      dict.set(key, 1);\n      const value$$3 = keys.push(key);\n      void value$$3;\n    }\n  }\n\n  const result$$5 = map(function (key$$1) {\n    return [key$$1, getItemFromDict(dict, key$$1)];\n  }, keys, Array);\n  return result$$5;\n}\nexport function distinctBy(projection$$1, array$$17, eq$$1) {\n  const hashSet = createMutable$$1([], eq$$1);\n  return filter(function predicate$$2($arg$$3) {\n    const arg00 = projection$$1($arg$$3);\n    return addToSet(arg00, hashSet);\n  }, array$$17);\n}\nexport function distinct(array$$19, eq$$2) {\n  return distinctBy(function (x$$2) {\n    return x$$2;\n  }, array$$19, eq$$2);\n}\nexport function where(predicate$$3, array$$20) {\n  return array$$20.filter(predicate$$3);\n}\nexport function contains(value$$4, array$$22, eq$$3) {\n  const loop = function loop($i$$12$$79) {\n    loop: while (true) {\n      const i$$12 = $i$$12$$79;\n\n      if (i$$12 >= array$$22.length) {\n        return false;\n      } else if (eq$$3.Equals(value$$4, array$$22[i$$12])) {\n        return true;\n      } else {\n        $i$$12$$79 = i$$12 + 1;\n        continue loop;\n      }\n\n      break;\n    }\n  };\n\n  return loop(0);\n}\nexport function except(itemsToExclude, array$$23, eq$$4) {\n  if (array$$23.length === 0) {\n    return array$$23;\n  } else {\n    const cached = createMutable$$1(itemsToExclude, eq$$4);\n    return array$$23.filter(function predicate$$5(arg00$$1) {\n      return addToSet(arg00$$1, cached);\n    });\n  }\n}\nexport function groupBy(projection$$2, array$$26, cons$$11, eq$$5) {\n  const dict$$1 = createMutable([], eq$$5);\n  const keys$$1 = [];\n\n  for (let idx$$3 = 0; idx$$3 <= array$$26.length - 1; idx$$3++) {\n    const v = array$$26[idx$$3];\n    const key$$2 = projection$$2(v);\n    const matchValue$$4 = tryGetValue(dict$$1, key$$2, null);\n\n    if (matchValue$$4[0]) {\n      dict$$1.set(key$$2, new List(v, matchValue$$4[1]));\n    } else {\n      addToDict(dict$$1, key$$2, new List(v, new List()));\n      const value$$5 = keys$$1.push(key$$2);\n      void value$$5;\n    }\n  }\n\n  const result$$6 = map(function (key$$3) {\n    var array$$28;\n    return [key$$3, (array$$28 = cons$$11.from(getItemFromDict(dict$$1, key$$3)), (array$$28.reverse()))];\n  }, keys$$1, Array);\n  return result$$6;\n}\nexport function empty(cons$$12) {\n  return new cons$$12(0);\n}\nexport function singleton(value$$6, cons$$14) {\n  const ar = new cons$$14(1);\n  ar[0] = value$$6;\n  return ar;\n}\nexport function initialize(count$$8, initializer, cons$$15) {\n  if (count$$8 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  const result$$7 = new cons$$15(count$$8);\n\n  for (let i$$13 = 0; i$$13 <= count$$8 - 1; i$$13++) {\n    result$$7[i$$13] = initializer(i$$13);\n  }\n\n  return result$$7;\n}\nexport function pairwise(array$$30) {\n  if (array$$30.length < 2) {\n    return [];\n  } else {\n    const count$$9 = array$$30.length - 1 | 0;\n    const result$$8 = new Array(count$$9);\n\n    for (let i$$14 = 0; i$$14 <= count$$9 - 1; i$$14++) {\n      result$$8[i$$14] = [array$$30[i$$14], array$$30[i$$14 + 1]];\n    }\n\n    return result$$8;\n  }\n}\nexport function replicate(count$$10, initial, cons$$16) {\n  if (count$$10 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  const result$$9 = new cons$$16(count$$10);\n\n  for (let i$$15 = 0; i$$15 <= result$$9.length - 1; i$$15++) {\n    result$$9[i$$15] = initial;\n  }\n\n  return result$$9;\n}\nexport function copy(array$$31, cons$$17) {\n  return array$$31.slice();\n}\nexport function reverse(array$$33, cons$$18) {\n  const array$$35 = array$$33.slice();\n  return array$$35.reverse();\n}\nexport function scan(folder, state$$2, array$$37, cons$$19) {\n  const res$$2 = new cons$$19(array$$37.length + 1);\n  res$$2[0] = state$$2;\n\n  for (let i$$16 = 0; i$$16 <= array$$37.length - 1; i$$16++) {\n    res$$2[i$$16 + 1] = folder(res$$2[i$$16], array$$37[i$$16]);\n  }\n\n  return res$$2;\n}\nexport function scanBack(folder$$1, array$$38, state$$3, cons$$20) {\n  const res$$3 = new cons$$20(array$$38.length + 1);\n  res$$3[array$$38.length] = state$$3;\n\n  for (let i$$17 = array$$38.length - 1; i$$17 >= 0; i$$17--) {\n    res$$3[i$$17] = folder$$1(array$$38[i$$17], res$$3[i$$17 + 1]);\n  }\n\n  return res$$3;\n}\nexport function skip(count$$11, array$$39, cons$$21) {\n  if (count$$11 > array$$39.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  if (count$$11 === array$$39.length) {\n    return new cons$$21(0);\n  } else {\n    const count$$12 = (count$$11 < 0 ? 0 : count$$11) | 0;\n    return array$$39.slice(count$$12);\n  }\n}\nexport function skipWhile(predicate$$7, array$$41, cons$$23) {\n  let count$$14 = 0;\n\n  while (count$$14 < array$$41.length ? predicate$$7(array$$41[count$$14]) : false) {\n    count$$14 = count$$14 + 1;\n  }\n\n  if (count$$14 === array$$41.length) {\n    return new cons$$23(0);\n  } else {\n    const count$$15 = count$$14 | 0;\n    return array$$41.slice(count$$15);\n  }\n}\nexport function take(count$$16, array$$43, cons$$25) {\n  if (count$$16 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  if (count$$16 > array$$43.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  if (count$$16 === 0) {\n    return new cons$$25(0);\n  } else {\n    return array$$43.slice(0, 0 + count$$16);\n  }\n}\nexport function takeWhile(predicate$$8, array$$45, cons$$27) {\n  let count$$18 = 0;\n\n  while (count$$18 < array$$45.length ? predicate$$8(array$$45[count$$18]) : false) {\n    count$$18 = count$$18 + 1;\n  }\n\n  if (count$$18 === 0) {\n    return new cons$$27(0);\n  } else {\n    const count$$19 = count$$18 | 0;\n    return array$$45.slice(0, 0 + count$$19);\n  }\n}\nexport function addInPlace(x$$3, array$$47) {\n  const value$$7 = array$$47.push(x$$3);\n  void value$$7;\n}\nexport function addRangeInPlace(range, array$$49) {\n  iterate$$1(function (x$$4) {\n    const value$$8 = array$$49.push(x$$4);\n    void value$$8;\n  }, range);\n}\nexport function removeInPlace(item$$5, array$$51) {\n  const i$$18 = array$$51.indexOf(item$$5);\n\n  if (i$$18 > -1) {\n    const value$$9 = array$$51.splice(i$$18, 1);\n    void value$$9;\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function removeAllInPlace(predicate$$9, array$$54) {\n  const countRemoveAll = function countRemoveAll(count$$20) {\n    const i$$19 = array$$54.findIndex(predicate$$9);\n\n    if (i$$19 > -1) {\n      const value$$10 = array$$54.splice(i$$19, 1);\n      void value$$10;\n      return countRemoveAll(count$$20) + 1 | 0;\n    } else {\n      return count$$20 | 0;\n    }\n  };\n\n  return countRemoveAll(0) | 0;\n}\nexport function copyTo(source$$3, sourceIndex, target$$4, targetIndex$$1, count$$21) {\n  const diff = targetIndex$$1 - sourceIndex | 0;\n\n  for (let i$$20 = sourceIndex; i$$20 <= sourceIndex + count$$21 - 1; i$$20++) {\n    target$$4[i$$20 + diff] = source$$3[i$$20];\n  }\n}\nexport function partition(f$$6, source$$4, cons$$29) {\n  const len$$7 = source$$4.length | 0;\n  const res1 = new cons$$29(len$$7);\n  const res2 = new cons$$29(len$$7);\n  let iTrue = 0;\n  let iFalse = 0;\n\n  for (let i$$21 = 0; i$$21 <= len$$7 - 1; i$$21++) {\n    if (f$$6(source$$4[i$$21])) {\n      res1[iTrue] = source$$4[i$$21];\n      iTrue = iTrue + 1;\n    } else {\n      res2[iFalse] = source$$4[i$$21];\n      iFalse = iFalse + 1;\n    }\n  }\n\n  return [(truncate(iTrue, res1)), (truncate(iFalse, res2))];\n}\nexport function find(predicate$$11, array$$59) {\n  const matchValue$$5 = array$$59.find(predicate$$11);\n\n  if (matchValue$$5 == null) {\n    throw new Error(indexNotFoundMsg);\n  } else {\n    const res$$4 = value$$15(matchValue$$5);\n    return res$$4;\n  }\n}\nexport function tryFind(predicate$$13, array$$61) {\n  return array$$61.find(predicate$$13);\n}\nexport function findIndex(predicate$$15, array$$63) {\n  const matchValue$$6 = array$$63.findIndex(predicate$$15);\n\n  if (matchValue$$6 > -1) {\n    return matchValue$$6 | 0;\n  } else {\n    throw new Error(indexNotFoundMsg);\n  }\n}\nexport function tryFindIndex(predicate$$17, array$$65) {\n  const matchValue$$7 = array$$65.findIndex(predicate$$17);\n\n  if (matchValue$$7 > -1) {\n    return matchValue$$7;\n  } else {\n    return undefined;\n  }\n}\nexport function pick(chooser, array$$67) {\n  const loop$$1 = function loop$$1($i$$22$$149) {\n    loop$$1: while (true) {\n      const i$$22 = $i$$22$$149;\n\n      if (i$$22 >= array$$67.length) {\n        throw new Error(indexNotFoundMsg);\n      } else {\n        const matchValue$$8 = chooser(array$$67[i$$22]);\n\n        if (matchValue$$8 != null) {\n          const res$$5 = value$$15(matchValue$$8);\n          return res$$5;\n        } else {\n          $i$$22$$149 = i$$22 + 1;\n          continue loop$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(0);\n}\nexport function tryPick(chooser$$1, array$$68) {\n  const loop$$2 = function loop$$2($i$$23$$152) {\n    loop$$2: while (true) {\n      const i$$23 = $i$$23$$152;\n\n      if (i$$23 >= array$$68.length) {\n        return undefined;\n      } else {\n        const matchValue$$9 = chooser$$1(array$$68[i$$23]);\n\n        if (matchValue$$9 == null) {\n          $i$$23$$152 = i$$23 + 1;\n          continue loop$$2;\n        } else {\n          return matchValue$$9;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$2(0);\n}\nexport function findBack(predicate$$19, array$$69) {\n  const loop$$3 = function loop$$3($i$$24$$155) {\n    loop$$3: while (true) {\n      const i$$24 = $i$$24$$155;\n\n      if (i$$24 < 0) {\n        throw new Error(indexNotFoundMsg);\n      } else if (predicate$$19(array$$69[i$$24])) {\n        return array$$69[i$$24];\n      } else {\n        $i$$24$$155 = i$$24 - 1;\n        continue loop$$3;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$3(array$$69.length - 1);\n}\nexport function tryFindBack(predicate$$20, array$$70) {\n  const loop$$4 = function loop$$4($i$$25$$158) {\n    loop$$4: while (true) {\n      const i$$25 = $i$$25$$158;\n\n      if (i$$25 < 0) {\n        return undefined;\n      } else if (predicate$$20(array$$70[i$$25])) {\n        return some(array$$70[i$$25]);\n      } else {\n        $i$$25$$158 = i$$25 - 1;\n        continue loop$$4;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$4(array$$70.length - 1);\n}\nexport function findLastIndex(predicate$$21, array$$71) {\n  const loop$$5 = function loop$$5($i$$26$$161) {\n    loop$$5: while (true) {\n      const i$$26 = $i$$26$$161;\n\n      if (i$$26 < 0) {\n        return -1 | 0;\n      } else if (predicate$$21(array$$71[i$$26])) {\n        return i$$26 | 0;\n      } else {\n        $i$$26$$161 = i$$26 - 1;\n        continue loop$$5;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$5(array$$71.length - 1) | 0;\n}\nexport function findIndexBack(predicate$$22, array$$72) {\n  const loop$$6 = function loop$$6($i$$27$$164) {\n    loop$$6: while (true) {\n      const i$$27 = $i$$27$$164;\n\n      if (i$$27 < 0) {\n        throw new Error(indexNotFoundMsg);\n      } else if (predicate$$22(array$$72[i$$27])) {\n        return i$$27 | 0;\n      } else {\n        $i$$27$$164 = i$$27 - 1;\n        continue loop$$6;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$6(array$$72.length - 1) | 0;\n}\nexport function tryFindIndexBack(predicate$$23, array$$73) {\n  const loop$$7 = function loop$$7($i$$28$$167) {\n    loop$$7: while (true) {\n      const i$$28 = $i$$28$$167;\n\n      if (i$$28 < 0) {\n        return undefined;\n      } else if (predicate$$23(array$$73[i$$28])) {\n        return i$$28;\n      } else {\n        $i$$28$$167 = i$$28 - 1;\n        continue loop$$7;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$7(array$$73.length - 1);\n}\nexport function choose(chooser$$2, array$$74, cons$$30) {\n  const arr$$7 = array$$74.filter(function f$$7(x$$5) {\n    const option = chooser$$2(x$$5);\n    return option != null;\n  });\n  return map(function g(x$$6) {\n    const option$$1 = chooser$$2(x$$6);\n    return value$$15(option$$1);\n  }, arr$$7, cons$$30);\n}\nexport function foldIndexed(folder$$2, state$$4, array$$76) {\n  return array$$76.reduce(function (delegateArg0$$1, delegateArg1$$1, delegateArg2) {\n    return folder$$2(delegateArg2, delegateArg0$$1, delegateArg1$$1);\n  }, state$$4);\n}\nexport function fold(folder$$4, state$$6, array$$78) {\n  return array$$78.reduce(function (delegateArg0$$2, delegateArg1$$2) {\n    return folder$$4(delegateArg0$$2, delegateArg1$$2);\n  }, state$$6);\n}\nexport function iterate(action, array$$80) {\n  for (let i$$30 = 0; i$$30 <= array$$80.length - 1; i$$30++) {\n    action(array$$80[i$$30]);\n  }\n}\nexport function iterateIndexed(action$$1, array$$81) {\n  for (let i$$31 = 0; i$$31 <= array$$81.length - 1; i$$31++) {\n    action$$1(i$$31, array$$81[i$$31]);\n  }\n}\nexport function iterate2(action$$2, array1$$2, array2$$2) {\n  if (array1$$2.length !== array2$$2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  for (let i$$32 = 0; i$$32 <= array1$$2.length - 1; i$$32++) {\n    action$$2(array1$$2[i$$32], array2$$2[i$$32]);\n  }\n}\nexport function iterateIndexed2(action$$3, array1$$3, array2$$3) {\n  if (array1$$3.length !== array2$$3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  for (let i$$33 = 0; i$$33 <= array1$$3.length - 1; i$$33++) {\n    action$$3(i$$33, array1$$3[i$$33], array2$$3[i$$33]);\n  }\n}\nexport function isEmpty(array$$82) {\n  return array$$82.length === 0;\n}\nexport function forAll(predicate$$25, array$$83) {\n  return array$$83.every(predicate$$25);\n}\nexport function permute(f$$8, array$$85) {\n  const size = array$$85.length | 0;\n  const res$$7 = array$$85.slice();\n  const checkFlags = new Int32Array(size);\n  iterateIndexed(function (i$$34, x$$9) {\n    const j$$1 = f$$8(i$$34) | 0;\n\n    if (j$$1 < 0 ? true : j$$1 >= size) {\n      throw new Error(\"Not a valid permutation\");\n    } else {\n      void null;\n    }\n\n    res$$7[j$$1] = x$$9;\n    checkFlags[j$$1] = 1;\n  }, array$$85);\n  let isValid;\n  isValid = checkFlags.every(function predicate$$27(y) {\n    return 1 === y;\n  });\n\n  if (!isValid) {\n    throw new Error(\"Not a valid permutation\");\n  } else {\n    void null;\n  }\n\n  return res$$7;\n}\nexport function setSlice(target$$5, lower, upper, source$$5) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const upper$$1 = defaultArg(upper, 0) | 0;\n  const length = (upper$$1 > 0 ? upper$$1 : target$$5.length - 1) - lower$$1 | 0;\n\n  for (let i$$35 = 0; i$$35 <= length; i$$35++) {\n    target$$5[i$$35 + lower$$1] = source$$5[i$$35];\n  }\n}\nexport function sortInPlaceBy(projection$$3, xs, comparer) {\n  xs.sort(function (x$$11, y$$1) {\n    return comparer.Compare(projection$$3(x$$11), projection$$3(y$$1));\n  });\n}\nexport function sortInPlace(xs$$1, comparer$$1) {\n  xs$$1.sort(function (x$$12, y$$2) {\n    return comparer$$1.Compare(x$$12, y$$2);\n  });\n}\nexport function sort(xs$$2, comparer$$2) {\n  const xs$$3 = xs$$2.slice();\n  xs$$3.sort(function comparer$$3(x$$13, y$$3) {\n    return comparer$$2.Compare(x$$13, y$$3);\n  });\n  return xs$$3;\n}\nexport function sortBy(projection$$4, xs$$4, comparer$$4) {\n  const xs$$5 = xs$$4.slice();\n  xs$$5.sort(function comparer$$5(x$$14, y$$4) {\n    return comparer$$4.Compare(projection$$4(x$$14), projection$$4(y$$4));\n  });\n  return xs$$5;\n}\nexport function sortDescending(xs$$6, comparer$$6) {\n  const xs$$7 = xs$$6.slice();\n  xs$$7.sort(function comparer$$7(x$$15, y$$5) {\n    return comparer$$6.Compare(x$$15, y$$5) * -1;\n  });\n  return xs$$7;\n}\nexport function sortByDescending(projection$$5, xs$$8, comparer$$8) {\n  const xs$$9 = xs$$8.slice();\n  xs$$9.sort(function comparer$$9(x$$16, y$$6) {\n    return comparer$$8.Compare(projection$$5(x$$16), projection$$5(y$$6)) * -1;\n  });\n  return xs$$9;\n}\nexport function sortWith(comparer$$10, xs$$10) {\n  const xs$$11 = xs$$10.slice();\n  xs$$11.sort(comparer$$10);\n  return xs$$11;\n}\nexport function unfold(generator, state$$8) {\n  const res$$8 = [];\n\n  const loop$$8 = function loop$$8($state$$9$$226) {\n    loop$$8: while (true) {\n      const state$$9 = $state$$9$$226;\n      const matchValue$$10 = generator(state$$9);\n\n      if (matchValue$$10 != null) {\n        const x$$17 = matchValue$$10[0];\n        const s$$2 = matchValue$$10[1];\n        const value$$11 = res$$8.push(x$$17);\n        void value$$11;\n        $state$$9$$226 = s$$2;\n        continue loop$$8;\n      } else {\n        void null;\n      }\n\n      break;\n    }\n  };\n\n  loop$$8(state$$8);\n  return res$$8;\n}\nexport function unzip(array$$95) {\n  const len$$8 = array$$95.length | 0;\n  const res1$$1 = new Array(len$$8);\n  const res2$$1 = new Array(len$$8);\n  iterateIndexed(function (i$$36, tupledArg) {\n    res1$$1[i$$36] = tupledArg[0];\n    res2$$1[i$$36] = tupledArg[1];\n  }, array$$95);\n  return [res1$$1, res2$$1];\n}\nexport function unzip3(array$$96) {\n  const len$$11 = array$$96.length | 0;\n  const res1$$2 = new Array(len$$11);\n  const res2$$2 = new Array(len$$11);\n  const res3 = new Array(len$$11);\n  iterateIndexed(function (i$$37, tupledArg$$1) {\n    res1$$2[i$$37] = tupledArg$$1[0];\n    res2$$2[i$$37] = tupledArg$$1[1];\n    res3[i$$37] = tupledArg$$1[2];\n  }, array$$96);\n  return [res1$$2, res2$$2, res3];\n}\nexport function zip(array1$$4, array2$$4) {\n  if (array1$$4.length !== array2$$4.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  let result$$10;\n  const len$$15 = array1$$4.length | 0;\n  result$$10 = new Array(len$$15);\n\n  for (let i$$38 = 0; i$$38 <= array1$$4.length - 1; i$$38++) {\n    result$$10[i$$38] = [array1$$4[i$$38], array2$$4[i$$38]];\n  }\n\n  return result$$10;\n}\nexport function zip3(array1$$5, array2$$5, array3) {\n  if (array1$$5.length !== array2$$5.length ? true : array2$$5.length !== array3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  let result$$11;\n  const len$$16 = array1$$5.length | 0;\n  result$$11 = new Array(len$$16);\n\n  for (let i$$39 = 0; i$$39 <= array1$$5.length - 1; i$$39++) {\n    result$$11[i$$39] = [array1$$5[i$$39], array2$$5[i$$39], array3[i$$39]];\n  }\n\n  return result$$11;\n}\nexport function chunkBySize(chunkSize, array$$97) {\n  if (chunkSize < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: size\");\n  } else {\n    void null;\n  }\n\n  if (array$$97.length === 0) {\n    return [[]];\n  } else {\n    const result$$12 = [];\n\n    for (let x$$18 = 0; x$$18 <= ~~Math.ceil(array$$97.length / chunkSize) - 1; x$$18++) {\n      const start$$8 = x$$18 * chunkSize | 0;\n      const slice = array$$97.slice(start$$8, start$$8 + chunkSize);\n      const value$$12 = result$$12.push(slice);\n      void value$$12;\n    }\n\n    return result$$12;\n  }\n}\nexport function splitAt(index$$4, array$$100) {\n  if (index$$4 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: index\");\n  } else {\n    void null;\n  }\n\n  if (index$$4 > array$$100.length) {\n    throw new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\");\n  } else {\n    void null;\n  }\n\n  return [array$$100.slice(0, 0 + index$$4), array$$100.slice(index$$4)];\n}\nexport function compareWith(comparer$$12, array1$$6, array2$$6) {\n  if (array1$$6 == null) {\n    if (array2$$6 == null) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (array2$$6 == null) {\n    return 1;\n  } else {\n    let i$$40 = 0;\n    let result$$13 = 0;\n    const length1 = array1$$6.length | 0;\n    const length2 = array2$$6.length | 0;\n\n    if (length1 > length2) {\n      return 1;\n    } else if (length1 < length2) {\n      return -1 | 0;\n    } else {\n      while (i$$40 < length1 ? result$$13 === 0 : false) {\n        result$$13 = comparer$$12(array1$$6[i$$40], array2$$6[i$$40]);\n        i$$40 = i$$40 + 1;\n      }\n\n      return result$$13 | 0;\n    }\n  }\n}\nexport function equalsWith(comparer$$13, array1$$7, array2$$7) {\n  return compareWith(compare, array1$$7, array2$$7) === 0;\n}\nexport function exactlyOne(array$$103) {\n  if (array$$103.length === 1) {\n    return array$$103[0];\n  } else if (array$$103.length === 0) {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: array\");\n  } else {\n    throw new Error(\"Input array too long\\\\nParameter name: array\");\n  }\n}\nexport function head(array$$104) {\n  if (array$$104.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    return array$$104[0];\n  }\n}\nexport function tryHead(array$$105) {\n  if (array$$105.length === 0) {\n    return undefined;\n  } else {\n    return some(array$$105[0]);\n  }\n}\nexport function tail(array$$106) {\n  if (array$$106.length === 0) {\n    throw new Error(\"Not enough elements\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  return array$$106.slice(1);\n}\nexport function item(index$$5, array$$108) {\n  return array$$108[index$$5];\n}\nexport function tryItem(index$$6, array$$109) {\n  if (index$$6 < 0 ? true : index$$6 >= array$$109.length) {\n    return undefined;\n  } else {\n    return some(array$$109[index$$6]);\n  }\n}\nexport function foldBackIndexed(folder$$6, array$$110, state$$10) {\n  return array$$110.reduceRight(function (delegateArg0$$3, delegateArg1$$3, delegateArg2$$1) {\n    return folder$$6(delegateArg2$$1, delegateArg1$$3, delegateArg0$$3);\n  }, state$$10);\n}\nexport function foldBack(folder$$8, array$$112, state$$12) {\n  return array$$112.reduceRight(function (delegateArg0$$4, delegateArg1$$4) {\n    return folder$$8(delegateArg1$$4, delegateArg0$$4);\n  }, state$$12);\n}\nexport function foldIndexed2(folder$$10, state$$14, array1$$8, array2$$8) {\n  let acc$$6 = state$$14;\n\n  if (array1$$8.length !== array2$$8.length) {\n    throw new Error(\"Arrays have different lengths\");\n  } else {\n    void null;\n  }\n\n  for (let i$$42 = 0; i$$42 <= array1$$8.length - 1; i$$42++) {\n    acc$$6 = folder$$10(i$$42, acc$$6, array1$$8[i$$42], array2$$8[i$$42]);\n  }\n\n  return acc$$6;\n}\nexport function fold2(folder$$11, state$$15, array1$$9, array2$$9) {\n  return foldIndexed2(function (_arg1, acc$$7, x$$21, y$$7) {\n    return folder$$11(acc$$7, x$$21, y$$7);\n  }, state$$15, array1$$9, array2$$9);\n}\nexport function foldBackIndexed2(folder$$12, array1$$10, array2$$10, state$$16) {\n  let acc$$8 = state$$16;\n\n  if (array1$$10.length !== array2$$10.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const size$$1 = array1$$10.length | 0;\n\n  for (let i$$43 = 1; i$$43 <= size$$1; i$$43++) {\n    acc$$8 = folder$$12(i$$43 - 1, array1$$10[size$$1 - i$$43], array2$$10[size$$1 - i$$43], acc$$8);\n  }\n\n  return acc$$8;\n}\nexport function foldBack2(f$$9, array1$$11, array2$$11, state$$17) {\n  return foldBackIndexed2(function (_arg1$$1, x$$22, y$$8, acc$$9) {\n    return f$$9(x$$22, y$$8, acc$$9);\n  }, array1$$11, array2$$11, state$$17);\n}\nexport function reduce(reduction, array$$114) {\n  if (array$$114.length === 0) {\n    throw new Error(\"The input array was empty\");\n  } else {\n    void null;\n  }\n\n  return array$$114.reduce(reduction);\n}\nexport function reduceBack(reduction$$2, array$$116) {\n  if (array$$116.length === 0) {\n    throw new Error(\"The input array was empty\");\n  } else {\n    void null;\n  }\n\n  return array$$116.reduceRight(reduction$$2);\n}\nexport function forAll2(predicate$$29, array1$$12, array2$$12) {\n  return fold2(function (acc$$10, x$$23, y$$9) {\n    return acc$$10 ? predicate$$29(x$$23, y$$9) : false;\n  }, true, array1$$12, array2$$12);\n}\nexport function existsOffset($predicate$$30$$281, $array$$118$$282, $index$$7$$283) {\n  existsOffset: while (true) {\n    const predicate$$30 = $predicate$$30$$281,\n          array$$118 = $array$$118$$282,\n          index$$7 = $index$$7$$283;\n\n    if (index$$7 === array$$118.length) {\n      return false;\n    } else if (predicate$$30(array$$118[index$$7])) {\n      return true;\n    } else {\n      $predicate$$30$$281 = predicate$$30;\n      $array$$118$$282 = array$$118;\n      $index$$7$$283 = index$$7 + 1;\n      continue existsOffset;\n    }\n\n    break;\n  }\n}\nexport function exists(predicate$$31, array$$119) {\n  return existsOffset(predicate$$31, array$$119, 0);\n}\nexport function existsOffset2($predicate$$32$$286, $array1$$13$$287, $array2$$13$$288, $index$$8$$289) {\n  existsOffset2: while (true) {\n    const predicate$$32 = $predicate$$32$$286,\n          array1$$13 = $array1$$13$$287,\n          array2$$13 = $array2$$13$$288,\n          index$$8 = $index$$8$$289;\n\n    if (index$$8 === array1$$13.length) {\n      return false;\n    } else if (predicate$$32(array1$$13[index$$8], array2$$13[index$$8])) {\n      return true;\n    } else {\n      $predicate$$32$$286 = predicate$$32;\n      $array1$$13$$287 = array1$$13;\n      $array2$$13$$288 = array2$$13;\n      $index$$8$$289 = index$$8 + 1;\n      continue existsOffset2;\n    }\n\n    break;\n  }\n}\nexport function exists2(predicate$$33, array1$$14, array2$$14) {\n  if (array1$$14.length !== array2$$14.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  return existsOffset2(predicate$$33, array1$$14, array2$$14, 0);\n}\nexport function sum(array$$120, adder) {\n  let acc$$11 = adder.GetZero();\n\n  for (let i$$44 = 0; i$$44 <= array$$120.length - 1; i$$44++) {\n    acc$$11 = adder.Add(acc$$11, array$$120[i$$44]);\n  }\n\n  return acc$$11;\n}\nexport function sumBy(projection$$6, array$$121, adder$$1) {\n  let acc$$12 = adder$$1.GetZero();\n\n  for (let i$$45 = 0; i$$45 <= array$$121.length - 1; i$$45++) {\n    acc$$12 = adder$$1.Add(acc$$12, projection$$6(array$$121[i$$45]));\n  }\n\n  return acc$$12;\n}\nexport function maxBy(projection$$7, xs$$12, comparer$$14) {\n  return reduce(function (x$$24, y$$10) {\n    return comparer$$14.Compare(projection$$7(y$$10), projection$$7(x$$24)) > 0 ? y$$10 : x$$24;\n  }, xs$$12);\n}\nexport function max(xs$$13, comparer$$15) {\n  return reduce(function (x$$25, y$$11) {\n    return comparer$$15.Compare(y$$11, x$$25) > 0 ? y$$11 : x$$25;\n  }, xs$$13);\n}\nexport function minBy(projection$$8, xs$$14, comparer$$16) {\n  return reduce(function (x$$26, y$$12) {\n    return comparer$$16.Compare(projection$$8(y$$12), projection$$8(x$$26)) > 0 ? x$$26 : y$$12;\n  }, xs$$14);\n}\nexport function min(xs$$15, comparer$$17) {\n  return reduce(function (x$$27, y$$13) {\n    return comparer$$17.Compare(y$$13, x$$27) > 0 ? x$$27 : y$$13;\n  }, xs$$15);\n}\nexport function average(array$$122, averager) {\n  if (array$$122.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  let total = averager.GetZero();\n\n  for (let i$$46 = 0; i$$46 <= array$$122.length - 1; i$$46++) {\n    total = averager.Add(total, array$$122[i$$46]);\n  }\n\n  return averager.DivideByInt(total, array$$122.length);\n}\nexport function averageBy(projection$$9, array$$123, averager$$1) {\n  if (array$$123.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  let total$$1 = averager$$1.GetZero();\n\n  for (let i$$47 = 0; i$$47 <= array$$123.length - 1; i$$47++) {\n    total$$1 = averager$$1.Add(total$$1, projection$$9(array$$123[i$$47]));\n  }\n\n  return averager$$1.DivideByInt(total$$1, array$$123.length);\n}\nexport function ofSeq(source$$6, cons$$31) {\n  return cons$$31.from(source$$6);\n}\nexport function ofList(source$$7, cons$$32) {\n  return cons$$32.from(source$$7);\n}\nexport function toList(source$$8) {\n  const len$$17 = source$$8.length | 0;\n  let target$$6 = new List();\n\n  for (let i$$48 = len$$17 - 1; i$$48 >= 0; i$$48--) {\n    target$$6 = new List(source$$8[i$$48], target$$6);\n  }\n\n  return target$$6;\n}\nexport function windowed(windowSize, source$$9) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  } else {\n    void null;\n  }\n\n  let res$$9;\n  const len$$18 = max$$1(comparePrimitives, 0, source$$9.length - windowSize) | 0;\n  res$$9 = new Array(len$$18);\n\n  for (let i$$49 = windowSize; i$$49 <= source$$9.length; i$$49++) {\n    res$$9[i$$49 - windowSize] = source$$9.slice(i$$49 - windowSize, i$$49 - 1 + 1);\n  }\n\n  return res$$9;\n}\nexport function splitInto(chunks, array$$124) {\n  if (chunks < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: chunks\");\n  } else {\n    void null;\n  }\n\n  if (array$$124.length === 0) {\n    return [[]];\n  } else {\n    const result$$14 = [];\n    const chunks$$1 = min$$1(comparePrimitives, chunks, array$$124.length) | 0;\n    const minChunkSize = ~~(array$$124.length / chunks$$1) | 0;\n    const chunksWithExtraItem = array$$124.length % chunks$$1 | 0;\n\n    for (let i$$50 = 0; i$$50 <= chunks$$1 - 1; i$$50++) {\n      const chunkSize$$1 = (i$$50 < chunksWithExtraItem ? minChunkSize + 1 : minChunkSize) | 0;\n      const start$$11 = i$$50 * minChunkSize + min$$1(comparePrimitives, chunksWithExtraItem, i$$50) | 0;\n      const slice$$1 = array$$124.slice(start$$11, start$$11 + chunkSize$$1);\n      const value$$13 = result$$14.push(slice$$1);\n      void value$$13;\n    }\n\n    return result$$14;\n  }\n}\nexport function transpose(arrays$$2, cons$$33) {\n  var value$$14;\n  const arrays$$3 = Array.isArray(arrays$$2) ? arrays$$2 : Array.from(arrays$$2);\n  const len$$20 = arrays$$3.length | 0;\n\n  if (len$$20 === 0) {\n    return new Array(0);\n  } else {\n    const lenInner = arrays$$3[0].length | 0;\n\n    if (value$$14 = (forAll(function predicate$$34(a) {\n      return a.length === lenInner;\n    }, arrays$$3)), (!value$$14)) {\n      throw new Error(\"Arrays had different lengths\");\n    } else {\n      void null;\n    }\n\n    const result$$15 = new Array(lenInner);\n\n    for (let i$$51 = 0; i$$51 <= lenInner - 1; i$$51++) {\n      result$$15[i$$51] = new cons$$33(len$$20);\n\n      for (let j$$2 = 0; j$$2 <= len$$20 - 1; j$$2++) {\n        result$$15[i$$51][j$$2] = arrays$$3[j$$2][i$$51];\n      }\n    }\n\n    return result$$15;\n  }\n}","import { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { equals, getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { format } from \"./String.js\";\nexport const MutableMap$00602 = declare(function Fable_Collections_MutableMap(pairs, comparer) {\n  const $this$$1 = this;\n  const this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1.hashMap = new Map([]);\n  $this$$1[\"init@20-1\"] = 1;\n  iterate(function (pair) {\n    MutableMap$00602$$Add$$5BDDA1(this$.contents, pair[0], pair[1]);\n  }, pairs);\n  void null;\n});\nexport function MutableMap$00602$reflection($gen$$4, $gen$$5) {\n  return class_type(\"Fable.Collections.MutableMap`2\", [$gen$$4, $gen$$5], MutableMap$00602);\n}\nexport function MutableMap$00602$$$$002Ector$$6623D9B3(pairs, comparer) {\n  return this instanceof MutableMap$00602 ? MutableMap$00602.call(this, pairs, comparer) : new MutableMap$00602(pairs, comparer);\n}\n\nfunction MutableMap$00602$$TryFindIndex$$2B595(this$$$1, k) {\n  const h = this$$$1.comparer.GetHashCode(k) | 0;\n  const matchValue = tryGetValue(this$$$1.hashMap, h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (pair$$1) {\n      return this$$$1.comparer.Equals(k, pair$$1[0]);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nexport function MutableMap$00602$$TryFind$$2B595(this$$$2, k$$1) {\n  const matchValue$$1 = MutableMap$00602$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$10;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$10 = 0;\n    } else {\n      $target$$10 = 1;\n    }\n  } else {\n    $target$$10 = 1;\n  }\n\n  switch ($target$$10) {\n    case 0:\n      {\n        return getItemFromDict(this$$$2.hashMap, matchValue$$1[1])[matchValue$$1[2]];\n      }\n\n    case 1:\n      {\n        return undefined;\n      }\n  }\n}\nexport function MutableMap$00602$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableMap$00602$$Clear(this$$$4) {\n  this$$$4.hashMap.clear();\n}\nexport function MutableMap$00602$$get_Count(this$$$5) {\n  const source = this$$$5.hashMap.values();\n  return sumBy(function projection(pairs$$2) {\n    return pairs$$2.length;\n  }, source, {\n    GetZero() {\n      return 0;\n    },\n\n    Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n\n  }) | 0;\n}\nexport function MutableMap$00602$$get_Item$$2B595(this$$$6, k$$2) {\n  const matchValue$$2 = MutableMap$00602$$TryFind$$2B595(this$$$6, k$$2);\n\n  if (matchValue$$2 != null) {\n    const pair$$2 = matchValue$$2;\n    return pair$$2[1];\n  } else {\n    throw new Error(\"The item was not found in collection\");\n  }\n}\nexport function MutableMap$00602$$set_Item$$5BDDA1(this$$$7, k$$3, v) {\n  const matchValue$$3 = MutableMap$00602$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$20;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$20 = 0;\n    } else {\n      $target$$20 = 1;\n    }\n  } else {\n    $target$$20 = 1;\n  }\n\n  switch ($target$$20) {\n    case 0:\n      {\n        getItemFromDict(this$$$7.hashMap, matchValue$$3[1])[matchValue$$3[2]] = [k$$3, v];\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$3[0]) {\n          const value = void getItemFromDict(this$$$7.hashMap, matchValue$$3[1]).push([k$$3, v]);\n          void null;\n        } else {\n          this$$$7.hashMap.set(matchValue$$3[1], [[k$$3, v]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$Add$$5BDDA1(this$$$8, k$$4, v$$1) {\n  const matchValue$$4 = MutableMap$00602$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$24;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$24 = 0;\n    } else {\n      $target$$24 = 1;\n    }\n  } else {\n    $target$$24 = 1;\n  }\n\n  switch ($target$$24) {\n    case 0:\n      {\n        const msg = format(\"An item with the same key has already been added. Key: {0}\", k$$4);\n        throw new Error(msg);\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$4[0]) {\n          const value$$1 = void getItemFromDict(this$$$8.hashMap, matchValue$$4[1]).push([k$$4, v$$1]);\n          void null;\n        } else {\n          this$$$8.hashMap.set(matchValue$$4[1], [[k$$4, v$$1]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$ContainsKey$$2B595(this$$$9, k$$5) {\n  const matchValue$$5 = MutableMap$00602$$TryFindIndex$$2B595(this$$$9, k$$5);\n  var $target$$27;\n\n  if (matchValue$$5[0]) {\n    if (matchValue$$5[2] > -1) {\n      $target$$27 = 0;\n    } else {\n      $target$$27 = 1;\n    }\n  } else {\n    $target$$27 = 1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableMap$00602$$Remove$$2B595(this$$$10, k$$6) {\n  const matchValue$$6 = MutableMap$00602$$TryFindIndex$$2B595(this$$$10, k$$6);\n  var $target$$30;\n\n  if (matchValue$$6[0]) {\n    if (matchValue$$6[2] > -1) {\n      $target$$30 = 0;\n    } else {\n      $target$$30 = 1;\n    }\n  } else {\n    $target$$30 = 1;\n  }\n\n  switch ($target$$30) {\n    case 0:\n      {\n        getItemFromDict(this$$$10.hashMap, matchValue$$6[1]).splice(matchValue$$6[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableMap$00602.prototype[Symbol.iterator] = function () {\n  var elems;\n  const this$$$11 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (pairs$$3) {\n      return map(function (pair$$3) {\n        return pair$$3;\n      }, pairs$$3);\n    }, this$$$11.hashMap.values());\n  }), getEnumerator(elems)));\n};\n\nMutableMap$00602.prototype.Add = function (item) {\n  const this$$$12 = this;\n  MutableMap$00602$$Add$$5BDDA1(this$$$12, item[0], item[1]);\n};\n\nMutableMap$00602.prototype.Clear = function () {\n  const this$$$13 = this;\n  MutableMap$00602$$Clear(this$$$13);\n};\n\nMutableMap$00602.prototype.Contains = function (item$$1) {\n  var p;\n  const this$$$14 = this;\n  const matchValue$$7 = MutableMap$00602$$TryFind$$2B595(this$$$14, item$$1[0]);\n  var $target$$31;\n\n  if (matchValue$$7 != null) {\n    if (p = matchValue$$7, equals(p[1], item$$1[1])) {\n      $target$$31 = 0;\n    } else {\n      $target$$31 = 1;\n    }\n  } else {\n    $target$$31 = 1;\n  }\n\n  switch ($target$$31) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n};\n\nMutableMap$00602.prototype.CopyTo = function (array, arrayIndex) {\n  const this$$$15 = this;\n  iterateIndexed(function action(i$$10, e) {\n    array[arrayIndex + i$$10] = e;\n  }, this$$$15);\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"Count\", {\n  \"get\": function () {\n    const this$$$16 = this;\n    return MutableMap$00602$$get_Count(this$$$16) | 0;\n  }\n});\nObject.defineProperty(MutableMap$00602.prototype, \"IsReadOnly\", {\n  \"get\": function () {\n    return false;\n  }\n});\n\nMutableMap$00602.prototype.Remove = function (item$$2) {\n  const this$$$18 = this;\n  const matchValue$$8 = MutableMap$00602$$TryFind$$2B595(this$$$18, item$$2[0]);\n\n  if (matchValue$$8 != null) {\n    const pair$$4 = matchValue$$8;\n\n    if (equals(pair$$4[1], item$$2[1])) {\n      const value$$2 = MutableMap$00602$$Remove$$2B595(this$$$18, item$$2[0]);\n      void value$$2;\n    } else {\n      void null;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$19 = this;\n    return MutableMap$00602$$get_Count(this$$$19) | 0;\n  }\n});\n\nMutableMap$00602.prototype.clear = function () {\n  const this$$$20 = this;\n  MutableMap$00602$$Clear(this$$$20);\n};\n\nMutableMap$00602.prototype.delete = function (k$$7) {\n  const this$$$21 = this;\n  return MutableMap$00602$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableMap$00602.prototype.entries = function () {\n  const this$$$22 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$22);\n};\n\nMutableMap$00602.prototype.get = function (k$$8) {\n  const this$$$23 = this;\n  return MutableMap$00602$$get_Item$$2B595(this$$$23, k$$8);\n};\n\nMutableMap$00602.prototype.has = function (k$$9) {\n  const this$$$24 = this;\n  return MutableMap$00602$$ContainsKey$$2B595(this$$$24, k$$9);\n};\n\nMutableMap$00602.prototype.keys = function () {\n  const this$$$25 = this;\n  return map(function mapping$$1(pair$$5) {\n    return pair$$5[0];\n  }, this$$$25);\n};\n\nMutableMap$00602.prototype.set = function (k$$10, v$$2) {\n  const this$$$26 = this;\n  MutableMap$00602$$set_Item$$5BDDA1(this$$$26, k$$10, v$$2);\n  return this$$$26;\n};\n\nMutableMap$00602.prototype.values = function () {\n  const this$$$27 = this;\n  return map(function mapping$$2(pair$$6) {\n    return pair$$6[1];\n  }, this$$$27);\n};","import { Record, List, declare, Union } from \"./Types.js\";\nimport { class_type, record_type, bool_type, list_type, union_type, int32_type } from \"./Reflection.js\";\nimport { value as value$$3, some } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, toIterator, map as map$$2, unfold, getEnumerator, fold as fold$$1 } from \"./Seq.js\";\nimport { compare, structuralHash, isDisposable } from \"./Util.js\";\nimport { join, format } from \"./String.js\";\nimport { MutableMap$00602$$$$002Ector$$6623D9B3 as MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3 } from \"./MutableMap\";\nexport const MapTree$00602 = declare(function Map_MapTree(tag, name, ...fields) {\n  this.tag = tag | 0;\n  this.name = name;\n  this.fields = fields;\n}, Union);\nexport function MapTree$00602$reflection($gen$$3, $gen$$4) {\n  return union_type(\"Map.MapTree`2\", [$gen$$3, $gen$$4], MapTree$00602, () => [\"MapEmpty\", [\"MapOne\", [[\"Item1\", $gen$$3], [\"Item2\", $gen$$4]]], [\"MapNode\", [[\"Item1\", $gen$$3], [\"Item2\", $gen$$4], [\"Item3\", MapTree$00602$reflection($gen$$3, $gen$$4)], [\"Item4\", MapTree$00602$reflection($gen$$3, $gen$$4)], [\"Item5\", int32_type]]]]);\n}\nexport function MapTreeModule$$$sizeAux($acc$$5, $m$$6) {\n  MapTreeModule$$$sizeAux: while (true) {\n    const acc = $acc$$5,\n          m = $m$$6;\n\n    switch (m.tag) {\n      case 1:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 2:\n        {\n          $acc$$5 = MapTreeModule$$$sizeAux(acc + 1, m.fields[2]);\n          $m$$6 = m.fields[3];\n          continue MapTreeModule$$$sizeAux;\n        }\n\n      default:\n        {\n          return acc | 0;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$size(x) {\n  return MapTreeModule$$$sizeAux(0, x);\n}\nexport function MapTreeModule$$$empty() {\n  return new MapTree$00602(0, \"MapEmpty\");\n}\nexport function MapTreeModule$$$height(_arg1) {\n  switch (_arg1.tag) {\n    case 1:\n      {\n        return 1;\n      }\n\n    case 2:\n      {\n        return _arg1.fields[4] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport function MapTreeModule$$$isEmpty(m$$1) {\n  if (m$$1.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function MapTreeModule$$$mk(l$$1, k, v, r$$1) {\n  var $target$$14;\n\n  if (l$$1.tag === 0) {\n    if (r$$1.tag === 0) {\n      $target$$14 = 0;\n    } else {\n      $target$$14 = 1;\n    }\n  } else {\n    $target$$14 = 1;\n  }\n\n  switch ($target$$14) {\n    case 0:\n      {\n        return new MapTree$00602(1, \"MapOne\", k, v);\n      }\n\n    case 1:\n      {\n        const hl = MapTreeModule$$$height(l$$1) | 0;\n        const hr = MapTreeModule$$$height(r$$1) | 0;\n        const m$$2 = (hl < hr ? hr : hl) | 0;\n        return new MapTree$00602(2, \"MapNode\", k, v, l$$1, r$$1, m$$2 + 1);\n      }\n  }\n}\nexport function MapTreeModule$$$rebalance(t1, k$$1, v$$1, t2) {\n  const t1h = MapTreeModule$$$height(t1) | 0;\n  const t2h = MapTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + 2) {\n    if (t2.tag === 2) {\n      if (MapTreeModule$$$height(t2.fields[2]) > t1h + 1) {\n        if (t2.fields[2].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2].fields[2]), t2.fields[2].fields[0], t2.fields[2].fields[1], MapTreeModule$$$mk(t2.fields[2].fields[3], t2.fields[0], t2.fields[1], t2.fields[3]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2]), t2.fields[0], t2.fields[1], t2.fields[3]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    if (t1.tag === 2) {\n      if (MapTreeModule$$$height(t1.fields[3]) > t2h + 1) {\n        if (t1.fields[3].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], t1.fields[3].fields[2]), t1.fields[3].fields[0], t1.fields[3].fields[1], MapTreeModule$$$mk(t1.fields[3].fields[3], k$$1, v$$1, t2));\n        } else {\n          throw new Error(\"re  balance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], MapTreeModule$$$mk(t1.fields[3], k$$1, v$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return MapTreeModule$$$mk(t1, k$$1, v$$1, t2);\n  }\n}\nexport function MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3) {\n  switch (m$$3.tag) {\n    case 1:\n      {\n        const c = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c < 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, new MapTree$00602(0, \"MapEmpty\"), m$$3, 2);\n        } else if (c === 0) {\n          return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n        } else {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3, new MapTree$00602(0, \"MapEmpty\"), 2);\n        }\n      }\n\n    case 2:\n      {\n        const c$$1 = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[2]), m$$3.fields[0], m$$3.fields[1], m$$3.fields[3]);\n        } else if (c$$1 === 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3.fields[2], m$$3.fields[3], m$$3.fields[4]);\n        } else {\n          return MapTreeModule$$$rebalance(m$$3.fields[2], m$$3.fields[0], m$$3.fields[1], MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n      }\n  }\n}\nexport function MapTreeModule$$$find($comparer$$1$$23, $k$$3$$24, $m$$4$$25) {\n  MapTreeModule$$$find: while (true) {\n    const comparer$$1 = $comparer$$1$$23,\n          k$$3 = $k$$3$$24,\n          m$$4 = $m$$4$$25;\n\n    switch (m$$4.tag) {\n      case 1:\n        {\n          const c$$2 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$2 === 0) {\n            return m$$4.fields[1];\n          } else {\n            throw new Error(\"key not found\");\n          }\n        }\n\n      case 2:\n        {\n          const c$$3 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$3 < 0) {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[2];\n            continue MapTreeModule$$$find;\n          } else if (c$$3 === 0) {\n            return m$$4.fields[1];\n          } else {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[3];\n            continue MapTreeModule$$$find;\n          }\n        }\n\n      default:\n        {\n          throw new Error(\"key not found\");\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryFind($comparer$$2$$26, $k$$4$$27, $m$$5$$28) {\n  MapTreeModule$$$tryFind: while (true) {\n    const comparer$$2 = $comparer$$2$$26,\n          k$$4 = $k$$4$$27,\n          m$$5 = $m$$5$$28;\n\n    switch (m$$5.tag) {\n      case 1:\n        {\n          const c$$4 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$4 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            return undefined;\n          }\n        }\n\n      case 2:\n        {\n          const c$$5 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$5 < 0) {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[2];\n            continue MapTreeModule$$$tryFind;\n          } else if (c$$5 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[3];\n            continue MapTreeModule$$$tryFind;\n          }\n        }\n\n      default:\n        {\n          return undefined;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition1(comparer$$3, f, k$$5, v$$3, acc1, acc2) {\n  if (f(k$$5, v$$3)) {\n    return [MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc2)];\n  }\n}\nexport function MapTreeModule$$$partitionAux($comparer$$4$$35, $f$$1$$36, $s$$37, $acc_0$$38, $acc_1$$39) {\n  MapTreeModule$$$partitionAux: while (true) {\n    const comparer$$4 = $comparer$$4$$35,\n          f$$1 = $f$$1$$36,\n          s = $s$$37,\n          acc_0 = $acc_0$$38,\n          acc_1 = $acc_1$$39;\n\n    switch (s.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc_0, acc_1);\n        }\n\n      case 2:\n        {\n          const acc$$2 = MapTreeModule$$$partitionAux(comparer$$4, f$$1, s.fields[3], acc_0, acc_1);\n          const acc$$3 = MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc$$2[0], acc$$2[1]);\n          $comparer$$4$$35 = comparer$$4;\n          $f$$1$$36 = f$$1;\n          $s$$37 = s.fields[2];\n          $acc_0$$38 = acc$$3[0];\n          $acc_1$$39 = acc$$3[1];\n          continue MapTreeModule$$$partitionAux;\n        }\n\n      default:\n        {\n          return [acc_0, acc_1];\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition(comparer$$5, f$$2, s$$1) {\n  return MapTreeModule$$$partitionAux(comparer$$5, f$$2, s$$1, MapTreeModule$$$empty(), MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$filter1(comparer$$6, f$$3, k$$8, v$$6, acc$$4) {\n  if (f$$3(k$$8, v$$6)) {\n    return MapTreeModule$$$add(comparer$$6, k$$8, v$$6, acc$$4);\n  } else {\n    return acc$$4;\n  }\n}\nexport function MapTreeModule$$$filterAux($comparer$$7$$48, $f$$4$$49, $s$$2$$50, $acc$$5$$51) {\n  MapTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $comparer$$7$$48,\n          f$$4 = $f$$4$$49,\n          s$$2 = $s$$2$$50,\n          acc$$5 = $acc$$5$$51;\n\n    switch (s$$2.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$5);\n        }\n\n      case 2:\n        {\n          const acc$$6 = MapTreeModule$$$filterAux(comparer$$7, f$$4, s$$2.fields[2], acc$$5);\n          const acc$$7 = MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$6);\n          $comparer$$7$$48 = comparer$$7;\n          $f$$4$$49 = f$$4;\n          $s$$2$$50 = s$$2.fields[3];\n          $acc$$5$$51 = acc$$7;\n          continue MapTreeModule$$$filterAux;\n        }\n\n      default:\n        {\n          return acc$$5;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$filter(comparer$$8, f$$5, s$$3) {\n  return MapTreeModule$$$filterAux(comparer$$8, f$$5, s$$3, MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$spliceOutSuccessor(m$$6) {\n  switch (m$$6.tag) {\n    case 1:\n      {\n        return [m$$6.fields[0], m$$6.fields[1], new MapTree$00602(0, \"MapEmpty\")];\n      }\n\n    case 2:\n      {\n        if (m$$6.fields[2].tag === 0) {\n          return [m$$6.fields[0], m$$6.fields[1], m$$6.fields[3]];\n        } else {\n          const patternInput = MapTreeModule$$$spliceOutSuccessor(m$$6.fields[2]);\n          return [patternInput[0], patternInput[1], MapTreeModule$$$mk(patternInput[2], m$$6.fields[0], m$$6.fields[1], m$$6.fields[3])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n      }\n  }\n}\nexport function MapTreeModule$$$remove(comparer$$9, k$$11, m$$7) {\n  switch (m$$7.tag) {\n    case 1:\n      {\n        const c$$6 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$6 === 0) {\n          return new MapTree$00602(0, \"MapEmpty\");\n        } else {\n          return m$$7;\n        }\n      }\n\n    case 2:\n      {\n        const c$$7 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$7 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[2]), m$$7.fields[0], m$$7.fields[1], m$$7.fields[3]);\n        } else if (c$$7 === 0) {\n          if (m$$7.fields[2].tag === 0) {\n            return m$$7.fields[3];\n          } else if (m$$7.fields[3].tag === 0) {\n            return m$$7.fields[2];\n          } else {\n            const patternInput$$1 = MapTreeModule$$$spliceOutSuccessor(m$$7.fields[3]);\n            return MapTreeModule$$$mk(m$$7.fields[2], patternInput$$1[0], patternInput$$1[1], patternInput$$1[2]);\n          }\n        } else {\n          return MapTreeModule$$$rebalance(m$$7.fields[2], m$$7.fields[0], m$$7.fields[1], MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mem($comparer$$10$$59, $k$$12$$60, $m$$8$$61) {\n  MapTreeModule$$$mem: while (true) {\n    const comparer$$10 = $comparer$$10$$59,\n          k$$12 = $k$$12$$60,\n          m$$8 = $m$$8$$61;\n\n    switch (m$$8.tag) {\n      case 1:\n        {\n          return comparer$$10.Compare(k$$12, m$$8.fields[0]) === 0;\n        }\n\n      case 2:\n        {\n          const c$$8 = comparer$$10.Compare(k$$12, m$$8.fields[0]) | 0;\n\n          if (c$$8 < 0) {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[2];\n            continue MapTreeModule$$$mem;\n          } else if (c$$8 === 0) {\n            return true;\n          } else {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[3];\n            continue MapTreeModule$$$mem;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$iter($f$$6$$62, $m$$9$$63) {\n  MapTreeModule$$$iter: while (true) {\n    const f$$6 = $f$$6$$62,\n          m$$9 = $m$$9$$63;\n\n    switch (m$$9.tag) {\n      case 1:\n        {\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          break;\n        }\n\n      case 2:\n        {\n          MapTreeModule$$$iter(f$$6, m$$9.fields[2]);\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          $f$$6$$62 = f$$6;\n          $m$$9$$63 = m$$9.fields[3];\n          continue MapTreeModule$$$iter;\n          break;\n        }\n\n      default:\n        {\n          void null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryPick($f$$7$$64, $m$$10$$65) {\n  MapTreeModule$$$tryPick: while (true) {\n    const f$$7 = $f$$7$$64,\n          m$$10 = $m$$10$$65;\n\n    switch (m$$10.tag) {\n      case 1:\n        {\n          return f$$7(m$$10.fields[0], m$$10.fields[1]);\n        }\n\n      case 2:\n        {\n          const matchValue$$2 = MapTreeModule$$$tryPick(f$$7, m$$10.fields[2]);\n\n          if (matchValue$$2 == null) {\n            const matchValue$$3 = f$$7(m$$10.fields[0], m$$10.fields[1]);\n\n            if (matchValue$$3 == null) {\n              $f$$7$$64 = f$$7;\n              $m$$10$$65 = m$$10.fields[3];\n              continue MapTreeModule$$$tryPick;\n            } else {\n              return matchValue$$3;\n            }\n          } else {\n            return matchValue$$2;\n          }\n        }\n\n      default:\n        {\n          return undefined;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$exists($f$$8$$66, $m$$11$$67) {\n  MapTreeModule$$$exists: while (true) {\n    const f$$8 = $f$$8$$66,\n          m$$11 = $m$$11$$67;\n\n    switch (m$$11.tag) {\n      case 1:\n        {\n          return f$$8(m$$11.fields[0], m$$11.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$exists(f$$8, m$$11.fields[2]) ? true : f$$8(m$$11.fields[0], m$$11.fields[1])) {\n            return true;\n          } else {\n            $f$$8$$66 = f$$8;\n            $m$$11$$67 = m$$11.fields[3];\n            continue MapTreeModule$$$exists;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$forall($f$$9$$68, $m$$12$$69) {\n  MapTreeModule$$$forall: while (true) {\n    const f$$9 = $f$$9$$68,\n          m$$12 = $m$$12$$69;\n\n    switch (m$$12.tag) {\n      case 1:\n        {\n          return f$$9(m$$12.fields[0], m$$12.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$forall(f$$9, m$$12.fields[2]) ? f$$9(m$$12.fields[0], m$$12.fields[1]) : false) {\n            $f$$9$$68 = f$$9;\n            $m$$12$$69 = m$$12.fields[3];\n            continue MapTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n\n      default:\n        {\n          return true;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$map(f$$10, m$$13) {\n  switch (m$$13.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$13.fields[0], f$$10(m$$13.fields[1]));\n      }\n\n    case 2:\n      {\n        const l2 = MapTreeModule$$$map(f$$10, m$$13.fields[2]);\n        const v2$$16 = f$$10(m$$13.fields[1]);\n        const r2 = MapTreeModule$$$map(f$$10, m$$13.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$13.fields[0], v2$$16, l2, r2, m$$13.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mapi(f$$11, m$$14) {\n  switch (m$$14.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$14.fields[0], f$$11(m$$14.fields[0], m$$14.fields[1]));\n      }\n\n    case 2:\n      {\n        const l2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[2]);\n        const v2$$17 = f$$11(m$$14.fields[0], m$$14.fields[1]);\n        const r2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$14.fields[0], v2$$17, l2$$1, r2$$1, m$$14.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$foldBack($f$$12$$74, $m$$15$$75, $x$$1$$76) {\n  MapTreeModule$$$foldBack: while (true) {\n    const f$$12 = $f$$12$$74,\n          m$$15 = $m$$15$$75,\n          x$$1 = $x$$1$$76;\n\n    switch (m$$15.tag) {\n      case 1:\n        {\n          return f$$12(m$$15.fields[0], m$$15.fields[1], x$$1);\n        }\n\n      case 2:\n        {\n          const x$$2 = MapTreeModule$$$foldBack(f$$12, m$$15.fields[3], x$$1);\n          const x$$3 = f$$12(m$$15.fields[0], m$$15.fields[1], x$$2);\n          $f$$12$$74 = f$$12;\n          $m$$15$$75 = m$$15.fields[2];\n          $x$$1$$76 = x$$3;\n          continue MapTreeModule$$$foldBack;\n        }\n\n      default:\n        {\n          return x$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$fold($f$$13$$77, $x$$4$$78, $m$$16$$79) {\n  MapTreeModule$$$fold: while (true) {\n    const f$$13 = $f$$13$$77,\n          x$$4 = $x$$4$$78,\n          m$$16 = $m$$16$$79;\n\n    switch (m$$16.tag) {\n      case 1:\n        {\n          return f$$13(x$$4, m$$16.fields[0], m$$16.fields[1]);\n        }\n\n      case 2:\n        {\n          const x$$5 = MapTreeModule$$$fold(f$$13, x$$4, m$$16.fields[2]);\n          const x$$6 = f$$13(x$$5, m$$16.fields[0], m$$16.fields[1]);\n          $f$$13$$77 = f$$13;\n          $x$$4$$78 = x$$6;\n          $m$$16$$79 = m$$16.fields[3];\n          continue MapTreeModule$$$fold;\n        }\n\n      default:\n        {\n          return x$$4;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17, x$$7) {\n  switch (m$$17.tag) {\n    case 1:\n      {\n        const cLoKey = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        const cKeyHi = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        const x$$8 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$7) : x$$7;\n        return x$$8;\n      }\n\n    case 2:\n      {\n        const cLoKey$$1 = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        const cKeyHi$$1 = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        const x$$9 = cLoKey$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[2], x$$7) : x$$7;\n        const x$$10 = (cLoKey$$1 <= 0 ? cKeyHi$$1 <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$9) : x$$9;\n        const x$$11 = cKeyHi$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[3], x$$10) : x$$10;\n        return x$$11;\n      }\n\n    default:\n      {\n        return x$$7;\n      }\n  }\n}\nexport function MapTreeModule$$$foldSection(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12) {\n  if (comparer$$12.Compare(lo$$1, hi$$1) === 1) {\n    return x$$12;\n  } else {\n    return MapTreeModule$$$foldFromTo(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12);\n  }\n}\nexport function MapTreeModule$$$loop($m$$19$$92, $acc$$8$$93) {\n  MapTreeModule$$$loop: while (true) {\n    const m$$19 = $m$$19$$92,\n          acc$$8 = $acc$$8$$93;\n\n    switch (m$$19.tag) {\n      case 1:\n        {\n          return new List([m$$19.fields[0], m$$19.fields[1]], acc$$8);\n        }\n\n      case 2:\n        {\n          $m$$19$$92 = m$$19.fields[2];\n          $acc$$8$$93 = new List([m$$19.fields[0], m$$19.fields[1]], MapTreeModule$$$loop(m$$19.fields[3], acc$$8));\n          continue MapTreeModule$$$loop;\n        }\n\n      default:\n        {\n          return acc$$8;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$toList(m$$20) {\n  return MapTreeModule$$$loop(m$$20, new List());\n}\nexport function MapTreeModule$$$ofList(comparer$$13, l$$20) {\n  return fold$$1(function (acc$$9, tupledArg) {\n    return MapTreeModule$$$add(comparer$$13, tupledArg[0], tupledArg[1], acc$$9);\n  }, MapTreeModule$$$empty(), l$$20);\n}\nexport function MapTreeModule$$$mkFromEnumerator($comparer$$14$$97, $acc$$10$$98, $e$$99) {\n  MapTreeModule$$$mkFromEnumerator: while (true) {\n    const comparer$$14 = $comparer$$14$$97,\n          acc$$10 = $acc$$10$$98,\n          e = $e$$99;\n\n    if (e.MoveNext()) {\n      const patternInput$$2 = e.Current;\n      $comparer$$14$$97 = comparer$$14;\n      $acc$$10$$98 = MapTreeModule$$$add(comparer$$14, patternInput$$2[0], patternInput$$2[1], acc$$10);\n      $e$$99 = e;\n      continue MapTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$10;\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$ofArray(comparer$$15, arr) {\n  let res$$2 = MapTreeModule$$$empty();\n\n  for (let i = 0; i <= arr.length - 1; i++) {\n    const patternInput$$3 = arr[i];\n    res$$2 = MapTreeModule$$$add(comparer$$15, patternInput$$3[0], patternInput$$3[1], res$$2);\n  }\n\n  return res$$2;\n}\nexport function MapTreeModule$$$ofSeq(comparer$$16, c$$9) {\n  const ie = getEnumerator(c$$9);\n\n  try {\n    return MapTreeModule$$$mkFromEnumerator(comparer$$16, MapTreeModule$$$empty(), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    } else {\n      void null;\n    }\n  }\n}\nexport function MapTreeModule$$$copyToArray(s$$4, arr$$1, i$$1) {\n  let j = i$$1 | 0;\n  MapTreeModule$$$iter(function f$$16(x$$15, y$$2) {\n    arr$$1[j] = [x$$15, y$$2];\n    j = j + 1;\n  }, s$$4);\n}\nexport const MapTreeModule$002EMapIterator$00602 = declare(function Map_MapTreeModule_MapIterator(stack, started) {\n  this.stack = stack;\n  this.started = started;\n}, Record);\nexport function MapTreeModule$002EMapIterator$00602$reflection($gen$$109, $gen$$110) {\n  return record_type(\"Map.MapTreeModule.MapIterator`2\", [$gen$$109, $gen$$110], MapTreeModule$002EMapIterator$00602, () => [[\"stack\", list_type(MapTree$00602$reflection($gen$$109, $gen$$110))], [\"started\", bool_type]]);\n}\nexport function MapTreeModule$$$collapseLHS($stack$$111) {\n  MapTreeModule$$$collapseLHS: while (true) {\n    const stack = $stack$$111;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 1) {\n        return stack;\n      } else if (stack.head.tag === 2) {\n        $stack$$111 = new List(stack.head.fields[2], new List(new MapTree$00602(1, \"MapOne\", stack.head.fields[0], stack.head.fields[1]), new List(stack.head.fields[3], stack.tail)));\n        continue MapTreeModule$$$collapseLHS;\n      } else {\n        $stack$$111 = stack.tail;\n        continue MapTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$mkIterator(s$$5) {\n  return new MapTreeModule$002EMapIterator$00602(MapTreeModule$$$collapseLHS(new List(s$$5, new List())), false);\n}\nexport function MapTreeModule$$$notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nexport function MapTreeModule$$$alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nexport function MapTreeModule$$$current(i$$2) {\n  if (i$$2.started) {\n    const matchValue$$4 = i$$2.stack;\n\n    if (matchValue$$4.tail == null) {\n      return MapTreeModule$$$alreadyFinished();\n    } else if (matchValue$$4.head.tag === 1) {\n      return [matchValue$$4.head.fields[0], matchValue$$4.head.fields[1]];\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n  } else {\n    return MapTreeModule$$$notStarted();\n  }\n}\nexport function MapTreeModule$$$moveNext(i$$3) {\n  if (i$$3.started) {\n    const matchValue$$5 = i$$3.stack;\n\n    if (matchValue$$5.tail == null) {\n      return false;\n    } else if (matchValue$$5.head.tag === 1) {\n      i$$3.stack = MapTreeModule$$$collapseLHS(matchValue$$5.tail);\n      return !(i$$3.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$3.started = true;\n    return !(i$$3.stack.tail == null);\n  }\n}\nexport const MapTreeModule$002EmkIEnumerator$0027$00602 = declare(function Map_MapTreeModule_mkIEnumerator_(s$$6) {\n  const $this$$1 = this;\n  $this$$1.s = s$$6;\n  $this$$1.i = MapTreeModule$$$mkIterator($this$$1.s);\n  void null;\n});\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$reflection($gen$$115, $gen$$116) {\n  return class_type(\"Map.MapTreeModule.mkIEnumerator'`2\", [$gen$$115, $gen$$116], MapTreeModule$002EmkIEnumerator$0027$00602);\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$6) {\n  return this instanceof MapTreeModule$002EmkIEnumerator$0027$00602 ? MapTreeModule$002EmkIEnumerator$0027$00602.call(this, s$$6) : new MapTreeModule$002EmkIEnumerator$0027$00602(s$$6);\n}\nObject.defineProperty(MapTreeModule$002EmkIEnumerator$0027$00602.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return MapTreeModule$$$current(__.i);\n  }\n});\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return MapTreeModule$$$moveNext(__$$1.i);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = MapTreeModule$$$mkIterator(__$$2.s);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Dispose = function () {\n  void null;\n};\n\nexport function MapTreeModule$$$mkIEnumerator(s$$7) {\n  return MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$7);\n}\nexport function MapTreeModule$$$toSeq(s$$8) {\n  const en = MapTreeModule$$$mkIEnumerator(s$$8);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return undefined;\n    }\n  }, en);\n}\nexport const FSharpMap = declare(function Map_Map(comparer$$17, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$17;\n  $this$$2.tree = tree;\n  void null;\n});\nexport function FSharpMap$reflection($gen$$120, $gen$$121) {\n  return class_type(\"Map.FSharpMap\", [$gen$$120, $gen$$121], FSharpMap);\n}\nexport function FSharpMap$$$$002Ector$$58ADD115(comparer$$17, tree) {\n  return this instanceof FSharpMap ? FSharpMap.call(this, comparer$$17, tree) : new FSharpMap(comparer$$17, tree);\n}\nexport function FSharpMap$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpMap$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpMap$$Add$$5BDDA1(__$$6, k$$28, v$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$6.comparer, MapTreeModule$$$add(__$$6.comparer, k$$28, v$$24, __$$6.tree));\n}\nexport function FSharpMap$$get_IsEmpty(__$$7) {\n  return MapTreeModule$$$isEmpty(__$$7.tree);\n}\nexport function FSharpMap$$get_Item$$2B595(__$$8, k$$29) {\n  return MapTreeModule$$$find(__$$8.comparer, k$$29, __$$8.tree);\n}\nexport function FSharpMap$$TryGetValue$$5BDDA1(__$$9, k$$30, defValue) {\n  const matchValue$$6 = MapTreeModule$$$tryFind(__$$9.comparer, k$$30, __$$9.tree);\n\n  if (matchValue$$6 == null) {\n    return [false, defValue];\n  } else {\n    const v$$25 = value$$3(matchValue$$6);\n    return [true, v$$25];\n  }\n}\nexport function FSharpMap$$TryPick$$72321DD7(__$$10, f$$17) {\n  return MapTreeModule$$$tryPick(f$$17, __$$10.tree);\n}\nexport function FSharpMap$$Exists$$Z395DDC35(__$$11, f$$18) {\n  return MapTreeModule$$$exists(f$$18, __$$11.tree);\n}\nexport function FSharpMap$$Filter$$Z395DDC35(__$$12, f$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$12.comparer, MapTreeModule$$$filter(__$$12.comparer, f$$19, __$$12.tree));\n}\nexport function FSharpMap$$ForAll$$Z395DDC35(__$$13, f$$20) {\n  return MapTreeModule$$$forall(f$$20, __$$13.tree);\n}\nexport function FSharpMap$$Fold(__$$14, f$$21, acc$$11) {\n  return MapTreeModule$$$foldBack(f$$21, __$$14.tree, acc$$11);\n}\nexport function FSharpMap$$FoldSection(__$$15, lo$$2, hi$$2, f$$22, acc$$12) {\n  return MapTreeModule$$$foldSection(__$$15.comparer, lo$$2, hi$$2, f$$22, __$$15.tree, acc$$12);\n}\nexport function FSharpMap$$Iterate$$1DCFB91D(__$$16, f$$23) {\n  MapTreeModule$$$iter(f$$23, __$$16.tree);\n}\nexport function FSharpMap$$MapRange$$6DC7247(__$$17, f$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$17.comparer, MapTreeModule$$$map(f$$24, __$$17.tree));\n}\nexport function FSharpMap$$Map$$Z6F6B671C(__$$18, f$$25) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, MapTreeModule$$$mapi(f$$25, __$$18.tree));\n}\nexport function FSharpMap$$Partition$$Z395DDC35(__$$19, f$$26) {\n  const patternInput$$4 = MapTreeModule$$$partition(__$$19.comparer, f$$26, __$$19.tree);\n  return [FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[0]), FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[1])];\n}\nexport function FSharpMap$$get_Count(__$$20) {\n  return MapTreeModule$$$size(__$$20.tree);\n}\nexport function FSharpMap$$ContainsKey$$2B595(__$$21, k$$31) {\n  return MapTreeModule$$$mem(__$$21.comparer, k$$31, __$$21.tree);\n}\nexport function FSharpMap$$Remove$$2B595(__$$22, k$$32) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$22.comparer, MapTreeModule$$$remove(__$$22.comparer, k$$32, __$$22.tree));\n}\nexport function FSharpMap$$TryFind$$2B595(__$$23, k$$33) {\n  return MapTreeModule$$$tryFind(__$$23.comparer, k$$33, __$$23.tree);\n}\nexport function FSharpMap$$ToList(__$$24) {\n  return MapTreeModule$$$toList(__$$24.tree);\n}\n\nFSharpMap.prototype.toString = function () {\n  const this$ = this;\n  let str;\n  let strings;\n  strings = map$$2(function toStr(kv) {\n    return format(\"({0}, {1})\", kv[0], kv[1]);\n  }, this$);\n  str = join(\"; \", strings);\n  return \"map [\" + str + \"]\";\n};\n\nFSharpMap.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$16, y$$3) {\n    return (x$$16 << 1) + y$$3 + 631;\n  };\n\n  let res$$3 = 0;\n  const e$$1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const patternInput$$5 = e$$1.Current;\n    const activePatternResult3705 = patternInput$$5;\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3705[0]));\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3705[1]));\n  }\n\n  return Math.abs(res$$3) | 0;\n};\n\nFSharpMap.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return this$$$2.CompareTo(that) === 0;\n};\n\nFSharpMap.prototype[Symbol.iterator] = function () {\n  const __$$25 = this;\n  return toIterator(MapTreeModule$$$mkIEnumerator(__$$25.tree));\n};\n\nFSharpMap.prototype.CompareTo = function (obj) {\n  const m$$22 = this;\n  let res$$4 = 0;\n  let finished = false;\n  const e1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m$$22));\n\n  try {\n    const e2 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(obj));\n\n    try {\n      while (!finished ? res$$4 === 0 : false) {\n        const matchValue$$7 = [e1.MoveNext(), e2.MoveNext()];\n\n        if (matchValue$$7[0]) {\n          if (matchValue$$7[1]) {\n            const kvp1 = e1.Current;\n            const kvp2 = e2.Current;\n            const c$$10 = m$$22.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n            res$$4 = c$$10 !== 0 ? c$$10 : compare(kvp1[1], kvp2[1]);\n          } else {\n            res$$4 = 1;\n          }\n        } else if (matchValue$$7[1]) {\n          res$$4 = -1;\n        } else {\n          finished = true;\n        }\n      }\n\n      return res$$4 | 0;\n    } finally {\n      if (isDisposable(e2)) {\n        e2.Dispose();\n      } else {\n        void null;\n      }\n    }\n  } finally {\n    if (isDisposable(e1)) {\n      e1.Dispose();\n    } else {\n      void null;\n    }\n  }\n};\n\nObject.defineProperty(FSharpMap.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$3 = this;\n    return FSharpMap$$get_Count(this$$$3) | 0;\n  }\n});\n\nFSharpMap.prototype.clear = function () {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.delete = function (_arg1$$1) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.entries = function () {\n  const this$$$4 = this;\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$4));\n};\n\nFSharpMap.prototype.get = function (k$$34) {\n  const this$$$5 = this;\n  return FSharpMap$$get_Item$$2B595(this$$$5, k$$34);\n};\n\nFSharpMap.prototype.has = function (k$$35) {\n  const this$$$6 = this;\n  return FSharpMap$$ContainsKey$$2B595(this$$$6, k$$35);\n};\n\nFSharpMap.prototype.keys = function () {\n  const this$$$7 = this;\n  const source$$1 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$7));\n  return map$$2(function mapping(kv$$1) {\n    return kv$$1[0];\n  }, source$$1);\n};\n\nFSharpMap.prototype.set = function (k$$36, v$$26) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.values = function () {\n  const this$$$8 = this;\n  const source$$2 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$8));\n  return map$$2(function mapping$$1(kv$$2) {\n    return kv$$2[1];\n  }, source$$2);\n};\n\nexport function isEmpty(m$$23) {\n  return FSharpMap$$get_IsEmpty(m$$23);\n}\nexport function add(k$$37, v$$27, m$$24) {\n  return FSharpMap$$Add$$5BDDA1(m$$24, k$$37, v$$27);\n}\nexport function find(k$$38, m$$25) {\n  return FSharpMap$$get_Item$$2B595(m$$25, k$$38);\n}\nexport function tryFind(k$$39, m$$26) {\n  return FSharpMap$$TryFind$$2B595(m$$26, k$$39);\n}\nexport function remove(k$$40, m$$27) {\n  return FSharpMap$$Remove$$2B595(m$$27, k$$40);\n}\nexport function containsKey(k$$41, m$$28) {\n  return FSharpMap$$ContainsKey$$2B595(m$$28, k$$41);\n}\nexport function iterate(f$$27, m$$29) {\n  FSharpMap$$Iterate$$1DCFB91D(m$$29, f$$27);\n}\nexport function tryPick(f$$28, m$$30) {\n  return FSharpMap$$TryPick$$72321DD7(m$$30, f$$28);\n}\nexport function pick(f$$29, m$$31) {\n  const matchValue$$8 = tryPick(f$$29, m$$31);\n\n  if (matchValue$$8 != null) {\n    const res$$5 = value$$3(matchValue$$8);\n    return res$$5;\n  } else {\n    throw new Error(\"key not found\");\n  }\n}\nexport function exists(f$$30, m$$32) {\n  return FSharpMap$$Exists$$Z395DDC35(m$$32, f$$30);\n}\nexport function filter(f$$31, m$$33) {\n  return FSharpMap$$Filter$$Z395DDC35(m$$33, f$$31);\n}\nexport function partition(f$$32, m$$34) {\n  return FSharpMap$$Partition$$Z395DDC35(m$$34, f$$32);\n}\nexport function forAll(f$$33, m$$35) {\n  return FSharpMap$$ForAll$$Z395DDC35(m$$35, f$$33);\n}\nexport function mapRange(f$$34, m$$36) {\n  return FSharpMap$$MapRange$$6DC7247(m$$36, f$$34);\n}\nexport function map(f$$35, m$$37) {\n  return FSharpMap$$Map$$Z6F6B671C(m$$37, f$$35);\n}\nexport function fold(f$$36, z, m$$38) {\n  return MapTreeModule$$$fold(f$$36, z, FSharpMap$$get_Tree(m$$38));\n}\nexport function foldBack(f$$37, m$$39, z$$1) {\n  return MapTreeModule$$$foldBack(f$$37, FSharpMap$$get_Tree(m$$39), z$$1);\n}\nexport function toSeq(m$$40) {\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(m$$40));\n}\nexport function findKey(f$$38, m$$41) {\n  let _arg1$$2;\n\n  const m$$42 = FSharpMap$$get_Tree(m$$41);\n  _arg1$$2 = MapTreeModule$$$tryPick(function f$$39(k$$42, v$$28) {\n    if (f$$38(k$$42, v$$28)) {\n      return some(k$$42);\n    } else {\n      return undefined;\n    }\n  }, m$$42);\n\n  if (_arg1$$2 == null) {\n    throw new Error(\"Key not found\");\n  } else {\n    const k$$43 = value$$3(_arg1$$2);\n    return k$$43;\n  }\n}\nexport function tryFindKey(f$$40, m$$43) {\n  const m$$44 = FSharpMap$$get_Tree(m$$43);\n  return MapTreeModule$$$tryPick(function f$$41(k$$44, v$$29) {\n    if (f$$40(k$$44, v$$29)) {\n      return some(k$$44);\n    } else {\n      return undefined;\n    }\n  }, m$$44);\n}\nexport function ofList(l$$22, comparer$$18) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$18, MapTreeModule$$$ofList(comparer$$18, l$$22));\n}\nexport function ofSeq(l$$23, comparer$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$19, MapTreeModule$$$ofSeq(comparer$$19, l$$23));\n}\nexport function ofArray(array, comparer$$20) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$20, MapTreeModule$$$ofArray(comparer$$20, array));\n}\nexport function toList(m$$45) {\n  return FSharpMap$$ToList(m$$45);\n}\nexport function toArray(m$$46) {\n  let res$$6;\n  const len = FSharpMap$$get_Count(m$$46) | 0;\n  res$$6 = new Array(len);\n  MapTreeModule$$$copyToArray(FSharpMap$$get_Tree(m$$46), res$$6, 0);\n  return res$$6;\n}\nexport function empty(comparer$$21) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$21, new MapTree$00602(0, \"MapEmpty\"));\n}\n\nfunction createMutablePrivate(comparer$$22, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return MapTreeModule$$$size(tree$$1);\n    },\n\n    clear() {\n      tree$$1 = new MapTree$00602(0, \"MapEmpty\");\n    },\n\n    delete(x$$18) {\n      if (MapTreeModule$$$mem(comparer$$22, x$$18, tree$$1)) {\n        tree$$1 = MapTreeModule$$$remove(comparer$$22, x$$18, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    entries() {\n      return MapTreeModule$$$toSeq(tree$$1);\n    },\n\n    get(k$$45) {\n      return MapTreeModule$$$find(comparer$$22, k$$45, tree$$1);\n    },\n\n    has(x$$19) {\n      return MapTreeModule$$$mem(comparer$$22, x$$19, tree$$1);\n    },\n\n    keys() {\n      const source$$3 = MapTreeModule$$$toSeq(tree$$1);\n      return map$$2(function mapping$$2(kv$$3) {\n        return kv$$3[0];\n      }, source$$3);\n    },\n\n    set(k$$46, v$$30) {\n      const this$$$9 = this;\n      tree$$1 = MapTreeModule$$$add(comparer$$22, k$$46, v$$30, tree$$1);\n      return this$$$9;\n    },\n\n    values() {\n      const source$$4 = MapTreeModule$$$toSeq(tree$$1);\n      return map$$2(function mapping$$3(kv$$4) {\n        return kv$$4[1];\n      }, source$$4);\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(MapTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return MapTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source$$5, comparer$$23) {\n  const map$$1 = MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3(source$$5, comparer$$23);\n  return map$$1;\n}\nexport function groupBy(projection, xs, comparer$$24) {\n  const dict = createMutable(empty$$1(), comparer$$24);\n  iterate$$1(function (v$$31) {\n    const key = projection(v$$31);\n\n    if (dict.has(key)) {\n      void dict.get(key).push(v$$31);\n    } else {\n      const value = dict.set(key, [v$$31]);\n      void value;\n    }\n  }, xs);\n  return map$$2(function mapping$$4(kv$$5) {\n    return [kv$$5[0], kv$$5[1]];\n  }, dict);\n}\nexport function countBy(projection$$1, xs$$1, comparer$$25) {\n  const dict$$1 = createMutable(empty$$1(), comparer$$25);\n  iterate$$1(function (value$$1) {\n    const key$$1 = projection$$1(value$$1);\n    const value$$2 = dict$$1.has(key$$1) ? dict$$1.set(key$$1, dict$$1.get(key$$1) + 1) : dict$$1.set(key$$1, 1);\n    void value$$2;\n  }, xs$$1);\n  return map$$2(function mapping$$5(kv$$6) {\n    return [kv$$6[0], kv$$6[1]];\n  }, dict$$1);\n}\nexport function count(m$$47) {\n  return FSharpMap$$get_Count(m$$47);\n}","export function tryParse(str) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            return [true, v];\n        }\n    }\n    return [false, 0];\n}\nexport function parse(str) {\n    const [ok, value] = tryParse(str);\n    if (ok) {\n        return value;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n//# sourceMappingURL=Double.js.map"],"sourceRoot":""}